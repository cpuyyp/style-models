You can use either or to access the header. This is the standard way to access pretty well any header you want to access. The variant is the raw undecoded header, while the has been decoded. There is also a header which is part way between the two. These are documented in the chapter of the Exim specification. I write the subject into a database using the column assignment 

Sendmail does not do synchronous sending of emails. The most common problem is delays in doing DNS lookups. It may also be delays in doing verification of some of the data you are supplying. Sendmail is likely verifying: the address provided in the HELO message, the email address the mail is supposed to be coming from, or the destination address. Try running an email session using telnet from your web server. You should see where the delay is quickly. 

The Public web server should use the Public DNS. If possible, you want the web server in a DMZ. Depending on how your network addressing is done, you may want the external name pointing to the internal IP address on the internal IP address. The Public DNS should have the IP address required to access the server from the Internet. If you use NAT or a proxy, this may not be the address of the web server. Unless you want the Database server accessible from the Internet, it should be on the internal network and use the internal DNS. It is relatively rare that you would want the server accessible from the Internet. Depending on the contents, their may be obligations to secure the database against access from the Internet. The value of the can be whatever you want, but should be an internal name. It is common to have services with their own name which is distinct from the name of the host on which they run. Separating the service name from the host name facilitates moving or scaling the service. If you add the addresses to use the internal DNS addresses. Anything in this file should be the same value as the host would get from DNS. Unless your internal DNS is unreliable, it should not be necessary to include the addresses there. In my case I use as my internal DNS, and it is configured from a file. This makes it very easy to have for IP addresses. If you do put the addresses in the hosts file, try to automate the update so you don't have to edit every servers file manually. Manual edits tend to be error prone, and you want to do as few as possible. 

It looks like it can't read the key file. You should have an unpassworded key. Add openldap to the ssl-cert group. Make the group on the key ssl-cert and the permissions 440. The openssl s_client command can be used to debug tls issues. 

The complexity of the daemon is not really the issue. The frequency of use is. xinetd allows you to get increased logging, and depending on the configuration an extra layer of security. All of the daemons you mentioned can be and are run under a super server in some configurations. If you rarely use the daemon consider running it under the super server. This will allow you to reduce the number of daemons running and the resulting overhead. inetd and xinetd have some very simple services built in. These services should be disabled unless needed. Other services don't have a daemon interface, so must be run by a super server. Many services which have network daemon capabilities, have flags which tell them they are running under inetd. You should consider startup overhead and configuration stability before running daemons under a super server. A heavy startup overhead is one reason to run a rarely used service as a daemon. The services you listed are usually relatively heavily used when installed, so are run as daemons. Apache is optimized to run as a daemon. If it is used much it is best run as a deamon. Mail servers generally fork a new server for each incoming call, which has low overhead on most OSs. If it isn't used as a mail hub or delivery from remote sites it shouldn't be listening on any address other than localhost. It doesn't need to do that unless you have programs running on the server which use TCP/IP to send email via localhost. sshd has relatively low startup overhead, except for random data for encryption. It does require a fair bit of random data, which may not be readily available if run under a super server. 

While it may require some site modifications, you may want to consider moving static content to a separate domain/server. This would include content such as javascript, css, and images. This server should receive simpler requests devoid of cookies and authentication. As your site grows this site should be easy to scale up by cloning the server and adding additional IP addresses for the domain. Dynamic content tends to be more difficult to scale out. This gets more difficult if you have sessions to track. Unless you tie users with sessions to a particular server, you will need to look at session replication. As your site grows you will eventually need to look at scaling your database. Replication is one approach and works well for read-only or mostly read access. 

If you have a several users in the same group that need to write the directory, then yiou want 770 or 775. (Which should apply to your admins.) Use 770 if you only want the group to be able to read the directory. If you want all users to be able to read the directory use 775. Chgrp the directory to a group that only the admins belong to. 

Characters most likely to cause problems are ESC(27), SI(14), SO(15), and DC-3/X-OFF(19). Some terminals support CSI(155 = 128 + 27) as a short form for introducing ESCape sequences. Escape (ESC) introduces control sequences. Shift-In (SI) and shift-out (SO) can change character sets and other functionality. X-OFF (DC3) may stop the terminal from sending any data. Bell (8) may be noisy. You may want to filter non-formatting control-characters in the range under decimal 32. Most used formatting characters are TAB(9), LF(10), CR(13), and FF(12). BS(7) and VT(11) are less commonly used now. Control characters are arranged in groups by functionality which could make filtering easier. Existing tools already handle the problem fairly well. Consider aliasing one of them as cat. This can break command chains. You can always get the raw cat back by prefixing the command with a backslash. will fix the terminal if you end up in the wrong character set. 

I would hope postfix would have similar functionality the address functionality provided by Exim. It is possible add addresses or mark them delivered while they are held. Then when they are reprocessed, the delivery will go to the correct address. The data requiring changing is only the envelope data. (Although if it is going to customer service you may want to notify them of the change.) This is similar to the postman correcting the address on mail sent to the wrong street number. EDIT: It appears you may be able to use virtual aliases to get the message delivered to you so you can re-inject it. 

Normally, a default site is defined within a virtualhost definition. This catches any request that are not otherwise configured. See /etc/apache2/sites-available/default for an example. This should be symlinked to /etc/apache2/sites-enabled. In your case the default server should catch nothing, so you may want to set it up to show an appropriate page. 

/srv has started to be used for things like web servers. However, as you are using apache you can block access to /var/www/www.example.com on the default virtual server. With Apache you can restrict access directory by directory either by ip or password. You can also require both a matching ip and a password if necessary. Unless you are modifying the files from a process on the web server, the directories and files should not be owned by or writable by the apache servers user id. 

Using a firewall to force transparent proxy access on localhost will require some additional parameters to ignore traffic from squid. 

Having watched a system slowly die due to a memory leak, I can confirm that free memory is always required. UNIX/Linux requires some free memory to load programs. Unix tends to do a lot of process creation, and uses free memory to load these programs. If you don't have free memory process execution will be very slow as memory will need to be reclaimed before the program can be reloaded. Shared memory helps a lot as many programs can use the same read-only memory pages. However, writable pages need to be allocated on a per process basis. Disk buffers also help as the code needed may already be in memory. For long running programs it is OK if initialization and shutdown code is paged out. This assumes the memory pages for this code are not shared by code which is actively used. Some programs may have rarely used code which can be swapped out. Programs which run rarely can also swap out with minimal impact. Once you start to actively swap pages in and out of memory performance will degrade severely. 

This answer is generic, rather than specific to Mailjet. I am not familiar with that particular software, but I am all to familiar with being on the receiving side of automated deliveries. The first thing I would to is ensure your rDNS validates and your mail server identifies itself with that domain name. Also make sure your mail server accepts messages to , , and the envelope address you are using. I would expect you are paying the cost of a higher delivery rate. Given the time taken without the SMTP server, I would expect you had a number of failed deliveries to servers which avoid accepting SPAM. Some of the problems you would encounter sending my server mail: 

You should not be leaking private (rfc 1918) addresses to the Internet. For you ISP provided IP address, contact your ISP and have them set up a PTR record for you. It is likely they will only accept one name for the each PRT record. Most routers route for an entire /24 address block, but only provide DHCP addresses for a portion of the zone. Other than the routers address, the broadcast (.255) address, and network (.0) address, the rest of the non-DHCP addresses can be used for fixed address devices. You may want to renumber your devices into this range or configure your route to use your (10.0.0.0/24) address block. You may find simpler to setup than . It can read your file and will provide forward and reverse look-ups based on its contents. Whichever you choose, configure your router to supply the address of the server running your DNS server. If you use , you need to add a zone for to your configuration. This should be accessible only from within your network. Something like this should work: