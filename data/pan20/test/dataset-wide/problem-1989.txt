First off, if you work in the United States, you are protected by the laws against workplace sexual harassment. You don't have to be targeted by the harassment. You don't have to feel discriminated against. All you have to feel is uncomfortable, which you obviously do if this behavior is leading you to look for other employment. The banter creates a "hostile work environment", in violation of U.S. labor law. You don't even have to mention the new co-worker trying to fit in; this behavior has affected you personally. This sounds like an extremely small company, if the owner of the company regularly mingles with the people he pays on a personal level. So, I'm going to assume there isn't an HR department to take your concerns to. You do still have a boss, even if that guy is the owner of the company that's joining in. Make your position clear; the humor is uncomfortable and (if you want to mention you're leaving because of it) that it has influenced your decision to seek other work. Your boss is required by law to do something about it once you have reported it. If your boss doesn't act, he and his company are liable for any damages caused by this behavior (to you or others; this includes the cost of finding a new job, compensation for any pay cut you may have taken to get the hell out, lost wages between the end of your current job and the start of your new one, increased travel costs for a longer commute, etc). Take your case to the EEOC; put the company on record as having a history of discriminatory behavior. You may not stay with the company (and thus be suffering damages) long enough for the case to be settled, but you start a paper trail that will stay with the company as long as it exists; if this behavior is repeated and another report is filed, the EEOC will see very quickly that these aren't isolated incidents and will put the company under a microscope. 

It sounds like you're doing some Agile-ish things, but not all of it. Agile allows for flexibility in how you manage your teams, but there are things that simply must all happen in Agile, however you do them, and there's one ball that's critical to Agile which you're dropping; fast feedback. You want the daily stand-up. Everyone gathers in a circle around a burn-down chart and tells everyone else what they got done since the last stand-up. This is a good thing for everyone; the devs get a daily sense of accomplishment, and you get daily data on what's on-schedule and what's not. If adjustments need to be made, this is where you learn that. Now, in this standup, as a project manager, you are not an active participant. You are a "chicken". The developers, and any business analyst or QA staff you have, are "pigs". The analogy comes from a joke: 

As you can see, a Meeting Code of Conduct doesn't have to be verbose, detailed or overly binding. Pretty much all of the above is little more than common courtesy, and to be expected in any professional interpersonal situation. 

Honestly, if whoever or whatever is sending the replies isn't bothering to take the time to actually read them and craft a meaningful response, I would decline and move on. How do you know this auto-reply HR isn't the kind of thing you'll have to deal with if/when you get hired? 

First off, this is why I don't like HR interviews. If the guy who will actually tell you what to do each day is too busy to pick his own people, and instead lets a department more concerned with what they'll be paying you than what you're actually capable of do the interviewing, then he deserves the people he gets. In my experience most in-house HR are busier than the hiring manager, and virtually ignorant of the skills required for the job and how to make an applicant demonstrate he has them. Rant over. I agree with many that this is a rehash of the classic "what's your biggest weakness". It's a question designed to force the applicant to do some self-examination, and to give an answer other than one that implies he walks on water and you're a fool for not having given him a job offer already. Obviously, since it's so common, its purpose has been perverted, and the answer is more often than not a better measure of how well the applicant can be good-naturedly self-deprecating, and also how well he can spin. One good canned answer is "My greatest challenge in the workplace is knowing when to call it a day". Depending on your personality it can be an honest answer; a lot of junior and even senior programmers like their job enough, at least at first, that they'll end up working 10 and 12-hour days regularly just by being plugged in solving a problem, then looking up to see everyone gone and both hands on the clock pointing straight up. Long-term, this isn't good for you; it leads to burnout which can be a career-killing problem. But, as an answer, this answer tells your interviewer that you like the work, and are willing to commit to it heavily. 

It's also possible that you don't have any room for evolution in this particular company, in which case you should leave. It's also possible that you don't want to do something radically different, you just don't feel like working in that team or on that project or in that company anymore. Perhaps it's the neighbourhood, the color of the walls, perhaps it's something else; anyway your feelings of boredom and guiltiness are telling you that you don't want to keep on those tracks anymore. Do you see yourself stuck in that situation, having to do something that doesn't bring you any fun by now, and does not challenge your intellect anymore to the point that you're just bored to death about it, afraid to talk about your boredom with your boss, until you retire? If not, it might indeed be time to make a change. 

Those criterias have no solid foundation at all, and are in no way related to the quality of the work you'll provide. Lastly, you say: 

Two possibilities. If you're an employee, figuring out a way to do your work 10 times faster is your problem. Your employer has hired you for a task in exchange for a salary. If the task is done, you deserve the salary. End of story. Why? Because the crazy amount of studies you put yourself into, and which today allows you to be that performant, doesn't belong to your employer. It belongs to you. So if your employer wants you to get more done, he has to pay more. Automation is not work you did today, it's work you did years before and which enables you to be over-performing today. If you're an associate, then the company's interests are aligned with your interests. Then you should act accordingly. The fact that your employer gives you a salary and no capital in exchange for your work proves that your interests are not aligned with the company's interests. If your employer is not happy with that, he can either: 

There are two things to consider and as requested, I'll try to make a general answer. First, the question of how will you get your first contract. Freelancers usually use references and previous work to get contracts. You claim you have no references in this field and no "real" previous work. So you can count only on your persuading skills. You should begin with small projects first so that you can easier convince a potential customer to go with you, and it will allow you to build a portfolio which can get you more contracts later. Second, the question of how you will manage to satisfy your first customer. Suppose you managed to get a contract, congrats: 1/10 of the work is done. Because now you have to deliver so that this first experience translates into a reliable reference. All that said, regarding your question or whether "you're ready or not" - I've seen many freelancers claiming to be "experts" in such field, and it appeared they were really not that proficient. It doesn't mean that you have to do the same and it's not intended to make people lower their mediocrity acceptance threshold. Just that if you have sufficient soft skills and you kind-of know your way in the technical stuff you want to use, then it seems quite doable to get your first contracts. Technically speaking, don't listen to people bashing at freelancers who are in the habit of "learning stuff at the expense of their customers". People (freelancers, employee) are always learning things at the expense of their customers/employers. Except the ones that decide to settle. 

To me, it simply looks like you've got bored to death with your job. You already proved you can do what's expected from you now and now it's done you don't have the energy to repeat yourself. The good news is it's a sign of intellectual strength - you're just not a code monkey and you can deliver only when the job represents a challenge to you. So go ahead and talk with your boss, but not about your underperformance. Rather about the fact that you performed really well with your current level of assignments, and that your boss could use this ability to a higher level. Your sense of guiltiness may not come from your underperformance but from your inability to take a bold move and say : 

This is one thing that Agile was intended to solve; preventing the development team from having to chase changing priorities and put out fires. All the turbulence of those changes happens on the backlog items the team has not taken up yet. Once it's out for development, de-prioritizing it has major consequences for the development team and so such actions should be prevented except in extraordinary circumstances. This is one Agile practice that's relatively straightforward to implement all by itself, if maybe not "easy". Speaking to you as if you are the IT manager: 

Firm or company holidays are typically days on which it is infeasible for the company to try to do any business above and beyond the absolute bare minimum; therefore, why not give the employees the day off anyway. For our company, which does alarm verification, most employees get the standard holidays (Memorial Day, 4th of July, Labor Day, Thanksgiving, Black Friday, Christmas Eve, Christmas Day, New Year's Eve, New Year's Day, plus one "flex" holiday you could use for something like Good Friday or Veteran's Day), but if you work in our alarm center, you're eligible to take a shift even on Thanksgiving or Christmas Day, and if you've worked here less than 90 days you don't even get paid time-and-a-half to do it. If you're Jewish, for instance, and you would rather take off on the High Holy Days than on Thanksgiving or Christmas, depending on the employer I think they could work with you. However, you'd have to have work worth doing on the "normal" US holidays; jobs like sales or helpdesk are going to be dead whether you're there or not. Jobs like coding, you could probably stack up a day's heads-down coding without needing managerial or end-user input. 

Typically, a team that is neither growing nor turning over will have a deficiency in all of the following areas: 

Bob is in the unenviable position of being shoved down (maybe sideways), but not out, and the decision is not of his choosing. If he were moving up beyond his current post, or even leaving for greener pastures (as long as his relationship with his own bosses is still good), both of you would have an easier time as he'd be much more willing to groom you for your new position as his replacement. However, this situation boils down to Bob training you for a job he doesn't want to leave, and maybe even training you to be his new boss. That situation balances on a knife's edge, and Bob holds the whetstone. Ideally, he'd be as professional as possible about this, and share everything that he knows you don't know about how to do this new job. You'll have to make sure he knows that you don't know something, meaning the success of this transition depends on unknown unknowns; things neither you nor Bob know that you don't know. The more likely situation is that Bob's resentment will get the better of him, and he'll try, even unconsciously, to sabotage you by withholding information or providing misinformation. Unless you catch him in a known misstatement of fact, or an omission of something you happen to already know but that he should have made sure you knew, you may never know he's doing this (he may not even realize it himself) until it's too late and you've been surprised by something that got away from you because of this deception. The best solution for you in general is to not rely solely on Bob's information. He may have some useful tidbits, but for you to be confident he's not hiding something, you need some independent verification. Talk to the people Bob works with, those he may supervise, and Bob's own bosses. Talk to Bob's technical contacts outside the company (everyone in this kind of job has an "in" with a vendor or consultant). That means that overall, you have to drive this transition. It's your job now, so you have to step up and figure out how to do it.