Do you have the capacity to do it without impacting your work? If not it needs to be pushed to someone who can help manage that aspect too (PM, managers etc). If you do have the capacity I'd simply ask your colleague about her work load and let her know that you can have some capacity to help out if she needs any help small or large. The point is that, lots of times we are afraid to ask for help as it feels demeaning to ourselves. The best thing to do is the let them know you are there to help and rather than doing the work for her you're probably in a good place to help her prioritise her load so that she may be able to delegate tasks to you. As long as she doesn't feel threatened by you helping her (as opposed to to you stepping in and taking her work) then I think it's likely that you can build up to letting her know the areas where you are strong and could help her ask for help in the future too. 

I'm not disputing your claim that you will likely find racism. It can exist in even the most tolerant of societies. However experience has shown me that there are at least two kinds of bigotry that can sometimes affect immigrants. The first may well be overt/covert skin/nationality based racism such skin colour or national history. @shauna's answer has some excellent points about this. The latter I find is that your experience/qualifications may not be accepted as 'good enough'. I doubt this may be the case in your situation, but it's worth bearing in mind. To counter this you should perhaps consider that being a member of professional societies and/or having professional qualifications that are respected in that country may well help. Also consider networking with pople from that country first - perhaps though international conferences and or internet fora where you can meet people in a strong business context first. For example I would consider starting with LinkedIn. In the end you have to work harder to prove yourself. And you may have to set the groundwork now by increasing your reputation within your working network while you are still in your original country. 

If you can, give him a little space to get used to the fact that you're not interested. If he was interested, he's got the hint that you're not, and with some space and time, he should get over it. If he wasn't, then neither of you was interested and everything's fine. If you confront him, he'll probably stick to the "not into you" line, and might even get annoyed, which doesn't do anyone any good. He's said he's not into you, take his word even if it's not true, that's your fastest way to resolve this situation. I don't know the precise circumstances of your pair programming or how much of a requirement that is, but if you can get on with some stuff on your own and then have him look through it, or break up your time with him in some other way ("We can work on Project X until 11 but then I need to {perform other task} so it's done before lunchtime" or similar) then that can help ration his time with you and give you more control over things. If you can, find reasons to spend time working with the other developer - more expertise, or a fresh pair of eyes, or whatever. Talk to your manager, express a preference for less pair programming with your current task, more development and then review. Try to express these things as positive changes rather than just "My colleague is acting weird" - that turns it into more of a conflict with your manager looking into it, and that makes it more of a problem, and focusses more attention on his (probable) lie about not being interested, which makes him feel worse, which just makes the problem bigger. If he's doing anything inappropriate or unhelpful in a work context, keep a diary of what and when, and take that to management as evidence. But if he's just unhappy and things are awkward, bringing that to management makes it look like there's a problem between you and him. I get that you want your voice to be heard, and you're not comfortable having to spend so much time with him, but try to present positive reasons for being elsewhere rather than negative reasons about your colleague. Above all, stay professional, and focus on the work and getting it done. If he's more interested in something else, and is now sulking/whatever, then this will become obvious and his behaviour will be looked in to. I very much hope that this problem will pass, but if it doesn't, you'll be very much on safer ground having been trying to not just get on with work but improve things. 

Most employers in my experience don't want to try people in roles where this no evidence that you'll be ale to do the role. The trick is to add skills and experience to you current job by doing more than is asked and helping others who are doing the things you want to try. This will give you at least business knowledge of those other roles that you can try an leverage when asking for new assignments/tasks and jobs. 

In my experience this is just life and most people are reasonable because you have to deal with a family emergency. Just pop in ask for some emergency time off. Tell them that you really need to sort this as time is of the essence. Edit: Sorry I misunderstood. Since you're leaving earlier - I'd call him if I had his number, but if not then email him. I would say: 

There is no point in getting well paid if you're going to be stressed out and unhappy. This is a large part of your waking hours that you'll be spending there. 

Have routine for starting work - something like always starting at some defined time. I used to walk to the local shop and buy a newspaper. I made sure that I went out at lunchtimes and breaks and talked to people in the neighbourhood. I occasionally made a point of visiting local pubs/restaurants at the time other businesses kicked out so that I would meet people working locally. This sort of simulated "grabbing a few after work with the colleagues". 

Start by being patient. Explain to him that there's a lot to take in, so you're probably not going to grasp all the details immediately, and you're going to need him to go over some of the knowledge from time to time. Add that it's better that you learn this stuff well, and make sure that you've got it right, than have him just deliver one presentation, expect you to immediately learn and understand everything, and then have you make mistakes. On the other hand, also try to reduce how much you need to ask him by writing down as many of the details as you can when he's transferring knowledge. Hopefully this will help you remember things, but more importantly, you have the details written down somewhere which means you can consult that source of knowledge, rather than your colleague. His expectations of instant understanding are unrealistic, but there's little to be gained from direct confrontation, so if you explain what you need to know, and point out that it'll improve the quality of your work if he tells you this - plus you make an effort to write it down - then he can't have so many reasons to grumble. 

Everyone does things differently, and what they're looking for to fill each job differs, so there'll be a huge variety of things that might be included. What it sounds like you will probably get is an interview with a prospective team lead, an interview with a senior developer who may ask you technical questions, potentially a technical test or problem-solving exercise, possibly preparing some sort of presentation, possibly some sort of technical quiz, possibly also an interview with someone HR-related to see how you'll fit in. It won't be all of the above, but I think that those are the most common elements you'd expect to see. If there was significantly more than that, the interview would be more than three hours. They may or may not have other candidates around interviewing at the same time, so you might be sitting around with them and waiting for part of this time. Be friendly, remember that while you may be in competition for the job, the company will be looking for a team player. In general, be prepared to do stuff as well as present yourself to interviewers, but for a junior development position it may not be too specific or demand you show specific technical knowledge they're expecting you to already have. Try and relax and treat it as much as a learning experience as an interview. Being a bit development-specific, make sure you know what technology stack/languages the company uses, and be prepared to work either with them or with pseudocode that looks like them. The more you can look like you'll fit in easily and need the least training to adapt to what the company is doing, the better you'll look. 

Money. You need to supply him with appropriate costing as to why his methodology is going to cost more than yours. Why is it going to takes months to do infrastructure work? What bottom line benefit is there for him to do this work. I'm talking about cold hard numbers. Why are modern practises better? Why should he care? Where is benefit to his customers and ultimately his bottom line. You say he's lost track of practises, well he's likely gained a lot of knowledge on how to make a successful business in spite of those practises. As an engineering team it's your responsibility to provide him with the data so that he can make his decisions. If his practises are going to hurt his business then that's what he needs to hear. At the end of the day, if his metrics are features that the customers can see then you have a problem whereby doing non customer demonstrable work will seem to him to be non focused on his core goals. You have talk to him in his language and that language is numbers. It's all well and good assuming that modern practises will help, but without the data to back it up you're likely to be in a situation where he won't see you as valuable member of staff. edit: I see from your question that he is asking for lots of daily updates, daily demonstrable items, etc. To me this is very much what you'd find in a modern scrum like methodology. In fact I'd go so far as to say perhaps you are misjudging him and his approach. perhaps you should adopt this approach as way for both sides of the battle to move closer to their goals cooperatively. 

Talk to your manager - either to have a word if this colleague is their responsibility, or to pass it through the appropriate channels. If you've already appealed to the colleague directly to change their behaviour, I wouldn't try anything further directly, just talk to your manager and ask them to deal with this. In the meantime, I would advocate going to the meeting room as much as possible anyway. First, it allows you to talk more freely - you can discuss work as you're actually going to implement it, and more junior colleagues can feel that they can ask questions about things they don't understand without being belittled. Second, it withholds information from the problem colleague - if there are things he doesn't know about what you're doing, he might be less willing to assume that his answer will be correct, just in case he hasn't taken everything in to account and makes himself look bad for being wrong. You can then follow this up with references to "As we discussed at the meeting" in conversations that are in the problem colleague's hearing - he can't easily continue this behaviour if he doesn't know what you're talking about. 

You can't show the source code, but you can explain your workflow processes. So, something like: Engineering Intern, BigCompany Ltd (Start Date - End Date) 

This may not immediately read like "brilliant coder!" but this will show that you've worked with an existing codebase, you can communicate with people to understand the problems they're having, work with the existing design to understand that your fix isn't breaking something else, and generally explain what you were doing during your internship without having to go into source-code-specific details. Again, as noted by Lilienthal in the comments, be prepared to talk about all this at interview, go in-depth about how you did things, but not about the details of the source code you were working on. 

This is very clearly a case where your contract and the contract law of your country will come into play. You urgently need to seek out the services of a lawyer who specialises in this kind of work and get advice as to how to proceed. The issue is that your contract may be illegal or perfectly reasonable. Either way you need professional advice on this. 

This doesn't preclude either, but it might give hints as which might be more suitable in the near term. The second criteria I'd use is this: 

If you can't get anything in writing (including proper emails). then you need to immediately move to step two and seek legal advice, even if it's just to determine if the work is likely to land you with negative consequences. 

Try and get a paper trail with the request. Determine if you think doing it is likely to be either illegal or not. If illegal you should immediately get legal advice. This may prove in valuable in the future. Make a decision as whether you're doing it or not and for what reasons. Face the consequences of doing it or not. 

Give them some financial stake in the outcome. I say financial as this is developing country and financial incentives are likely to be very welcome. The simplest way I feel would be to simply give people bonuses where proactive actions benefits the company. This balances chicken/egg of not paying more till you get results and not getting results until you pay more. Commit the company to paying non regular bonuses. Of course this system can be gamed like any other - so you have to manage it.