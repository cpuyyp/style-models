To my knowledge, it's possible that the good old Nagle is kicking your balls here. I would recommend you to test switching it off and also reduce the internal ticks-to-reply counter. This is done in the registry: 

If the machine FILE-OLD has been turned off (and removed from the domain), you cann add an alternative alias to the new servers (real) name. This is done in the domain, which wil take care of the rest, like SPNs, DNS records and double-nameed-sessions. 

Note that in the command to save the permissions there is no slash. Here you can read why this is important. 

A computer is never "reporting" to the domain that a user "is still logged on", this is not an AD thing. FSSO is polling the state from the delegated kerberos node (which is fetched from AD, thats right). I would change the authentication time for FSSO. Connect to CLI and: 

You don't need you own DNS, when everybody is just using the internet and you don't have to manage your own servers. VPN sounds to me like internal services, jst kepp them internal. 

The simple answer: not. If it's AV/Screening/Driver stuff, the lock occurs in the (kernel) FS-API, which is not visible to processes in userland. If it's in Userland, the administrator's procmon or, with more comfort, handle.exe will show the culprit to you. You can use handle.exe to see the programs that have a file open, or to see the object types and names of all the handles of a program - IF there are such. 

I came into work last week, checked my first ticket (easy to fix one), RDP'd into the server needed for this and the login did not work. After clicking 'connect' I got the "Unable to Log You on Because of an Account Restriction" message. Checked another server (all machines are 2008R2/2012R2), the same message. No, I do not habe an empty password, not using network auth, my clint is Windows 10 (1607). Here is what I did: 

Update your RD-Client. ASAP. A remote code execution vulnerability exists in unpatched versions of CredSSP. An attacker could relay user credentials or execute code on the target server. RDS uses a lot of CredSSP. The windows security update addresses the vulnerability by correcting how CredSSP validates requests during the authentication process. Additionally, the latest patch for the windows servers disable CredSSP (RD) logins from unpatched (vulnerable) clients. There is also a GPO to control the beviour of the server when older clients connet (). But I would highly recommend updating your clients. 

Yes and no. Hyper-V virtual machines (VMs) need to connect to networking via a virtual switch or through Single-Root Input/Output (I/O) Virtualization (SR-IOV). Leveraging InfiniBand connectivity typically means using Remote Direct Memory Access (RDMA), which currently isn't supported via a virtual switch and therefore isn't available to VMs. The only currently supported use of InfiniBand is RDMA over InfiniBand for SMB traffic and user-mode RDMA over InfiniBand for HPC communications. Outside of these two scenarios, there is no InfiniBand support—which means no support for VMs. It seems that some network infrastructure vendors are heavily pushing their InfiniBand solutions and claiming to support Hyper-V over InfiniBand, even though Microsoft doesn't support it. In this scenario the IP over InfiniBand (IPoIB) miniport device is used by a Hyper-V virtual switch, to which VMs then connect. However, some organizations I work with have tried this method and have reported problems - sometimes very strange problems that were very hard to hunt down. It's important to remember that RDMA wouldn't be exposed to the VMs via the virtual switch with this method, nor does this approach use SR-IOV to directly map VMs to the InfiniBand card. The only benefit at this point is a very fast connection, which Windows Server 2012R2+ would be able to take advantage of using its virtual Receive Side Scaling (vRSS) feature. But until Microsoft tests and supports this approach, I would be very hesitant to use it. 

The unattended setup cannot do that. The setup is not (yet) able to manage storage-spaces and/or create dynamic discs in pools. [update: formating fail] I think it should be possible to do that with post-install scripting, so maybe you try this one: Create the mirror'd pool in Powershell 

Possible: Yes. Recommend: No. You could use private v4 adresses as needed. Or does the whole setting need to go public completely? 

In general, all Windows 10 editions support a maximum of two physical CPUs, but the number of logical processors or cores varies based on the processor architecture. For example, a maximum of 32 cores is supported in 32-bit versions of Windows 8/10, whereas up to 256 cores are supported in the 64-bit versions. The Intel® Xeon® Gold 6140 has 18 cores (with 36 Hyper-threading 'cores'), I don't see any CPU-Related problems here. 

Windows 10 (Pro, x64) supports 2 sockets with 256 logical cores and up to 512GB RAM, so no problem here. To be more precise, Windows 10 supports a maximum memory configurations that was formerly available only in the realm of servers: 

I would set up a local ActiveDirectory, as you said, with users, passwords, shares, group policys and roaming folders. AzureAD can't do that (maybe it will). So everyone can login everywhere and his/hers desktop is just there - realtime, works offline and everything is under your control. Bonus: it manages your local network (DHCP, DNS, AV ...), too. Then, get some office 365 plans for exchange, sharepoint and all the nice office stuff. For you local server, a small "Starter" machine will do the job just fine. Grab a solid i5/4gb/SSD box and install server 2016 on it. 

The default is 0, which means that no additional critical kernel worker threads are added. Which is usualy ok. This value affects the number of threads that the file system cache uses for read-ahead and write-behind requests. Raising this value can allow for more queued I/O in the storage subsystem (which is good, when you want to write line-by-line), but it's more CPU expensive. Add more Queue Length Increasing the "AdditionalCriticalWorkerThreads" value raises the number of threads that the file server can use to service concurrent requests. 

Yes, thats the default behaviour. For any IP address - the 'name' field is dynamically filled by the client. 

IIS uses the local computers credentials (\ISSCOMPUTER$), not the users (or service principals) one. Just ad the (AD) account of the machine to your target. Maybe it now comes to another common problem – where the web server is in another (or no) domain, and the UNC share is in somewhere else. You can still configure it by setting up the remote share as a Null Session share. You can set up a Null Session by following the steps in this Technet article on how to create Null-Sessions. 

Yes, the Windows-Firewall. It would be interesting to hear, what you mean by 'remote access'. RDP? RPC? WMI? 

Yes. Distribution, teaming and aggregation are just not the same thing and they are not exchangeable. For example, if the main traffic source you are whishing to distribute to more physical adapters is a singe-mac-source (Large Server, other VM-Host, Router, Firewall ...), LACP would be your single choice. That's why most companys use vSphere. Virtual Switches allow their uplinks to distribute traffic based on Route ID / Originating Port ID, IP hash, mac hash, LACP and PBR (policy based routing, when using NSX). 

There is none. In Windows, new files and folders will (by default) inherit the permissions of the directory that they are originally created in. So you should be looking at changing the ACLs on the parent directory, involving CREATOR_OWNER access rights. 

Here you notice the IP address 192.168.1.1 This is the IP address of the only server which has the permission to scavenge the zone. Most likely this could be a server which is no longer existing - this happens a lot in Domains with a funktion level of 2008. If this is not the IP address of the server which on which you have configured Scavenging, you need to change that. To change the Scavenging server for a zone, run the command: 

This error occurs when a user-mode subsystem, such as WinLogon or the Client Server Run-Time Subsystem (CSRSS), has been fatally compromised and system security can no longer be guaranteed. In Short: Someone/Something is killing your LSA. This is less likely to happen, if the executing user has the priviledge of doing so (eg. doing thins right). What can cause this error? 

Linux (based) fileservers do not have a filesystem with ACLs like windows does (with NTFS or ReFS). You simply can not keep all your NTFS-Settings like ACLs, Junctions, Filestreams or extended attributes on a non-NTFS filesystem. Most Linux FS expose the POSIX attributes (OWNER, GROUP, RIGHTS). If you have more than one group entry, you'd have to greate one group for each and every ACL-Kombination. But you can export your NFTS ACLs. Use this command to backup you NTFS permissions: 

By default a room mailbox does not permit external users to make bookings. However there is an option that you can configure to allow external people to make bookings if you need them to. It's the ProcessExternalMeetingMessages flag. 

Wordpress does not redirect your URLs at will - but it stores every old URL along with its creating post, even if no longer used. If you change a post slug, Wordpress redirects (301) the old to the new URL. This has nothing to do with .htaccess, it's a wordpress function. Unfortunately, I've never seen this feature properly documented in the codex. Hence I cannot tell you which wp_core function does this and where in the core it is located (and you do not want to touch the core, right?). The previously used slug(s) are stored in the database in the table. Check for in the meta_key column (the actual slugs being stored in the meta_value column). If you ever want this default behavior not to happen in a particular case, this is where to delete a value and search for "used" URLs.