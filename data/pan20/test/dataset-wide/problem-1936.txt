I'm not sure just when but its probably since programming computers took off. When a user can see how little is needed(?) to make a change they are much more likely to ask for continuous improvements. Painting and plumbing even though not professions they are trades and real jobs that are over when you're finished. Once the tools are put away no one would come back and ask for more. Now that everyone has a keyboard they cannot see the problem with those they hire continuing to type away to their ever increasing specifications. The masons/Masons had it right. You don't give away the methods of doing the job and you don't start to work until the money and scope are agreed upon. Myself, I've always had agreements worked out that would specify what would be complete in the current phase and leave the sloppy ideas for the next phase. If it is not part of the current phase "I'm sorry, I won't have the time". It's up to you to set the boundaries. My buddy charges three times my hourly rate and he bills half time for driving over a certain distance to a client. I'm getting by alright. He lives in a house larger than mine that he paid off in eleven years. YMMV. 

I prefer to wait to ask for an increase until I've actually demonstrated that I can handle the new responsibilities. I find that it makes for a much more compelling case when I start the conversation to justify a pay increase. It also shows your bosses that you're not "just in it for the money" (regardless of whether or not you actually are...) 

This is to understand the full scope of your current compensation package. Most people, when asked "how much do you currently make," don't factor in much, if anything, beyond salary/commissions. HR does this for a couple of reasons: 1- How much or little can we offer this person for a position? 1a- Can we reduce salary in lieu of a bigger bonus, etc... 2- How competitive are our current packages to the current market for this type of position? You don't need to worry about this information being confirmed or denied by former employers as these questions cannot legally be answered by your former employers. 

I agree with the others that you did actually make the mistake of agreeing with the deadline. It is very difficult not to in the circumstances, I know. The essential things to do are from my own experience (and many others) in the "If Only" file of hard learned lessons. The first goal at all times to to manage the clients expectations. Or rather "Make sure you are working towards what they want." This includes getting it in writing that such code will work in such a way on such a date. With that you need to add in time to examine the current code. This takes more time than anyone leaves for it, always will. As reality moves in (usually badly) on what can possibly be coded it is up to you to make the new reality clearly known to those involved. The schedule must take it into account. As far as Machiavellian politics in management I have been through some of what you describe. The record keeping here may not ward of their attacks since getting the job done is only part of what they are after. Sorry you have to step through all this while doing a good job at programming. The major point that needs adding is this. As clever people (or brilliant-?-) the habit is often to underestimate the time needed for a task, as follows. When we have finally, doggedly worked out, or quickly spotted the solution to the issue at hand we can see from the start all the way to the very end. We behold the answer. This "Aha" point is probably the only reason I care about the work nowadays. Estimations based on such understanding overlook countless shovel fulls of -work- that lie between the vision and the outcome. This came to mind as you described your PhD as experience. A PhD is work all right but not like regular people work. School politics is not like work politics. I also agree with those who suggest you cannot win the battle they have placed you in, no matter how excellent your work. You should keep records of goals set and reached and keep your eyes open for your next position. 

In general it looks bad to go from director to developer in the same company. If you were going from Billy Bob's Software House to Amazon or Google then you would consider the role as a whole rather than just the title. If the company valued you and this was purely about politics, then they could have approached this by creating a role above you, CTO, possibly renaming your role to Head of Development or just keeping it as Chief Architect. Plenty of companies have CTO's who are more business focused and CA's who do the real thinking. Frankly, it sounds as if the company doesn't value you. So a hard question - are you good at your job, or do you just think you are? How do your skills really stack up. You're in software, there's more demand than supply, so if you are as good as your question indicates then dump this firm and move on. 

Most answers include the point that the behavior should be addressed in private. This is because you as the boss, or the more mature of the two, are obliged to choose the best place to get your point across. Even if you were to correct his actions on the spot you should at least remove yourselves to another location, again privacy. Otherwise you would be shouting to all "O.K. Everybody! I'm going to take care of this issue here! Stand back y'all" The only point missed in the above answers is this. It is best to handle something that makes you angry (or upset etc.) when you are Not angry or upset. The emotional component (or anxiety of surprise in a public confrontation) will make it hard to deal with any situation. This is not a confrontation you are out to win once and for all but a problem you hope to avoid in the future. As a talker who too often gives more information than desired I have received this talk on occasion. 

I've been a software contractor for years and often end up in a similar situation - interviewing for several roles and you're waiting on your preferred choice before declining another offer. When I was younger I would have told a white lie in this situation because I would have felt awkward saying to a recruitment person that I had another preference or turning down an offer after all the work to get to that stage. But I've learnt that it works out better if you're honest. Even if you end up taking the 3rd ranked job they will appreciate your honesty with them. Also it means should something happen (like you need another round with job preference 1 or it's postponed) you can go back and tell them honestly why it will be even longer before you make a decision. You will not the be the first or the last person who will have turned down a job at the final offer stage. It happens more than you think. You're not doing anything wrong. You're not gaming anyone to get a better rate. Recruitment is a process where they know they're competing with other employers to get that employee as much as potential employees are competing for the job. 

The communities in which we work throughout our lives are generally pretty small. You never know when you might come across some of the same folks you're working with now. And you can't predict if they'll be in a position to decide whether or not you get some job or some promotion. You don't say how much time you have left on your notice period, but if it's just a couple of weeks, I'd suck it up and power through. Make sure all of your work is done, any transition stuff is prepared, etc... Your manager is treating you differently because they're likely taking your departure personally. This happens all the time and I'd just ignore it, do your job and thinking about how great things are going to be in your new gig in a couple of weeks. 

The chairs that you should be looking at have a crazy amount of options when it comes to adjustment. I have personal experience with Aerons and Steelcase chairs, generally considered the cream of the crop for office chairs, and both of them are outrageously adjustable and configurable. If you're looking at chairs in this price range, the personal preference for employees will probably just come down to the mesh vs non-mesh as everything else can likely be moved into appropriate positions. However, recognize that many people won't familiarize themselves with the chair that they're using and it may be beneficial to bring in an ergonomic expert to help educate people on how to appropriately adjust their chairs for long term comfort. 

What you are talking about is more regularly called freelance work. As Joe says in his answer, you're competing with others who can do it cheaper. It's a race to the bottom if you're competing on nothing more than price. Contract work, which I've seen more often in IT than anywhere else is where a firm will hire a rather than a permanent member of staff. In the UK, the contractor will typically have their own company as a tax vehicle and will invoice the firm through their company. This is more tax efficient for both the company and the contractor. The downsides are that you are not employed directly by the company (no benefits), can be terminated very easily, won't get any paid time off (as you'll be billing per hour / day), usually have no career path in the firm, and (in theory) might be out of work while looking for your next contract. I've been an IT contractor for a number of years and I do that instead of becoming a permie solely because I find the market for what I do to be short on supply, so I get more money with little of the downsides. Whether you should consider that depends on what you do. The more commodity based your work the less advantageous it is I would say.