There are news that an unpatchable and unfixable USB firmware exploit is "out there". This could seem unrelated to servers but since the affected hardware from Phison is not disclosed there is a possibility of devices that are connected to an internal network could be infected or potentially vulnerable. This could be the worst nightmare for a network & system administrator, an ICT consultant, etc. Is there a way to check if a USB devices has the potential BadUSB vulnerability, so that USB devices can be "vetted by the IT departments"? 

It is hard to guess, but my would be a redirection, more specifically HTTP -> HTTPS redirection. In order to be it this case, there would need to be redirect from HTTP to HTTPS on your server and you possibly do not see those in your logs because you might have them at different place. So, the scenario would be that the client for some reason (some form somewhere misses right scheme) POSTs to HTTP, gets redirect code and navigates with GET to HTTPS. If this is not the case, it could be different redirection (like non-www to www prefix or alike). You should be see those in the logs, but you might miss them for some reason (filtering somehow based on HTTP code?). But this is not as likely as HTTP->HTTPS redirection. So, is this it or can you prove that this is not the case? 

Do you have ssh access to both servers? If so you could try rsync with the '-a' option. Not sure if that will fix the problem but it's worth a try. 

What are your reasons for using software RAID5? If you're using software RAID 1 then that is acceptable but software RAID 5 is asking for trouble. Once one disk fails there is a high likelihood that a second disk will fail as well. With a 60hr resync time there is a very high likelihood of a second disk failure happening before sync completion rendering the entire array unrecoverable. Also, apart from being slower, software RAID is more prone to corruption. I would say that the effort of dealing with software RAID 5 is really not worth it. As you are ready to give up 25% of your hard disk for redundancy (assuming 4-disk RAID5) then why not go all the way, give up 50% of your space (hard drives are not too expensive these days) and run RAID 1. Just my $0.02 

Is there a way for system administrators to better track and debug what happens with files stuck in the print spooler ? 

I found a way using robocopy which comes with Windows Server 2003 Resource Kit Tools It has an option that only logs the differences without copying them. The command was: 

I have two computers in the same domain that I use, recently I changed the domain password on one of them. When I tried to login with the same account on the other machine I get: 

What I need is to extend /dev/vda5 from 80 to 160 GB without losing data. I would like to be sure that I can't do it wrong (this is also why I did not do any experiments on my own). So if someone knows how to do step-by-step, so that it can't get wrong, I would be very grateful. It is possible for me to run another tool too, but I guess that would be much more difficult. Update 1: I have tried system-config-lvm, but I am in the same position, here is the pic: 

If I disable again the network I can log in with the old password. If I enable afterwords the network connection I am able to see the domain dns, etc. How to establish trust relationship from this situation without having access to domain control server? 

I have some virtual machines servers with some micro-services and do some load tests with JMeter. All the servers including the JMeter machine are sharing the same virtual network. The virtual network has no adapters: 

Update 3: I have setup a similar machine locally in VMware. In my local setup, instead of /dev/vda* I've got /dev/sda* and the disk size is 20 GB instead of 80 GB and the new space that I want to add is 30 GB instead of 80 GB, otherwise it is the same. I can see in GParted the very same situation, it behaves exactly the same as the real server, the /dev/sda5 can't be resized. Here are my attempts with fdisk: 

Shouldn't matter, not for small scale databases anyway. I would recommend MyISAM as it is simpler to administer and takes up a little less memory. It doesn't have as many advanced features as InnoDB but with what you're doing it really doesn't matter. I suspect that you have two problems that are not dependent on table type: the main one is indexing and the other is memory. 1) If you have a unique 'ID' column in a table make sure you index it and that it is set as "unique". Also, you should try to have indexes on any column that you use in a 'WHERE' clause. For example, if you search for a user name (e.g. ) then you should put a secondary index on the 'username' column. 2) Memory -- are you running on shared hosting or a VPS? it is possible that you're running out of RAM? Try going up to at least 256mb RAM. 

If I do the same on my Windows 10 desktop, I get success and can work with the share folder and map it. And I am not sure what I have not tried yet, but I have checked these: 1) network connection properties of server B, if server B has enabled Client for Microsoft Networks - yes; if server B has enabled File and Printer Sharing for Microsoft Networks - yes 2) I have tried advanced properties of IPv4 -> WINS tab -> Enable NETBIOS over TCP/IP (made no difference to default, both A and B have static IPv4) 3) enabling Network discovery and allowing its firewall rules in firewall.cpl + same for File and Printer Sharing and their rules; again made no difference What am I missing. How can I access shared folder from Windows Server 2012 R2 acting as client. 

Do you have root access to the server? There are a few programs that monitor log files for changes, checking for failed auth attempts. After X many failed attempts (user configurable) they then block the originating IP address (temporarily, if desired). The two that I can remember are: 

Basically when you put in "domain.com" the web browser actually goes to "domain.com:80" (port 80 is the default HTTP port). You can only assign one application per port on a computer, so only one can listen to the default HTTP port (80) and the other will have to use another port. There are three ways around this: 1) the proper way would be to use nginx as your main web server (i.e. listening on default http port 80), set Apache to listen on another port (e.g. 8080) then set up a 'reverse proxy' (google is your friend here). This is the ideal set up. It takes a bit more effort to configure but there are hundreds of guides out there that are really helpful. 2) use nginx to serve the django websites (if that is possible?) 3) a quick and easy way (although not recommended), assuming the PHP sites are for webmasters only and the django sites won't need https, you could set up the PHP sites to run over HTTPS. That way you could have Apache running on port 80 (default HTTP) and nginx running on port 443 (default HTTPS). Just put '$URL$ instead of '$URL$ and you'll get to port 443. 

Here I can see the /dev/sda2 (local virtual machine) even starts on the same sector as /dev/vda2 (real server). Same for /dev/sda5 and /dev/vda5. 

I understand the question as follows: 1) You have bought a domain from Provider1. This is your domain registrar and you can manage your DNS record within their interface. 2) You have bought a website hosting from Provider2. This is a different company. 3) You want to connect your DNS record with your hosting so that if you type mysite.com into browser, you will see your pages loading. 4) You know IP address (let's assume it is 1.2.3.4) of the web hosting server with Provider2 and you have already created DNS A record that says mysite.com is 1.2.3.4. 5) It does not work. If this describes your situation well, then there are two things I can think of that can go wrong: A) You created the DNS record, but did not wait long enough for the record to be propagated world wide and the DNS server that you use for your address resolving, does not have this updated record yet. You can use DNS Propagation Checker to get information on how well is your DNS record propagated over the distributed network. You can also flush your local DNS cache to prevent your operating system local cache from giving you the old records. B) You have not inform Provider2 that your hosting program should accept requests for mysite.com. How to fix this depends entirely on your web hosting provider's interface. However, you can tell if this is the case if you put your address into the browser and different page than you expect (which is your web application page) is displayed to you.