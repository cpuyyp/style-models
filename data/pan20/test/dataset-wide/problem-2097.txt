Don't laugh. Don't try to be funny. If you don't like it, show that you don't like it. I have a long beard too and my coworkers here told me to cut it or so at first; I decided to answer with fine jokes like "well, it's not that the beard is long is my hair that changed direction" (since I am losing my hair), or, with the boss aside, last year "if I lose the job i'll be ready to do Santa Claus", or stuff like that. But with other people (especially the less important ones) I usually simply don't care. If they would harass me more (never happened in my company), I'll make them feel uncofortable, not giving explainations, staying silent, or better acting like having a displeased behaviour, for a bit of compassion that -at least- will make them even more embarassed and/or unconfortable. And if she continues and tolds you things in a "hah, I am just joking" mood, just say "I am not", explaining: "we can have jokes on many other things but don't harass me more with my beard because it is none of your business". But if you want to be "friendly" you can go on with jokes telling her like "am I your boyfriend?" or better "You don't have a boyfriend that you need to harass in this way?" or, if she continues, "Does someone pays you to be so irritating?", and so on. Try to make her feel unconfortable if she does the same to you. and remember: if someone is treating you in a disrespectful way, is also because you are allowing them to do so. Put some stakes. Is healty for relationships in general, is especially healty for professional enviorments. 

It has to be "strong enough". For example if I'm to be their team leader and someone doesn't really understand what I say when I talk to them, that's a problem. As for why "good written skills" are important, even when you don't face customers, many jobs need you to read and write: emails, status reports, documentation, functional specifications, test cases, and comments (not to mention source code). 

I.e. the purpose of the meetings isn't only to discuss the software and to throw my proposal in their face. The purpose is also 'soft' e.g. to reach a team consensus, to hear from everyone, perhaps to let everyone feel they've had an opportunity to contribute, let them feel good about the team. Maybe you shouldn't pride yourself on being "quick", either. Another possibility is to specialize, e.g. at my current job I do software-design things without asking, but whenever there's a UI-design question I'm not sure of, then I ask someone else who's good with the UI. You could do the same with (open questions to other people) for other bits you're not sure of (e.g. "How shall we test this?", "How shall we estimate this?", etc.). You could also try (in theory: I haven't tried this myself) phrasing your statements as a question, for example, "I think we should do such-and-such. Or is there maybe a better way?" 

I am Mark, a 25 y/o web developer living in Italy and i am currently working in an electronic company doing a web application for contacts management, i also give some help to marketing office creating landing pages and this kind of simple stuff. Actually this is not the job of my life since this situation is "temporary" (even if i am doing web development from when i started here 10 months ago) and i should do embedded software with C++, but i want to leave and find a place where i can really do web development with other people and have chances to learn more, since here i work alone with no help! But on job listings, one thing that i always read is that, both in Front-End and Back-End development (i am doing both here), companies always look for developers who could use web frameworks. Actually i don't need a web framework for the project i am doing and also for the projects at home, i am self-taught and i prefer to write personal clean code using basic tecnologies (html, css, js, php, mysql) and Jquery. I can't also really understand the difference between one framework and another; it kinda looks like to me that's a choice for the project manager, and there are a lot out there so that i can't really decide what to pick! So i wanted to ask: Why web companies are looking for people that can use frameworks if that's a thing that should be decided depending on the projects? Are them really important if i want to find a new job? I am stuck, since i want to apply as a junior webdev but i look like an entry-level since i don't know frameworks, but for me it makes no-sense to learn a hyped one (like Angular) randomly! I wish i could learn the framework that the company is using rather then random ones, thanks to my actual basic skills, but it's like climbing a smooth wall. ON HOLD: I didin't know where i could have asked this question. I thought in programmers, but this is not a "conceptual thing about programming". The bad thing about these reports is that it is told what "is not ok" without nothing else to improve. I will try to report this in meta. 

While my question may be easy, I don't know how long it may take them to answer. I think it depends on whether the question (not the answer) is quick. If the statement consists of two sentences, one statement and one question, then it's a quick question to ask; for example: 

I reckon that, once they've heard the question, then they can decide whether and how they want to answer it immediately. The question they're asking is whether it will take you quite a while to even explain what the question is. 

And/or if you're more interested in the company than the boss, ask if you could have a meeting with more than one person (e.g. your boss and their boss, or your boss and an HR person): to discuss your future with the company. By doing that you would have a second contact (in case your current boss leaves) within the company, who knows (based on the meeting) that the company wants you. 

A bit of background: I am one of the two software developers in my company and we are currently working with C++ on embedded machines. My co-worker is working with C since a lot of time and now my boss wanted to improve development using C++. After a traineeship spent in doing web applications my boss asked me to work with these machines without knowing anything of the machine itself. When i was assumed my boss knew that i only had done things in C++ at school and that i hadn't done anything more personally, but that i wanted to know more about how to develop software on embedded machines. The source of my problems: So, as i said, i started fresh like a rose developing software for machines i have never seen before. These have very complex program built in a very complex way that sometimes lacks of the capatibilies of OOP and C++ (since everything was built in C before (which i don't know and my boss knew that)) and i am having lots of difficulties understading how it works, why something was built in a certain way, what kind of idea is behind something etc. etc. etc. I can't ask the Senior since he did things in C and is not programming this new machine (or anyway he's doing it with C and doesn't want to learn C++) and he is anyway too busy. However, despite all of these problems i got a grip of the situation and at least started to know how to do some little things, and for my boss this was going ok... until now. The actual problem: Now after a month, because of company difficulties i am asked to use the functions of the Architect and not the ones i was doing on my own. He is the man behind the scenes that wrote all the OS of the machine and i cannot contact him since he left the company and can help me just when he is called for "consulence". The problem is.. that i cannot know what a function does and behave, because the function behaviour is closed into *.a files. When i asked through one of the rare mails i could sent the answer was "the name of the function and the parameters should make things clear, anyway you have lots of documentation". Actually... this documentation lacks of information (it is like 30% complete to get the idea). And anyway it explains generally what a function does assuming that i know how the OS works, what is the purpose of a certain idea or other random things that i could neither imagine. I am having a lot of issues in my mind, which one is to leave this company and look for web development (which really caught my interest), but before getting use to strange ideas i just want to ask: Is it common to work as a developer without having the possility to know vital things in the project? Actually i am understanding a little here and there. But i am really asked to solve a giant puzzle without knowing how the final figure will look like. Since this is my first job i don't really know what do, maybe this is common in the companies and i am only getting discouraged. 

You wrote, "during an annual pay review"; so of course another alternative is to wait until your next annual review and suggest a pay rise then, based on what you did (including get another certification) during the previous year. 

If you think you have a good relationship with your boss (but not necessarily with your company), then keep in touch with the boss. 

If you think you're about to fired for an illegal reason, if your legal/employment rights are being violated, then it may be better to talk with a lawyer (get advice from a lawyer) before you're fired rather than afterward. 

be able to talk about work-related topics (software development) be understood understand what I was told in reply. 

Implementing that requires the source code to be checked in, the build instructions published. I'd suggest you do that as a semi-emergency. Allow the developer no write-access to the production server or the build machine (to verify that production code is buildable from version control). After you've done that (after you know that the source code is in version control and the build instructions are published), then other developers can think about inspecting the source code and helping to maintain it. Note that Get Rid Of Indispensable Programmer As Quickly As Possible was published by Gerald Weinberg in 1971 (so, really, everyone ought to know this by now). IIRC the original quote is, 

I am a web developer for 1 year in a company, and i am undergoing a very complex work/life balance situation. To keep in short terms: i accepted this work, moving from my home town to a bigger city, in order to build my life and everything (i am 26 years old now, i was 25). But my lunch break lasts 2h, and at the very start it was ok, the major sacrifice was travelling for a total of 4h a day. But now that i am here i still not have the time to live my life because of it. Most of my colleagues go home with their cars, while i don't have a car and neither i have the money to buy one; i come here with a bike because is faster and for sure less expensive then public transportation like bus. My company isn't really in the center of the big city, but in a town smaller than my hometown; it's not hard to reach, 20min with bike, but moving near my company just for this is not an option since i will lose the main factor of living in a bigger city with all its benefits. So: i want to ask for a lunch break reduction, i need 30min to eat. I think that it last so long in order to keep as long as they can the employers in the company for some right reasons like meetings and assistance. But in this role, especially my position where i rarely speak with my colleagues such is relaxed (like, 15min a day and for things that are not even important) my phyisical presence here is useless, and it cannot happen to have an emergency where i am required at the end of the day; it never happened and it never will since i just don't have that type of responsabilities. But still, even if i know that there's no need for me to stay that long, and proven that i really need to come home earlier in order to restore some work/life balance to not get crazy (i am 26 y/o), and that i don't want to come home in the middle of the day (especially for the risk of going around without many bicicycle paths, but it's anyway tiresome) i think that this is a very unprofessional thing to ask, since "everybody's the same under the same roof". So how can i ask a lunch break reduction to my administrator (which is not the boss, but his wife)? EDIT: I ask to the administrator rather then my boss because she handles all the papers realted to hiring process and so; but she is more hard to convince then my boss. Actually when i was in the traineeship i asked for a reduction of 1h because of the long travel (4h) but when i became an official worker she said "you will be like the others, no matter what". 

I guess you shouldn't teach, but should provide an opportunity to learn. Two hours per day of your time, for months, seems to me an excessive investment in an intern. Instead, just supply the tools they need. Choose and define (specify) tasks, which should be more-or-less within their ability to complete. Be available to answer questions (but not for extensive tutoring: point him at a book instead). Provide QA and feedback, review and testing, of their semi-finished work. I'm not sure what programming tasks (if any) you could assign, which don't require arithmetic, though. The last time I used/borrowed an intern (which didn't take them very long) I asked the intern to install a specific test environment for me (which I needed, to test some software I was developing). 

I assume I wouldn't care (it wouldn't bother me) if someone asked me. I'd do it willingly (fetch a coffee) for a friend or for a family member if they asked me to. I'm a guy though, for what that's worth; and I wouldn't ask someone else (and perhaps especially I would not ask a girl) to get me a coffee. Also I have worked as a secretary; and, worked as a professional, in start-ups where the exact job-roles (and the lines between colleague, friend, and boss) are a bit vague.