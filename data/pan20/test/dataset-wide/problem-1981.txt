No, no, no, get rid of the anxiety right away. Throw a party For you, the important part is not the "leaving", but that you have found a better company. This means you are lucky and should handle this as a joyous event. Throw a little farewell party, the size and means of which depend wholely on the culture in your place. For example, at my current company, I would bring a few prezels and some non-alcoholic drinks. Or donuts for everyone, etc. Make it a happy little event at the end of your previous-to-last workday or so, and just reminiscence about the good times you had together. Obviously you have to invite your ex-colleagues a few days up front, and this is a perfect way to communicate your decision. 

So this question is answered and accepted. But most of the answers tell OP to deny the request in quite harsh, almost aggressive words; even involving HR or managers. I find things like this are a good exercise in general interpersonal skills. In this case, saying plainly what you want, without being roundabout, but also without being harsh and offensive. As far as we know, that guy is not just a psychopath who has to be shut down. OP already edited the question with her own answer, 

This list isn't comprehensive, but if your company doesn't offer one or more things like the items on that list, then any obstacle in your hiring process could send a candidate looking for one that does. So let's say that, for whatever reason, you don't or can't offer incentives like the above for your candidates to convince them to spend writing code for you for free. Then what can you do? I have two alternatives most candidates will prefer over busywork programming tasks: Alternative #1 - Pay them an hourly rate to do your programming task as though they were a contractor. This encourages them to take it seriously both for professional reasons and because... they're getting paid. This costs you money, but so does any form of recruiting. If you're really good you can even find a way for them to diagnose and fix an actual bug in your code, in which case you're getting something useful for your money. Alternative #2 - They have probably already written code for free which they will show you if you just ask. Most programmers have code on Github, Bitbucket, Q&A websites like Stack Overflow, or could provide you with some code they have not already published. Why make them write code they don't care about when you could let them share a passion project with you instead? It's guaranteed to be less boring than reading yet another solution to the same generic problem for the 100th time. And since the code is already written it saves both you and your candidate time. Plus you'll get a look at what sort of code they enjoy writing, which gives insight into their personality and how well they will fit with your company culture. 

Sure, plenty of people do that. The trick is to encapsulate the things you cannot possibly avoid (meeting other people to talk about work) so that it part of "getting work done". If you actually just want to get mechanical work doled out by a ticket system and never ever talk to anybody, then, as a web developer, you're basically out of luck. You could look into maintenance, low level support (where you hunt for non-spectacular everyday bugs in applications), etc., and carve out a niche for you. Ask for all the boring, mechanical work that most other people are not happy about. Make sure people do not send the stuff to you by phone or mail, but by using a ticket system (you can find good reasons for that which are not related to your social preferences). 

No. That is false. Think of Stackoverflow as an extended search engine. Instead of typing in 3 search words in Google and then sifting through loads of results, you are typing a very long search request into a SO question and then checking back later until the "SO search machine" has returned its results. Also, as everybody who has ever asked a technical question knows, the simple act of asking the question often leads to insight. I have often typed in a long, long question; after typing it in, and before posting, I noticed that my fellow SO'ers would probably tell me that this is a bad question because of X, Y and Z. While working on making X, Y, and Z better, I found the answer. Problem solved. So, no, you should not feel anything good or bad about using SO in the way it was intended for programmers, it is just a tool. Watch out for using all the other SE sites too blatantly, obviously, during work hours... 

As some commenters have mentioned above, recent studies have shown that for unmarried men and women early in their careers (before things like career interruptions due to pregnancy generally come into play) and in the same field, the earnings gap between men and women is very narrow, with some reports even indicating that women earn more. Pew Data for 2012, showing women under 35 making 93% as much as men. Guardian article from 2015 reporting women in their 20s earning more than men. Anecdotally, I also currently work as a Senior Software Engineer myself, and have not observed gender to be a factor in salaries among my coworkers, and have never heard a manager bring it up in salary discussions. The only real danger is not negotiating effectively (this cost me a lot of money early in my career, even as a man.) I recommend the book Getting to Yes as a good starting place if you have never taken the time to hone your negotiating skillset. So in summary, don't let the Earnings Gap discourage you. Learn what people earn in your market, know your skillset, and negotiate confidently and assertively for what you know you're worth. The data shows that employer discrimination is not a significant cause of the Earnings Gap, and as I mentioned earlier, if they do try to discriminate against you, the best choice is to walk away from the table and find another employer. Best of luck! 

The good news: I think you should have no great trouble finding what you seek, you can influence it yourself, massively. TL;DR: change yourself, not your company (with minor exceptions). Obviously, look for companies that embrace home office work. Aside from that: 

The answer you accepted immediately misses important points, IMO. Yes, you should accept the request. It is ethical, legal, and pretty common. There is also no need to confuse the issue by thinking about it sarcastically ("precious pet project"). Management could have very valid reasons why to do something like that. And even if not, it is the prerogative of management to do these things however they see fit. They carry the responsibility, and they are not harming anyone. An issue arises if they ask you not to book the hours at all. I assume that you use some software to keep track of the time you spend on any project. If you work 3 hours for that project, you must book that time somewhere. From your point of view it does not matter much, i.e., it does not matter that you are not booking it on that project. Your manager has to tell you where to book it though. You can book it on any purely internal position ("PSP element" in SAP speak), on some pure "cost center" or wherever it does not lead to actual money flowing. What you really must not do is either not book it anywhere (in which case you cannot, later, prove that you actually worked at all; i.e. it will be detrimental to yourself, you are losing overtime if you have such things), or book it on another time&material project where some other customer then is charged for said 3 hours (which would, very likely, be fraud in most jurisdictions). 

The report looks at a sample of all earnings in the nation and does not attempt to compare men and women in similar fields with similar experience. Due to the fact that the Bureau of Labor Statistics report was being used in a misleading way to warn of a "Wage Gap", the Bureau of Labor Statistics contracted with the CONSAD Research Corporation in 2009 to do a more thorough study that would control for factors like experience, career interruptions, and industry. It can be found here. A few quotes from the foreword: 

Remote working. Free computers/monitors as a signing bonus. Company contributes to respected open-source projects. Reimbursement for professional training and/or conferences. Catered lunches. Flexible hours. Opportunity to work with new or unfamiliar technologies. "Startup culture" - aka lack of politics/bureaucracy. Company Equity. Name recognition: your company or your product is well-known. Candidates like to mention where they work and hear people respond with "Oh, neat! I like their products." Charitable or revolutionary company goals/vision. People like to write code that makes people's lives better. Above-average pay. Money covers a multitude of organizational sins. Annual company retreats to cool places. 

Sweet and short: if that employee quits, your company is done for. Pay him what he wishes, if it is reasonable, and if you can, add a bit more. If you really must avoid increasing his salary (which will have a cumulative effect) give him a significant bonus payment (which can be significantly higher than a raise would be because it is not cumulative). If you actually have no spare money to pay more, then you are about bankrupt anyway, aren't you? 

There are two aspects to this: 1) It does not matter what you wear. What matters is that you are sincere and believable. If you are known for outstanding clothing all year out, it would be weird if you now come in a cowboy hat. If, on the other hand, it is noticable all year that you are only just achieving the usual dress code (from below), then by all means downgrade to your normal level. Being clothed uncomfortably is the worst that can happen to you. If that means you will not stoop to polos, then so be it. 2) You can downdress without lowering your level. For example, instead of just some junky polo, pick a very expensive and stylish cashmere pullover. Instead of foregoing your usual dress shirt, pick a white one with highly polished black buttons. Grab the brown Oxfords instead of the black ones. And so on. Oh, and the 3rd point, mentioned by someone else already, but let me confirm it: 3) If you worry about anyone's approval, look to your boss and your peers; not your team. Presumably it was not you who created that new rule. That means you and your team are automatically on the same side of the fence, anyways. 

I think that you have phrased your question a little bit wrong, but the way you've phrased it reflects a common misconception about hiring programmers. Are the candidates being "scared off" by the programming task, or are they filtering your company out of their own consideration because of the task? An anecdote to demonstrate my point: while job hunting not long ago, I saw a position for a company which seemed average. The way they described their programming process made it sound quite good, but there were very few details, so I was skeptical. Maybe they were a good place to work, maybe not. But I figured I'd see about getting to a phone screen so I could figure out the details and see if they were as good as they seemed. I clicked on the job posting, and was immediately asked to write a cover letter. Ugh. I think every candidate hates cover letters. I didn't know this company or use their products, so what could I say about them? I googled them, read through their website and product offerings, figured out where I was likely to fit into their org chart if hired, and came up with a few paragraphs "selling" myself. Next I provided my resume and access to my LinkedIn - but immediately afterward they asked me to fill out my relevant work experience with dates and descriptions. This info is both on my LinkedIn and my resume, it was ridiculous to have to provide the same information 3 times. I closed the browser tab. 5 minutes later I was applying to another company that offered some really cool benefits which the first did not. I could actually apply to another company with better benefits faster than I could jump through the hoops the first company wanted from me. You need to be sure that your candidates are invested in your company in particular before presenting them with any hoops to jump through, or else they won't jump. Do you do this? Examples of quality benefits I commonly see tech companies offering: 

No Nobody would know that you were related to that app, outside the company? As the app is already out there, it is out under the company brand. Unless you transfer official ownership of the app to your own account, nothing will change. Another question is whether it will impact your resume, and again, no. Generally, it is normal to not include the names of apps or other softwares on your resume. You will list your company, with a generic "mobile apps" topic. While commenters noted that some companies indeed ask for individual apps you worked on, a good hiring manager should understand that a single developer working on a large, bad, application, is not necessarily the one to blame. You can always use a line like "I worked on this large app XYZ as a personal challenge, but was not in a position to really change what I thought was needed to get it out of its stagnant state. I learned X, Y and Z from that experience." So, don't fret. The thing you should worry about is whether you are landing in a cesspool; a bad brownfield project with disillusioned colleagues, bad political landmines, etc.; but not whether your app store rating will suffer. 

Short version: Study salaries in your area, your employer (glassdoor.com) and evaluate your skillset as objectively as possible. Then negotiate as though your employer does not discriminate and try to get a fair salary. If they attempt to offer you too little, negotiate for more. If they refuse to pay you a competitive wage, regardless of their motivations, then find another employer who will. Software Engineering is a field in which there is a labor shortage, you have the power to shop for an employer who will treat you fairly. Long version: You seem worried about the wage gap, but don't worry, it almost certainly won't affect you. To explain why, let me give you some background. In the United States, the statistic commonly known as the "Wage Gap" comes from the Bureau of Labor Statistics Highlights of Women's Earnings report which they publish annually (I have linked the 2013 report.) First, a quote from the first page: 

The first contact for the best job I ever had was a complete, bizzare joke. The second best job had a very painful first meething (not funny at all, rather hostile). I stuck with both (for whatever reason each time), and both jobs where nothing like the interview process. In both cases, I worked with the people who interviewed me, later, and it turned out that they were great at what they do, just interviewing was not their forte. So, if the "content" of those jobs is fine, I'd safely suggest to ignore the form. Unless, of course, you are shooting for a position in the HR department. :-) 

Obviously, I am assuming that since you quoted the word "fire", they did not literally send a mail to HR to exclude you from the payroll, but they told you that they want to live Scrum to its full extent (and intent). Obviously, I am assuming that they don't actually want to cut the lines on the organizational chart of your company. Even a pure Scrum Team still needs to be rooted somewhere in the company, i.e., be part of line management, and that is you. You just are not involved in the day-to-day work anymore.