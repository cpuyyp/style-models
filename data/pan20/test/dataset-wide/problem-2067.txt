The fine print - please read if you disagree with the above To preempt critics, because it's a rather sensitive topic: please do not try to draw too broad generalizations from this post. I am perfectly aware that there are courtship behaviors which men and women have in common. A woman patting a man's bum is just as inappropriate as a man patting a woman's bum. The post focuses on the exact kind of statement noted in the question. Also, I am aware that there are individual differences. There can be women who send early verbal signals of attraction, or men who manage to use "darling" without being sleazy. Still, the answer above covers the average situation pretty well. The policy exists to establish the standard operation procedure for the average situation, but in the individual case, it matters whether the target is creeped out or not. I am also sure that I will get comments saying that the differences I described above shouldn't exist, are not natural, describe a patriarchal norm, etc. A debate over nature vs. nurture would be irrelevant here. Fact is, we are living in a world in which the difference exists. Targets of sexual harassment should be given support based on the reality they live in and not on "if women behaved exactly as men and reacted to external stimuli exactly as men, the world would be simpler and we'd have real equality". Another topic I didn't touch on is that same-gender harassment also exists, that transgender harassment is different from harassment between cisgendered people, etc. I kept the answer heteronormative, because it is complex enough without me addressing issues with which I have little experience and which are not relevant for the concrete situation experienced by the OP. 

Don't give a point estimate, give a range. Point estimates are usually seen as the default, but in most cases, range estimates would do a much better job. Your case is one where the range estimate is the better choice. For a task you are very comfortable with, you can start giving narrow ranges. "I will finish the monthly report in two hours, plus/minus 15 minutes". When you are faced with a task which you don't know what will entail, the truth may well be "between two hours and two days". Simply stating that will sound insolent, so give it with an explanation. "I saw a monthly report produced in another project. I'll have to look into it. If the numbers are available somewhere, two hours should be sufficient to write up the report. If I have to find a way for calculating them, and chase down sources, it can easily stretch to two days or more". Now, the manager can let her inner Kirk hang out and scream at you that two days is unacceptable. To which you can answer that 1) it is still possible that it is done in 2 hours, you just can't estimate the probability, 2) you cannot create true numbers out of thin air, 3) after you have gone through the process once, you can prepare better for next time (gathering numbers during the month, reusing an Excel macro to calculate them from raw data) so next month the report will take much shorter, and 4) ask her, if two days are not acceptable, what should you do if it turns out that the numbers will not be available on time? For example, provide only one section of the report (which one), or get permission to pull a second person from his usual tasks to also work on the numbers? It is especially important to get the fourth one right. You have to display understanding for her concerns and be genuinely open to alternatives, while gently reminding her that "get it done in the time I alot" is not an option. If you come across as sarcastic or condescending, you will hurt your chances for reaching a constructive relationship with your manager. She still won't be happy, but the best thing to do here is to take her concerns seriously (maybe you are missing an external deadline) and to engage her in your estimation process so she sees for yourself that you are not simply being difficult on purpose, or too dense. She may manage your time, but you have to manage her expectations. 

A software team needs not only developers, but also requirements engineers, testers, and a few other roles. It is entirely possible that on a small team, the same person wears many hats at once. But note that the role of a requirements engineer requires a different skill set than that of a developer. If you try to create requirements blindly, without knowing the right way to do them, you'll be very inefficient, basically coding the wrong application in most of your developing time and then getting frustrated when you have to scrape it and start again. I would suggest that you get some of the skill set needed by a requirements engineer. In your current job, you will become better at the tasks you have been saddled with. In future jobs, where requirements specification may be created by a dedicated requirements engineer or by a consensus within the team, or cobbled together by a client, having this skill set (which will interface with your purer developer role) will make you a more valuable team member and will allow your team to work more efficiently together due to better communication with you. The best way to start is with a comprehensive textbook. My personal favorite is Ian Alexander's Discovering requirements, a very practical text which is easy to follow by beginners. The second read on your list can be Lauesen's UI design for engineers. The title might sound aged, but what you'll learn from it is now known under the buzzword UX, which is a plus to have on your resume nowadays. And no, that's not only about the interface, it covers all requirements which are perceptible to the user (so including the question which functionality to include). At the same time, educate your managers that it is real work. This means that 1) if they expect you to do a job which needs 10 hours worth of requirements analysis, you only have X-10 hours left to code. And 2) that, just as any other process, it turns input into output, and you need to be given access to the input before you can produce a specification: in this case, any information you can get about the future use of the application you are working with. Even the biggest RE whizz cannot create a good concept if he is not given access to real users. The books will tell you which sources you need access to; try getting as much of them covered as possible. 

The question surprised me, because to me it approaches the situation from a false assumption: that the salaries should be similar. Why should they? You have two separate markets for labor. It would be a very strange coincidence if they happened to end up at the same equilibrium price. It's like asking "Why is Everest so much higher than Mont Blanc", it's just not possible to reduce it to a few obvious facts from common knowledge. If you think that a price is something which is inherent in the good being traded, then this is a false assumption. The price is determined by the market, and separated markets end up with separate prices. The American and the European labor markets are mostly separated. If a programmer in Europe gets offered 60 000 Euro and considers whether to take the offer, he is unlikely to have a high preference for the alternative of "emigrate to America, where I'll easily get a 90 000 USD offer". So the price setting in Europe happens independently. While the factors Rob P. and Pavel Petrman mentioned do exist in reality, they are not really "the reason", or not the main reason. Even if the vacation, health insurance and other monetary-equivalent benefits were equal, most programmers would still be reluctant to emigrate to the USA for a higher salary, due to both personal and regulatory reasons. So employers could still offer a 60 000 Euro job in Europe and know that, if the candidate does not take it, the reason is not because he decided to go to the USA instead. The price is still determined by local factors, with the price in the connected market having a noticeable but small influence. You can easily see this if you compare other countries. A programmer in Bulgaria or Romania gets a much lower salary than a programmer in Germany, even if you compare PPP and not nominal salaries. And the nonmonetary benefits outlined in the other answers are also worse in Bulgaria and Romania than in Germany. Despite there being no regulatory barriers whatsoever (no work visas required), the salary levels in the three markets don't move closer to each other, and there is no mass emigration towards Germany. While the emigration flow is obviously turned towards Western Europe, the majority of the population, including the programmers, chooses to stay home and work for the salary offered in their local labor market. This disproves a simple model in which the "salary plus benefits" combination is equal across markets, even if you add real wages to your model. The explanation of how a market arrives at a certain equilibrium and not another is fascinating, but way too long for an answer on a Stack Exchange site. In fact, even a degree in economics only gives you an incomplete picture. I realize that my answer amounts to "they are different because they have no reason to be the same", which is quite unsatisfying on many levels, but it is the only valid answer which can be given in a few paragraphs. 

A male boss saying "darling" to a female employee The statements made by your male boss is a typical first step of a courtship ritual for a man. Any woman who has been the target of unwanted attention a couple of times will recognize it. It may look perfectly civilized on the surface, and it probably feels this way to the boss too. It is still a signal that the boss would very much like to create more intimacy. Even if he does not plan to act on that desire, it is still extremely uncomfortable for the targeted woman. It legitimately creeps her out. A very devious thing here is that men tend to overestimate the reciprocity of attraction. If he sends a mild signal of attraction and the woman does not immediately act with aversion but simply takes it with embarrassed silence, he sees this as acceptance enough to press a bit more if the situation presents itself. If the woman is too shy to openly rebuff him for whatever reason, this creates a very awkward situation. And the fewest people are brave enough to openly confront their boss, especially when it comes to personal matters. Woman -> man sexual harassment Now you are asking, what about the reverse situation? Well, if we have a woman boss signalling her sexual attraction to a male employee, then you are correct. This is as much of a sexism issue as the other way around. Maybe men are wired in a way that they are less likely to perceive attention from a woman as unwanted, but it still can happen. And when it happens, they are entitled to be taken seriously, and to receive support in dealing with it. A female boss calling a male employee "darling" Statements like "you have nice hair" or calling someone "darling" are not connected to sexual attraction for women the way they are for men. Women frequently use them with people to whom they are not attracted, and rarely make them part of their courtship ritual. While they are statements whose relationship aspect dominates their factual information aspect, they do not establish an admirer/pursued relationship when used by women. Conversely, you will not hear a straight man calling their male employee "darling", because that would imply such a relationship. Human language is complex like that. It is difficult to define what statements made by a woman would be equivalent to those made by your male boss. This is because women tend to use more nonverbal behavior at the early steps of the courtship ritual. If you were to notice that your female boss is wearing lipstick only on days when she has a meeting scheduled with you, this would be a comparable signal to a man's "you have nice hair". Is this an example of double standard? I am not denying that a double standard exists, with men having it hard to convince people that they can be the target of sexism. But the situation you describe is not an example of the double standard. It is a sensible policy which does take into account the intricacies of human communication. The words uttered may be the same, but the real signal behind them is quite different. 

Billing the customer for small increments, as in the top answer, seems fair from the point of view of the developer. And it is even possible that in principle, the customer would agree that it is fair to bill for stuff which adds up to a sizeable chunk over the month. But in reality, billing for tiny tasks really reduces the value of your service to the client. Right now, your client might get stuck in a rut in a small task which is outside his usual expertise. Stressed and frustrated, he asks another human being for help, gets it, and the stress goes away. If you would bill for 5 minutes of work, this already stressed client has to make the decision to spend money before he calls you. The sum may be tiny, but this doesn't matter (see Arieli's research in that area), it still adds to his stress instead of subtracting, and also does not get the whole nice halo of "help" which makes us so happy, as it is now perceived as a financial transaction. So, billing for every 5 (or 15) minutes is the wrong way here. What you can do instead is to offer a quota of free service minutes per month, let's say up to a sum of 3 hours. Of course, this means that the clients are paying for it through your hour rate. And they are smart enough to realize that. But it doesn't matter. It is a constellation which allows him to be carefree when it comes to small annoyances which stop his workflow, and people are happy to pay a monthly bill to be carefree. What they hate is to be stuck with a stupid little problem and having to pay to make it go away. The quota should look reasonable, not "you get 15 free minutes a month". But note that your client is probably not realizing how quickly his requests are adding up. If you give him a quota of 3 hours per month and he starts hitting it regularly, you are in the position to say, "OK, would you like to purchase 5 more hours of monthly 'minisupport', the rate is $XXX". This subtly drives the point home that this is a service he has been using, that he obviously needs it, that it is not so tiny as he thought (hitting the quota proves it), provides him the option to continue using it (as opposed to a "sorry, I'm gonna stop giving you minisupport even though you had it earlier"), and gives him the control over whether they get more of it or not (and people like having control). Also, it can be an advantage you use when selling your to a prospective client: "With me, a quota of 3 hours of free minisupport is included in the contract". (You'd need to define "minisupport" here so you don't get into squabbles if a request was for minisupport or for a standard billing rate. Maybe count everything solved in under 30 min as minisupport and track this minisupport time in 1-minute increments). This will still make some clients angry. They signed the contract with the expectation of it implicitly including full carefree support to whatever degree they need it. Clients with unreasonable expectations are a fact of life. But if you try to meet their expectations as to not lose their goodwill, you will go bankrupt. Stick with those who are willing to pay for work done. 

I understand your arguments for wearing the headphones. But let's think for a moment whether the other side's arguments are also valid. Is there any reason that the management feels you and your fellow software developers should be more "approachable"? Companies don't create new policies out of the blue, they create them as a reaction to some threat, real of perceived. Try to find out what the root problem is, and negotiate for a different solution to the same problem which addresses both your concerns and theirs. The trick is to always take the concerns seriously, even if you disagree with the proposed solution. For example, could it be that junior people have complained that they feel uncomfortable asking for help from seniors when they see them wearing headphones? Or that inhouse users wanted to tell developers something and were put off by the headphones? Or did the CEO throw a look into your large office and was greeted with a picture which didn't mesh with his idea of the company culture? Whatever the reason, try finding out about it and really addressing it. Talk about your concerns, indicate that you are open to other solutions which address them, and that you would make concessions too. Maybe if you promise to have regular "office hours" when your users can come to you unannounced and have you respond, they will agree to you being "unapproachable" for the rest of the time. Or if they can come up with another solution to the noise problem (although that's difficult). This negotiation has best chances if you are backed by others with the same predicament. Try to get more people on board, not just those from your department. Maybe there are other people (accountants, lawyers) who also need deep concentration. Also do some research for the real basis of the policy before you start anything formal (use as many connections as you have) and prepare thoughtful alternatives before starting a protest.