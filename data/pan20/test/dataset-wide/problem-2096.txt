As a manager, it is not your job to protect this developer from the inevitable outcome of his sub-par performance. It is your job to get him to perform better. Everybody is on a path, for some the path is up and for others it is out. You need to make sure that your developer knows that his own actions will determine which path he is on. 

If the hiring company initially agreed to pay for the travel, then they should stand by their word. I'm sure they didn't promise the candidate a job before the interview, so why should the candidate have to promise to accept the job(and the company). The interview process is for both sides to be able to evaluate the opportunity and freely decide whether to go further. 

Respect in the workplace is earned capital, spend it wisely. Frankly, if you have only been there 3 weeks, your recommendation probably won't mean much anyway since you haven't had the chance to really prove yourself. Also, if you recommend this friend, you are now linking your name to them for the journey, including if (s)he gets a job and then messes up. If you can not evaluate him/her as a worker, do you really want to hang your name on that recommendation? The interview process will not be based on how great a friend this person is, and that is the only thing you are qualified to recommend on. 

Similar to another answer here. State the facts. That is, your suspicion is just that, a suspicion and it doesn't appear to the reason why you'd choose not to hire this candidate. I think that the way you've summed it up already in this question provides valuable feedback to the candidate. Provide the factual feedback that you're not comfortable with the candidate's level of understanding of topics that they should know. Back this up with your observations during the interview. For example... Facts When I asked questions X, Y and Z whilst you were able to provide an indepth explanation but where unable to explain follow up questions that are designed to show a candidate's fundamental understanding of the question. Consequence Because of this I'm not comfortable that you have a sound understanding of topic A, B and C. Meaning that you have not been selected for the position at this time etc etc Resolution If you're looking to apply to a similar job in future. I would recommend you look into X, Y, Z so that you can answer questions more efficiently when probed for a deeper understanding. Note: Don't confuse your suspicion of this candidate googling answers to things as the reason why you've chosen not to proceed with them. Whilst it might be a byproduct of the candidate not understanding the topic you're asking about. Fundamentally it's the lack of knowledge that is the problem, not what they may or may not have been doing on the other end of the phone. 

So you'd rather be the weird new guy who feels forced into doing something he doesn't like? "Thanks, but I'm not interested" is a perfectly acceptable response in this situation. Especially when the difference in desires is that striking. I know it's not easy as the new guy, but this should build some level of respect for not bending on your desires and principles. If they can't respect that, you have a whole different problem. 

When you inform your boss of an obstacle, do you also come with a solution? I realize timing doesn't always allow for this (as in your example when he walked up as you identified it). Manager's (should) want their team members to be problem solvers, not problem reporters. Unless the solution is actually something you need the boss to do personally, what do you expect your boss to do with the information? You don't necessarily have to know that your solution will work, but you need to come with some plan. "hey boss, I just ran into this problem, and here is what I am going to try do do to solve it." If they have a better idea than they can give you some ideas or feedback. If you don't come with any proposed plan, it seems like you are just asking them to solve your problem. I think this is probably why (s)he said “you’re the programmer I cannot help you with this”. You mentioned that he is somewhat technical, but not a programmer. What do you think (s)he can do with your problem report and no idea of a solution? 

I'll answer your actual question directly first... I would tell him that you don't want to give out that information in much the same way you've explained it here. Anything else would just be beating around the bush and isn't a surefire way to achieve your end goal of not disclosing the information. Example - "Sorry, I don't like to give out my Steam details as I like to keep my work life and outside life separate from each other" Then I'd perhaps explain that maybe you'd share your details with him once you get to know him a little better (if that's what you'd actually do). Now to avoid the situation in future If you really have no intention of giving out information to people regardless of how well you know them at work. Simply state that you don't have Steam or whatever else it might be that they're asking. If someone's asking if you have something like a social media profile then I can assure you that their next question is likely going to be a request as to where they can find your profile. An alternative to this would be to answer yes, but immediately state that you don't like to give details out to work colleagues. Regardless if you want to keep 2 separate 'lives', you're not helping your chances of making friends in the workplace which may hinder your chances of progression and unfortunately it's not what you know, rather it's who you know. 

I don't see this as unprofessional at all. We live on our mobile devices and people should expect that they could get messages sourced from there. More importantly, it helps set context for the message. If I shoot back a short quick reply from my phone, the recipients can see that I may not be in a good place to give a detailed reply. 

First of all, act professionally and treat all members of the team with respect, regardless of their place on the age spectrum. Being a good team player can cover a lot of differences. It is very important that all members of the team recognize that Baby Boomers, Generation X and Millenials grew up in different times with different formative events driving the development of their philosophies on work and life. If all team members think a little about these differences in background, you can avoid a lot of problems. If these differences are respected, this can create a effective diverse team. My company hires recent graduates all of the time and we have plenty of more experienced employees without this creating any issues. HR even has an internal training class to help employees work across generational differences. Last year, one of our new hires happened to be a young man who is a good friend of my son's and someone I coached in little league. I treat him as any other employee and to him I am now Mr. P instead of Coach P. Age only matters if you make it matter. 

I would put it in much the same way you've written it here. You mentioned that your job is stressful and demanding and you're not growing career wise. Make your direct report think about what's keeping you at the company and what reason you have to stay. Perhaps they think that you're comfortable with what you're doing and you don't really mind that you haven't been given anything extra, perhaps they're just thinking that you want what everyone else is getting? Below's a few talking points for you. Be extremely clear about what you want and where you want to end up. Most people don't want to stay in the same job for the rest of their lives, so let your manager know what you aspire to, what's driving you. Show that you're keen to learn. Don't forget to tie it into a benefit to the company, why should they put you through the training? How does that turn into a benefit for the business and how will they get a return on their investment? Will they end up losing the "invaluable person" they have in their current role? Talk about how you could up-skill/cross-skill someone else into your role. If you're determined to reach a goal and there's a roadblock in the way, ask "How can we overcome that?". If it's something that simply cannot be overcome, then you really don't have much option other than to look for another job that will provide what you're after. On a side note It's best not to let things slide for so long, if you're determined to get something, letting it go by for 7 years without having a path to your destination doesn't exactly scream determination. You have very little reason to show loyalty to a company that can't keep it's promises. At the end of the day you need to look out for yourself. "You're #1" as someone else here put it! 

Companies are highly unlikely to hire you for a management job when they can't see whether or not you are qualified to do the job. You don't have experience and they are unlikely to want to give you a job just to see if you can do it. Remember that as a manager, you have the opportunity/risk of much more damage if you do something wrong than you do as an individual contributor. You will need to try to gain some experience with your current employer. Talk to your boss about running the next project that comes to your team. Check your companies internal job postings (if they have them) to see if there are opportunities with other teams. A company that already knows your work is more likely to give you a chance. 

These two sentences don't align. If you are doing scrum, then there shouldn't be any assignment of work. Team members should be picking up stories as they go. Ideally they should be capable of handling any story and try to work on a variety of stories to maintain as broad a skill-set as needed. If there is a need for more/better QA, you should discuss this with the product owner and the scrum team to decide how the group wants to solve the problem. If you are in some sort of technical leadership role (which it sounds like), then it is fine for you to bring this need to team, but the team needs to decide how to handle it. With respect to the current unhappiness, this is something that should be handled in the retrospective discussion so that the team can decide how to proceed in future sprints. Update post question edit: Discussing with half of the scrum team (the onsite half) is not how this should work and you have likely alienated the off-shore half. In the scrum model, all non-PO team members should be equals in discussing how the team should operate. You have just told the 4 offsite workers that they are not equal. 

In short, don't. From your description it doesn't seem that your 'forced removal' from the group is relevant in this case. You've mentioned that the call was made to 'stand down' and then you ended up leaving after that; so the circumstances that came after that seem rather irrelevant unless there's further information that you believe changes the story here. The end of the project seems like a pretty reasonable reason to leave and a 4 month tenure seems to be fine if it's just a hacked together group in response to an emergency. Your first paragraph I believe explains your situation fine. 

To answer your question directly... Yes you should support him if that's part of your job. You should do this regardless of what you believe will be a good fit for this person given their current skills. The Why This person appears has the drive to get into development. Employees tend to work rather well if they enjoy what they're doing. Happy employees are productive employees and productive employees means FTE well spent. Now to address your concerns If you believe that this employee doesn't have the skills needed for development; then let them know. There's nothing wrong with this; give the employee tasks to do at home if it's something that's simple enough that they can google. Get them to learn the basics before you teach them how to code. If it turns out that it's something that they just aren't able to learn then you can raise it with your manager and let the manager know that you don't think that they'll be a good fit for the role. In short; start with the basics. If you're there to mentor this person, then tell them what they need to know prior to being shown how to code/develop. If they can't grasp the basics then so be it; but until you provide someone with the rope, they aren't going to trip themselves up and fall flat. (Who knows, they may even be a great fit) 

"What's in a name? that which we call a rose By any other name would smell as sweet;" - Shakespeare R&D has some general connotations, but many companies will use the name to cover different things. For my current employer, R&D covers: PC support, console room (server support/management), infrastructure and framework development, new product development and support/enhancement of existing products. Basically anything technical. At a former employer, R&D was strictly research and initial build-out of new products. Once released these products were maintained by teams in the 'business' side of the house. Instead of trying to figure out the right name for each possible employer, you should describe the kind of work you actually want to do. 

There are different areas where you can provide too much or too little detail and it is important that you cover those areas appropriately. 

Having their logo on your business card says nothing about the works you did and provides limited value to new clients. It may give the false impression that they are endorsing your skills and work Most companies have trademarked or copyrighted their logos, so without their permission you are not allowed to use the logos. Any company large enough to be worth having on your card probably does not want random people advertising the relationship.