I'm trying to make a powershell script that essentially automates the account lockout tools. ideally I'll be able to get a fairly efficient query that can identify recently locked out accounts then retrieve that data from our DC's and probably send an email letting us know who was locked out and a copy of the "message" from the security log. here's what I have so far: I read that to use Get-WinEvent we have to use a hashtable so i created a hashtable object and expanded by datetime variables into the hashtable and they appear correct, and if I run something like $hash.starttime | gm , I can confirm that it's still a system.datetime object. 

one consideration might be programatically dialing a VPN into these networks if it's a possibility and the client will allow it. and provided the default admin shares are enabled for logical drives on these machines you would be able to just use a UNC path to connect 

The typical reason people care about this in relation to SharPoint is that they start seeing errors in their Event Log relating to the IIS WAMREG admin component. Here is the KB article detailing this: $URL$ The errors do not cause any problems with the functionality of SharePoint, and are basically a nuisance. 

SSRS 2008 does (by default) not rely on IIS. You can run them side-by-side if you wish, but it is no longer required. To configure the URLs to access SSRS, you use the Reporting Services Configuration Tool - you probably want the "Advanced" configuration for Report Manager. See the following link for detailed instructions on how to setup URLs in SSRS 2008. $URL$ 

Then all you have to do on your side is to trust this single CA key by adding it to your either personal or global known_hosts file. You will now be able to log in to the machines without and having them automatically trusted. This may give you some security concerns because the CA is available inside the image at first boot, but it works for us because we have very good control over the infrastructure and we think its good enough to remove it once the certificates are generated. Possible alternative solution using SSHFP Another solution that just came to mind is the use of SSHFP records. If you have a DNSSEC signed zoned you could have the VMs report their key by some method to your DNS server and then publish their keys in DNS using the SSHFP record type. The OpenSSH client will trust these records if the zone is signed. I have writted a short guide on this: 

Most likely that site is hidden. In the site directly above the missing site, go to Site Settings -> Navigation In the little tree view that appears, find your site. It should say "Hidden" next to it. Click your site, then click the "Show" button at the top of the tree view. Click OK and your site should reappear in navigation. 

SQL Compact is not the same as SQL Server, and stores its data in a different format. What you need to do is export the data from Compact and import it into SQL Server. Luckily, there is a tool on codeplex for this: $URL$ 

Open a DOS prompt diskpart list disk select disk <X> (where <X> is the number of your USB drive) clean create partition primary select partition 1 active format fs=fat32 assign exit xcopy <ISODIRECTORY>*.* /s/e/f <USBDRIVE>: 

We have a solution for this at work where we use SSH host certificates signed with a known CA to get rid of this problem. If you are not familiar with ssh certificates you can read about it in the ssh-keygen manual and also there is a lot of nice guides out there: 

Yes you should add NS records for all of your DNS servers in your zonefile. You should be able to ask all of your DNS servers: "what are the DNS servers for example.com" For example: 

BeeGFS (Parallel networked filesystem) NFS (oldschool "network file system") Lustre (Parallel networked filesystem) CIFS/Samba (More often used to "share files" among workstations) 

Like the comment says OpenSSH is pretty strict about what permissions it allows on chroot directories (for good reasons). So the solution is to have a subfolder with the permissions you want to use for your particular case. 

If you have Visio 2007 Pro, there is a feature to reverse engineer an existing database - it will read your database and create a Visio chart with all of the tables and relationships mapped. $URL$ One caution when using it with SQL Server - I've always had problems using the SQL Server driver directly. Instead, I tend to have to use the "Generic OLE DB Provider" and then select the SQL Server OLE DB provider within that. 

Try running a utility like Sharepoint Manager on your site. Maybe it will see a list called Pages that for some reason you aren't seeing through the web interface. 

I don't think what you want is built into perfmon. You could always take any counter and export it to Excel. There you can do any sort of data manipulation that you wish. 

The cloud part In order to have the ssh host keys unique and generated at the host we have the private host CA key stored in the images we use. When the image boots the first time sshd generates new keys and then we have a "firstboot" script that basically does this: 

But if youÂ´re not used to this kind of stuff I would recommend to have a loo at BeeGFS or NFS. NFS have support of of the box in *nix operating systems and BeeGFS should be pretty easy to set up. 

This post is very unclear and not very specific. It also contain several questions. But I will try to give you some pointers where you can start to look. The first one is how you should handle the storage at the storage server. If you want to have a single namespace for the whole amount of disk space it would be easier to have some sort of raid solution. This could also be good for data integrity or data availability (or both) depending on what raid level you choose. There is multiple ways to implement raid (both in hardware and software) so you need to investigate what suits your needs. If you want to have it simple I would recommend some sort of software raid that doesn't require any specific hardware to start with. The other question is how you will share this data among the cluster nodes. The simplest way to do this is probably by setting up a NFS server on the storage server. But there is multiple network file systems out there with different characteristics. Please have a look at: 

You appear to be missing the required parameter to the cmdlet. If that doesn't help, you may need to run the Powershell console as administrator to get the command to work properly. $URL$ 

The first thing I would check is the user's "region" settings. A user can set a time zone and calendar type to be whatever they want, and it overrides the settings from the web application. Some of the calendar types do change the date to match up with whatever calendar system is chosen. To change the regional settings for a user: 

This blocks everything except for the 3 IPs: 69.59.196.211, 69.59.196.212, 209.86.225.147 For the 3 IPs that do get in - the rest of the rules will still apply to them as they normally would. Also, if you do a "custom" rule instead of starting out with a port rule, it allows you to choose "Any" for the protocol to block all protocols/ports.