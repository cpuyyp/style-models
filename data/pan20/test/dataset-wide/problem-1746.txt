Edit: I see that the device is showing up as "p2p1" in the . I altered my manually created init script and the interface now comes online with an command. I can ping myself too. Working to get it online in the proper VLAN now. I will update this post again with the results. Edit: Very cool. It's now working! I wish I knew why a) the device name is "p2p1" and b) the OS didn't automatically add the init script? Thanks again for your suggestions! 

Cisco and SonicWall VPN's are both IPSec-based (as are most VPNs used in the corporate world). You can interconnect them if you set up a site-to-site VPN. We do this all of the time with our clients to avoid the same problem you're encountering. Our firewall is just a Linux box running iptables and a IPSec daemon called "Raccoon". You just have to make sure that the dozen or so different settings all match. 

Given the distance and proximity to power cables, yes, fiber makes sense. The maximum length of a Cat6 run is 55 meters for it to be within spec. I would simply buy two switches, each with a GBIC uplink port. Install a fiber module in each and you should be good to go. It's not all that expensive. 

You use a service like BrowserMob which simulates a lot people simultaneously accessing your website at once. These services don't replay logged traffic, because then you'd be missing the client side of the conversation. E.g, your servers would be trying to send packets to computers on the Internet that aren't expecting to receive them. But what these companies do is study the logs (generally at an application-level, not packet-level) and use that information to figure out which pages people are clicking on, how often, and in what sequence. This data is used to write scripts/macros which BrowserMob then repeats. ApacheBench, as mentioned by another user, isn't really used much these days. It was more helpful 10 years ago when you just needed to figure out how quickly a static HTML document or JPEG can be served up under a heavy load. It's not a whole lot different than a bunch of people clicking reload, reload, reload over and over again on their web browser. You need something a bit smarter when testing a web app that has a more complex workflow. 

The Right Way(tm) to do this is with GlusterFS, which is a scale out filesystem that runs in userspace atop an underlying filesystem like NFS or CIFS. All this sounds impressive and complicated, but it's actually really simple to set up. It honestly should take you less than 15 minutes. You'd have two servers, each with a "brick" (unit of storage) defined. A volume would then be defined within this server pool. Replication of the data between the servers happens automatically, as does failover on the client if one of the servers dies. 

Ideally, I don't want this large of a range specified. Is there any way I can specifically configure and ? 

Find a service that includes Plesk with their VPS package. Plesk is a web-based server management GUI. If you're even a semi-competent sysadmin, you'll be able to easily manage the everyday tasks using it. But if you're serious about broadening your skillset, I would recommend that you find an old computer in a storage closet at work and install Linux on it (the same distro as your VPS). Use it as your in-house development/testing server and learn how to admin it via SSH. 

On a side note, be careful, though (quoting the docs): [ directives] are inherited from the previous level if and only if there are no directives defined on the current level. 

HTTP 303 is a redirection. There is nowhere in the configuration snippet you provide which creates any redirection whatsoever. It thus comes from a PHP file being processed in the block you are providing as I trust: you need to check the PHP application to fix this unwished redirection. 

is not specific to any Process Manager () mode. Its benefits are to respawn worker processes after the specified amount of requests they handle individually. It could avoid memory leaks in extreme cases, but usually it just frees up memory allocations accumulated when memory-hungry scripts were executed. Memory allocations pile up and the total amount of memory allocated grows, but is only freed on exit (thus when respawn). As you put it, you seem not to have activated when using . You should have seen a difference, and certainly more than a flat line. has the added benefit of stopping workers depending on the number of idle processes amongst them (, ), which are a kind of a metric measuring instant load. Stopping useless processes frees the associated allocated memory at the cost of process handling (CPU), which counteracts ensuring a safety cushion in case of spikes, maintaining idle workers ready to process requests. Now, if you really are looking after your memory, is more aggressive, (de)spawning processes as (not) needed (anymore). This mode is the closest to the edge, since it won't absorb spikes as well as , but it is the leanest on memory consumption (with the counterpart of using more CPU for process management purposes). TL;DR Memory allocations stack up for any worker process. If a particular request was memory-hungry, it will top the processing worker memory allocation, and this won't be freed until the process stops. Use to recycle processes, whatever mode you use. will recycle processes on another criterion which is load, and will kill processes when too much of them are idling. Having a higher processes turnover is more likely to prevent them being too much memory-hungry, at the cost of more CPU cycles used for processes management. 

Avoid at all costs automated tools which lack, by definition, the brains to properly convert rules. There is no simple 1-to-1 match between Apache and nginx ways. They have 2 different mindset. You thus need to understand what you are doing and use the nginx way of configurating it. That is IMHO a complex problem out of the reach of an automated tool. Concerning rules: 

will redirect to . According to best practices, it is better to enclose regular expression routing directives (, but also regex ) inside prefix locations. In You could rewrite the previous examples as 

The FOSS version has the , which you need to manually add at configure-time since it is not by default part of the binary. 

Redirect will be done through the use of rather than using , which is discouraged when avoidable. 2. www.domain -> domain Now to redirect www to non-www, I would use a , avoiding to use : 

Use to validate your configuration Monitor your error log file while you issue to catch any error that might happen at runtime which are undetectable at configuration time. 

I kept digging and found a script online where someone wanted to find user email addresses for incidents. I figured they'd have to find the user first (which would give me the AffectedUser), and I was right. Here's the solution: 

None of the properties there appear to map to any tickets (run a gm on it too). Granted, this could be ignorance on my part and the method to produce the tickets just isn't aptly named or described. I've tried looking at the SMlets source code to glean some insight, but I'm not a C# developer so some of it goes over my head. I've also tried to get some understanding and help from the msdn page for EnterpriseManagementObject Class, but to no avail. Hopefully there's a really simple solution to this and I'm just over thinking it. But, how do you get the Affected User for a SCSM ticket using powershell? Preferably a service request ticket. 

I'm using to download a file from the internet and place it in a network location. The location is similar to which the cmdlet says it can't find and that it doesn't exist. To get to pass successfully you have to add the filesystem provider to the location like this: . The rub is that doesn't like destinations with the filesystem provider declared and errors with "The path is not of a legal form". The problem is further compounded by the inability to use and run the code in a remote shell on the destination server. blocks this usage. What's the solution to using with a network location? 

As I need to be able to add and remove items from an array I need to cast it as an as opposed to the more common options (, , ). I also need to preset it with data, but the caller of the function needs the ability to change the preset as they desire. The preset in the block is required as another entity is looking for preset data. I've tried several variations, but here's the one that makes the most sense: 

When the domain was originally created there was a "god" account created. Find out what that was, its password, and you should be able to login to the DC hosting the global catalog. From there you should be able to undo what you did and give it time to propagate. If that fails there are some hacker techniques you can use, but it wouldn't be appropriate for me to relay that here. Contact a local security expert as they're usually up to speed on hacker techniques and can help you regain the domain. Of course, if this is just a few servers, and it's not critical, you might as well just wipe and start over. 

You'll notice I've noted your variable in special way. I've done this so Powershell know's for sure that $CertToList is a variable and to pull its contents into the body. Now, you can make the body however you want, you can do something like: 

Double check and ensure you're running powershell as an administrator. This problem can occur if your instance isn't elevated as some password policies (GPO) are likely hidden. 

Remember, as a powershell professional your code should be as easily read as possible. As with all professional writing, style matters. Also, you should look into using for using username/passwords so you're not writing them in plain text.