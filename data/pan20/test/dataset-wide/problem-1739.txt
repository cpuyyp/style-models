If you wanted to use a utility on your Linux (or other Unix) server box, and it required Java, and no other application on your server required Java, would you be turned off that you had to install it? That is, do you look at that dependency and think "Bloat, security hazard, another system I have to maintain," or at this point is Java so safe and ubiquitous that it's no trouble at all? 

Various processes log in various formats to various locations with various roll-over logic in . I'd like a log-viewer that can handle a decent quantity of data, join roll-over log files, and ideally could even interleave log records to get a timeline of what happened on the machine. For example, I saw a CPU usage spike at a certain time this morning and I'd like to see if there's anything in any of the logs that explains it. P.S. Yes I realize there's configuration issues like Apache logs can be "anything" so you'd need to tell the log viewer how to parse, and yes I understand that interleaving is hard between products because few columns (except possible "date" and "general message") would necessarily line up. 

I have CPU I/O wait steady around 50%, but when I run it shows little to no disk activity. What causes wait without iops? NOTE: There no NFS or FUSE filesystems here, but it is using Xen virtualization. 

It can change depending on which nameservers are updated. Check your TTL -- if it's 24 hours, it means servers are allowed to cache at least that long. But, some cache longer anyway, and it can be staggered, which means it can easily be 3x the TTL to actually move. If you know you're going to be switching DNS, set your TTLs low so the switch can happen more quickly (for most DNS servers). 

We're seeing a weird statistic on the number of table-opens. I've appended the mysqltuner dump below. It says we've open 94,000 tables in the past 24 hours. But there's only 15,000 tables total and we know that on this particular read-slave replicant only about 100 tables are being accessed. Furthermore it says we're caching only 2k of those 94k. How do I make sense of these numbers? And how to fix the caching issue -- sure we could "increase the table cache" but that doesn't sound like the root issue. 

I'm looking for a queuing system which is fast and reliable and potentially can be spread across machines. Platform is Linux. Open source is preferable. Both RabbitMQ and ZeroMQ look good but I have no experience with these or any other queuing systems. Can you point me in the right direction? 

My backups are failing when I try to use a network share hosted by a Synology DS211 disk station. They work fine if I target a different network share (i.e. \server1\data\larry). When I run the following command: 

Once and awhile PHP crashes and I get 503 errors until I start it again. I would like to configure lighttpd to manage PHP instances so it can restart PHP for me. I modified my lighttpd config by adding . 

I have tried playing with by adding/removing/editing the arguments I usually pass to PHP. Any advice? 

I'm using IIS6 with URL rewriting to create search engine friendly URLs for a website that I've been working on. I'm having a bit of trouble when error messages are passed back as URL parameters. Page cannot be found: 

I created an iSCSI target and used that for my backups. I'm still not sure why my original approach did not work. 

Now, I have a working server but its not using RAID. In the disk management tool I can see all three hard drives and two of them are unallocated. EDIT I just realized that I didn't create a raid array with the new disks before doing the restore. I just created a raid array and started the restore again. Now the restore only sees one disk (it saw three last night). 

I believe that the period at the end of the message is being interpreted as a file extension delimiter. Someone suggested that the period might mess up the URL rewriting but I've checked the log and the URL rewriting appears to be working. 

The backup creates the following path but its empty. I definitely have read/write access on the target directory (\diskstation\backup-larry). I have verified this by looking at the permission and by actually copying files to this location. Any suggestions? 

I would like to use Lighttpd and PHP to provide a lightweight standalone web server on Windows. I downloaded all the latest builds yesterday and after an hour everything was working fine. Today, I changed server.document-root from server_root + "/htdocs" to server_root + "/../htdocs" and adjusted my directory structure accordingly. After restarting everything, I see "No input file specified" in the web browser when I try to access php pages. Here are my configuration files. Of course, I've tried playing with cgi.fix_pathinfo and fastcgi.server but I can't seem to find the correct settings. Any ideas? php.ini 

When I start lighttpd, I see the following in my error log - it doesn't matter if php is running or not. 

I'm running small Ubuntu devel virtual on VMware Fusion. 4GB disk and 512MB RAM is enough for development. Network of VM is in NAT mode, so I can access it even when not on Internet. I also configured AFPd so I can edit files directly mounting share. As far as I'm doing Django only that way setup is as following... Django app running under some user account I created, that user homedir is also a root (loaded on login), I use that user to login to AFP. When new project I just clone template machine and create new user account + . Installing to VMware Ubuntu chooses kernel that holds main virtualisation abilities... thus XEN, KVM, VMware. Deploymnet should then be DevOps way... just copying VM files to cloud and starting it online (maybe conversion of disk file or its growing to production size). 

I think it is more probably a DNS issue than GSSAPI. likes prompt DNS responses to work promptly during connection phase... cause of logging and access checks. 

Is there any way to get network configuration of iLOM in Solaris SPARC? I want to get the IP address of iLOM console at least. It's pretty easy on x86 by , but for SPARC I can't find something that do the same. I found some mentions about and , but those are not available for systems with iLOM. 

So you have to calculate values for those param to mimic behaviour you get by setting 4 params to Solaris net stack. Btw check in Linux. 

If you have speedy lines between sites you want to mirror, I can imagine something like you export iSCSI volumes from sites storages and put them mirror and add some local disks for ARC, ZIL, cache to lower read/write peaks running over iSCSI. If your storage is mainly for backups, then it would be OK. Nevertheless SUN once had such product behaving like that on ZFS. 

Note that means command has to start in user login shell loading user environment too. In case that login shell is something like for security reasons, there should be a problem. Try to change to and potentially do fine settings in for that command. 

First one is pure software and second one is kernel accelerated provider accesible as PKCS11 token. Exactly those two on my old T1 Niagara are doing 8.4 sign/s versus 19740.0 sign/s. That's for sure huge difference. Modern x86 CPUs can accelerate AES for example and as far as I know it is used in software kernel provider. Check yourself what's the difference. More important is to have speedy asymmetric ciphers, because they are used during establishing a connection and are more CPU hungry... web applications close connection often. Btw KSSL is in fact just in kernel SSL encrypting proxy... a fact it happens in kernel contribute to speed too. Just to compare... on another machine, ~ same age as T1 noted above, but x86 in VMware is doing for me 42.1 signs/s versus 98.6 signs/s for rsa2048. So more than doubled speed.