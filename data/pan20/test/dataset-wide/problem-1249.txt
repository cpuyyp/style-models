suit and rank fields should be declared private, no need to share things and deal with infinite number of states. 

You might have notice that I called it instead of , because a map is a collection that holds things and things are plural. Note: If you need to iterate over a map, don't use iterator, use instead. 

And now you are sure that suit always has a valid value and there is no need for the error msg in the method. Your in the Card class is not type-safe, it will throw an if the passed parameter is not a Card, You can instead implement 

This gives a clearer hint to class users that the value they asking for might not be there. If using then is there, otherwise Guava is your friend 

I also have a preloader for this application, I have provided the code just for the sake of completeness. This preloader was generated by NetBeans. TeleMart_Preloader.java 

I am currently working on a project in Java, and I use JavaFX for the GUI of the System. Currently, I am in the designing phase of the system, where I am designing the look of the system as well as setting up the basic functionality like navigation. I would highly appreciate it if someone can review my simple navigation system and the code I have written so far. I would like to know: 

Your class doesn't have any flaws other than the ones I mentioned. You need to, however, adjust your method in that. So, you would do something like: 

What makes your abstraction leaky is the fact that is not abstract enough, that is, Manager and client shouldn't be there. 

Yes , you don't need to iterate through the map to know if it contains a certain value or not, you can just call 

Note: I don't claim to be an expert in principles, I do understand a bit though. Back to , violates the principle (The most frustrating concept to me). That is, when you add a shape you have to go and modify the code by adding an , this can easily solved by using , 

You have field that you mutating in a multithreaded code, this field can be cached and might ignore you changing it. You can declare it as to avoid this behavior. 

Example implementation: Click here. It is in an external file because it messes the whole document up when I try to add it. GitHub repository is located here for easier code view. 

At first, in your constructor, the fact that you did not use the keyword to invoke the method, looks quite weird. You should always make your code very precise. Therefore, you can replace it to: 

while practicing , I ended up with a simple weather application which works on the command line. I would highly appreciate it if you can point out any flaws in my code. They can be related to the efficiency, etc. I'm looking for anything you can provide in the review. : 

Your class should not have anything more than a and a property to store the code. However, it can have some accepting the code in different ways. Also, I would recommend having a separate class for validation. Let's call it . 

And because their values are known at initialization, its good practice to declare them . your method is not , use instead. Some validation on the parameter is needed as well. 

What are the functionalities expected by the users of this class What are the things that users shouldn't care about What shall I hide so users don't break it. 

When you see yourself going and editing the same function again and again to extend its functionality then thats a code smell. The problem is that whenever you add a type you have to add an if condition to your converter. So the conversion could be the class responsibility. in Java 8 you can use for that and if you don't have Java 8 then is your friend 

Exceptions Like @ChristianHujer suggested, do not pre-generate exceptions. Look at his post for details regarding this. The keyword 

I would love my component to be reviewed. I am looking forward to responses mainly answering the questions: 

I have programmed a simple command line password-manager in Node.js during my learning process, and since I am done with it, I would highly appreciate a review. Comments could be based on any topic. I am looking for a review which covers: 

That way, someone reading your code won't have a sudden stop wondering where did it come from. And then, realise, it's in the same class. The keyword refers to the current class. Variable & Method names The variable names you use such as , are quite horrible, and do not make sense at a glance. You have to go through the code to see what they actually are. Use some meaningful variable names, do not worry about the length. A good IDE will suggest you identifier names you might be trying to refer to by just typing 2 to 3 letters and hitting enter. You could use something like, , . That is more meaningful. Also, your method names need to improve. Do not make your code unnecessarily complex The expression: is too complex. You could easily refactor it to: . Single Responsibility Principle Each class should have only responsibility. The class should only be responsible for representing an code as the name suggests, it is . So, what should you do? You can do something like this: You can have a class like this: 

Threads??? Once you have threads in your code, your code becomes obsolete even if it was written 2 seconds ago. are the way to go, and you can easily replace your code by a single Task that keeps running and a function that accepts Tasks 

Because you have decided to declare as a , then you have to make it , because mutable structs are evil, and thats a good read if you want to know why And it's not that hard 

Code duplication is not a nice idea, it's a massive indication of code smell. You can create a helper class for your common code, ex: getting db connections, creating data tables, etc... 

Looks fine for me, but such a class should be , because it does not make sense to be able create instances of this type. 

I think you'd be better off using the official API wrapper from Facebook. If they ever change their APIs you could download the latest version of their wrapper and continue on. The best thing you can do for speed is cache the results. PHP can read files on the server a lot faster than downloading the information with CURL. 

Reference Here are the three main features of jQuery that I used. Each link uses <api.jquery.com> which is a great place to learn about various jQuery functions. 

I wouldn't recommend binding two separate click events that do relatively the same thing. It will become a pain to work with in the long run. 

As I said before, I'm not sure what kind of templates you are trying to load, but hopefully this will help. 

As you can see here no static methods anymore, static usually presents a global behavior, and I need to force users to go through the constructor so I make sure weights are computed properly. I suppose that what you using is algorithm (not sure though), where your class name is , that's a bit misleading because is not the only algorithm and it doesn't work with negative weights, and you need something like Bellman-Ford for that.If you don't want to support negative weights for now, it is fine, but you should be able to add this functionality in the future.And this leads for extracting the Route finder to an interface 

You need to be concerned about thread safety in web applications, HashMap is not thread safe so you can use the version.