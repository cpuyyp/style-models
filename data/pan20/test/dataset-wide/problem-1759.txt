Fast answer is no. will just tell who controls that address. will give you the publicly available IP address allocation data. However, the network block may have been split into smaller zones which are not publicly announce. 

As already noted use to manage log file rotation and cleanup. It can compress old logs, and remove oldest logs after X generations. My usual search for space runs using walking the largest directories using the command . This allows me to quickly find directories and files where cleanup will have a major impact. If you are using to monitor disk usage you can configure it to notify when usage is high. 80% and 90% are a good starting point for warning and critical messages. You run find on a periodic basis to find files larger than some threshold. This won't help if you have a lot of largish files, but will detect files growing unreasonably large. 

Check the configuration settings for the wireless device. The command should give the settings. These are the settings I have configured: 

I would just let your DNS server do what DNS was designed to do. Don't try to configure the domain in your DNS server. Your DNS server will cache the DNS entries for the TTL specified by the provider. At worst, you will have a stale entry for the TTL specified by the provider. If you do set up the entry in your DNS, set the TTL to a value no larger than the provider specified. You will still need an system to check the provider's DNS and update your DNS. This will add more complexity to your setup, and increase the risk of failure. You will also generate at least as much DNS traffic as specified above. It is possible to define TTL on a per entry basis, although I don't have experience doing so in active directory. Your provider is likely doing so on their server. 

You can define variables in (Linux/UNIX) or (Windows). Define the variables in the appropriate manner for the O/S you are running on. For Linux/UNIX you will need to export the variables. You can also define them in the environment you start Tomcat from. You can also create an or file for application (local) changes. Read the existing or file for details. Periods and hyphens are not valid for environment variables. Traditionally, the names are transformed by upper-casing the name and changing periods and hyphens to underscores. That would give the the name . This would be defined with a line like: 

The rules will block new connections, not existing connections. As long as they keep the connection alive they will be able to make queries. To drop their existing connections add a copy of the reject rule above the accept rule for established connections. Remove the rule once the connections are dropped. You should be able to see the connections in the output of the command 'netstat -ant | grep EST' . You may need to manually add a rule if they keep trying. Fail2ban only bans connection for the period specified by the bantime setting. A manually added rule should stick. 

Your mail server should retry when mail delivery is deferred. Do use a less aggressive retry policy such as after 1, 3, 6, 12, and 24 hours before failing. You could also retry after 2 and 4 days. If the newsletters are time sensitive you may want an even shorter retry period. You are unlikely to get penalized for retrying after a temporary failure, such as mailbox full. You may be penalized for and aggressive retry policy. I've seen servers retry several times a minute until they succeed. Some organizations will pass temporary failures to a second server dedicated to handling retries. If you do this, don't continue passing it to different servers. If you send out mailings more than once a month, consider temporarily suspending addresses that bounce from the retry server. Tacking how long an address is bouncing due to long term temporary failures (delivery success rate). Consider dropping addresses that have failed for a few months. You will accumulate dead addresses as not all organizations will bounce dead addresses. Consider sending messages asking the users to opt-in again every year or so. While you may not want to drop users immediately, you may want to drop them if they haven't responded for two or more years. EDIT: Overquota/mailbox full is not the only reason you will get messages deferred. You should retry all deferrals on a reasonable schedule as listed above. The server will defer connections if it is to busy. Greylists will defer messages from new servers that don't are not whitelisted. My server also defers messages from servers that fail various policy checks: SPF, rDNS (IP address), rDNS (HELO/EHLO if not matching IP address) etc. My greylisting is per network block, but my policy listing is done by server. My policy list would apply to Microsoft controlled services if they weren't whitelisted. Otherwise my policy lists have been catching spam bots, and junk mailers. 

Sixty active users may be a little high for the default DHCP settings on most routers. For a setup like that ensure you have a DHCP pool much larger than 60. You may want to set your DHCP range to start at 100 and allow 149 addresses. Setting the lease time to less than a day may help recapture addresses from computer which aren't switched on. I would expect 60 active users will also generate significantly more than 60 active network connections (session) at any one time. It takes a couple of minutes for the connection to be shutdown after it is no longer being used. You should be able to test connection capability with most load testing software. This should give you a sense of how many connections are possible over a period of minutes. You can will exercise the state tracking tables by creating lots of new connections over a relatively short period of time. Once you stop getting connections, you have an idea what the limit is. Another area which may cause problems is the DNS cache on the router. Load testing with lookups for lots of different domains can give you an idea if this is the problem. I don't know of any software for testing DHCP capacity. I would look at the lease count (available from the leases database) over time. As long as it stays below 80% of capacity you should be fine in that respect. When increasing the size of the DHCP pool make sure you start above 1 (which is normally the routers address). Also keep the total of the size and starting point below 255. You may get better results using a prime number for the size of the pool. There are plenty of Open Source solutions which you implement. Configuring a DNS cache server and a web proxy may help with the load. EDIT: One thing you may be running into is network saturation. If you have access to the error counters for the router's interfaces you may see some indication as error rates increase. I have seen reports lately that newer commercial routers are causing problems by queueing large volumes of packets. This can cause problems with bursty performance. Traffic shaping your load below the available bandwidth from your ISP is reported to help. Your lower spec router may be doing some traffic shaping inadvertently. 

Running your mail server as rather than may cause some severs to classify the mail as spam. Almost incoming main I have seen using second level domain names in the HELO message are spam. Most claim to be high recognition domains like , , , or . These domains actually use sub-domains for their mail servers. Multi-domain certificates are available. Or you can use the same third level domain for everything. Providing services on the second level domain is problematic on a number of levels. It is common to have a web server at this level, but except for purpose driven domains like , it is also common for them to redirect to a sub-domain. 

This works due to the ARP protocol and the routing tables. When a server doesn't know where to to send a packet for an IP address in network block the interface is configured to route, it will send an ARP request and update its ARP table with the response. Your server will also respond to APR requests for all IP addresses it supports. For other addresses, the traffic will be routed to the configured routed for the smallest configured network block that supports the destination IP address. If you only have one interface, all external traffic will be routed over that interface. The rest will be sent to the router which should have routes to all the devices. You really don't need to add routes beyond the default routes for the router, and the default route. 

Your access log should show all requests. It is likely that the applet is trying to access resources from your server. This is the default classloader behaviour. If the ZIP is on the classpath of the JAR, files will be loaded from it if the web access fails. There is a way to change this behavior, but I have not dealt with this problem for a few years. 

You did not specify why you want this entry. You can just add two lines to the the file, one for each IP address. This assumes your IP address is static on both these networks. (It can be static even if you use DHCP to get the address.) Any programs that display names for IP address will display your server's name when you are connected to either network. If you want this to connect to from your computer, it might be better to define a hosts entry reading . This will work on either network, or even if you aren't on a network. 

Cient keys used for login should be password protected. If you want SSL based services to restart without manual intervention, you have two options: