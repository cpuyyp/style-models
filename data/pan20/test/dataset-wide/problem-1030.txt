What is the best way to handle datetime comparison towards improving such queries. Below is the table structure: 

My application is running on MySQL 5.1.58 community edition. As I studied on SO websites that After acquisition by Oracle, new InnoDB plugin has been released and MySQL 5.1 with InnoDB plugin is the best for performance. Below is the command which displays the current InnoDB configuration in my system: 

To check whether this value is growing rapidly or not, just run the query at the interval of each second. You will be able to see how many tables are being opened per second? There is not a single variable or factor which is responsible for or . (1) open_files_limit: MySQL has clearly mentioned in its documentation about it - As per the storage engine, MySQL maintains file descriptors for each table. So, you must need to check system variables . This link provide you importance about this variable. Luckily, this variable can be increased or decreased in MysQL5.6 on Windows server. At the start of the service, MySQL automatically adjust this value <= specified value of . (2) Query Execution Plan: What is your query and how many tables are getting used? How efficient indexes are getting utilized during query execution. (3) Table Size: Number of records in a table. How big or small it is? (4) RAM: RAM is the physical memory and cache size depends upon the RAM size. In performance of and application as well as speed up the query execution, it plays a vital role. This is not the exact answer but a helpful suggestion. 

Based on the comment thread, the first step is to update the system. That is, install Windows updates, patch the Sql Server and update all the device drivers and firmwares. On virtual machines (which you seem to have), the VM guest drivers and the host itself should be updated, but that's usually not DBA's domain. Lack of patching is often a red flag about more widespread infrastructure problems. Please make sure that the system is fine in other ways. That is, you have a working restore plan [1], service accounts, passwords and user rights are documented and so on. To illustrate the patching effect, SentryOne has a handy list about the number of fixes included in service packs and cumulative updates. Just SP2 fixes some 133 issues, of which "only" 53 are public ones. Reading through all the release notes about if the problem is mentioned is going to take a while. As a side note: Microsoft's support policy is restrictive. One needs quite strong a business case (read: lots of money is at stake) if unpatched software problems are looked into. The advice usually is akin to "install all the patches and see if problem occurs again". [1]: "Working" means you have tested recently enough that the backups can be restored and contain the stuff they should. It's all too common that backup process looks successful, but doesn't quite do what was intended. 

As long as they are not nested, you should be fine. @@FETCH_STATUS is set at the time the FETCH NEXT is performed. @@FETCH_STATUS is global to the session, not the entire server. There is no equivalent to SCOPE_IDENTITY() for @@FETCH_STATUS. If you need to nest looped FETCH NEXT operations, make sure that your outer FETCH NEXT is performed after the inner loop completes. If you need to stack FETCH NEXT operations or perform a FETCH NEXT before an inner loop containing a FETCH NEXT, you can DECLARE a temporary variable of type outside the loop, SET the temporary variable equal to @@FETCH_STATUS immediately after your FETCH NEXT statement, and then use the temporary variable as your loop control instead of @@FETCH_STATUS. 

Third-Party Products LinqPad stores the whole connection string including Application Intent and the database when you save a connection and therefore might be a viable option for performing Read Only queries against Always On databases. 

If the SQL Browser Service is active, you can query the service for SQL Instances with the PowerShell code below. It implements the following commandlets to perform the queries: 

Click Options >>. Go to the Additional Connection Parameters tab. Enter the additional parameter as ApplicationIntent=ReadOnly; (Note: Users must not click the Options << button after entering the Additional Connection Parameters or the parameters will be lost.) Click Connect. Always launch query windows by right-clicking on the desired database in the Object Explorer view and choosing New Query to avoid running into the #3 caveat below. 

It is very poor practice to misuse reserved words. Frankly, messing with multiple periods , the table/column separator operator, you deserve any hardships coming to your way. There is no need for funky table names, barring some odd edge cases. The DB should be transparent to applications anyway, so stick to sensible naming. Escape the inner quotes. As how to do that, depends on your shell. The error message looks like *NIX shell, so try backslash . Like so: 

Talk with your SAN administrator. That's the source that should be able to explain you with detailed information what kind of SAN you've got and what it is capable of. Have you got MPIO? What's the structure of your fabric? Sometimes it makes sense to use multiple LUNs for different files. Behind the scenes, there might be different types of storage available. A SAN with some SSD capacity might offer tiering. That is, the hottest data is elevated to SSD -backed part of the system whilst colder data is persisted on HDDs. Some models provide autotiering, in which the system decides what's hot and what's not. Some models require administrative action. HP EVAs provide VRAID levels 0, 1 and 5. Using those will spread a LUN on all the disks in an array. This increases reliability, but the cost with VRAID 5 is increased controller CPU usage. The SAN admin needs to balance increased storage costs against increased CPU usage. Aligning NTFS blocks with storage is dependent upon the SAN. If you are in addition using virtualization (Hyper-V, VMWare, whatever), that's additional complexity introducec. Your storage vendor is likely to offer white papers, best practices and consulting services about how to configure the storage for optimal performance. Network packet size is relevant - if you use iSCSI. For FibreChannel, IP settings are not relevant. 

There are multiple views behind the logic of creating composite index in a table. Creating composite index is obvious when we have composite primary key. Beside this, we create composite index on the basis of our SQL query requirements. Ordering of column in a composite index plays a vital role in the selection of right index in query execution which improves the performance. If a composite index has only 2 columns then its easy to determine their order. 

So, Value of should be 512MB. To achieve this, I have written below line in and tried to restart it. 

If I run command, system return 73 records. But, column value for every record is . What does this mean? 

After installation, , and are the default database. As per the MongoDB tutorial, when we insert data in collection a database will be listed in command. For a specific purpose, I want to create a new database but I did not find any information about creating a new database. I executed a command like or . For both of the statement I got below error: SyntaxError: Unexpected identifier Can I know what are the steps to create a database? 

For example: as per MySQL datatype tutorial MEDIUMINT has 3 Bytes storage and can contains value from to . 

I have migrated my Database from Windows to Linux server. In many places, query has been written without focusing their cases (uppercase / lowercase). So, these queries are not getting executed and generating errors. As a result, functionalities based on these queries are breaking. Below is the example query to run in Windows and Linux: 

You could always read the what's new sections in the BOL. As for a book, have you looked at Microsoft's free book? A hard copy is available too, if you prefer. The book is not a coursebook but more general an approach. As per introduction: 

This very much sounds like a policy. From technical point of view, there is no reason why direct connections would not be possible. That being said, production admins are responsible for the production environment not going haywire, so this kind of restrictions are quite common in the industry. The current buzzword DevOps is pushing this limit a bit, but on more traditionally oriented houses there is little if any change. The reason why production staff are quite strict about the access limits is simple. If something breaks in the production, it's their fault. Even if the real culprit was a developer running a cross-join-o-matic, dropping indexes and generally being a clown. Production admins are supposed to have the environments running at top performance, and letting those down for any reason is a sign for problems. For a solution, talk with your team lead and boss. Write a memo that outlines the pros and cons the new method would introduce. Don't just list the obstacles, tell what's good too and propose solutions. The memo should give an impression that you are a problem solver, not a whiny complainer. After that, it's your boss' call what to do. 

I have a menu which is parent of multiple menu items and each child menu has their own child menus. This pattern is continued till 5-6 vertical hierarchy level. I don't want to write a query which contains nth level subquery as below: 

I am working on optimization of some slow queries in my application. I found a query in which datetime comparison has been used. Below is the subquery: 

Now, to verify whether InnoDB is available or not, I ran command. But, InnoDB is not listed in that. Then, I ran command below command: 

I have a complex query including join of 4-5 tables. 1 months back, I have optimized this query and it was using the index. Also, . Just few days back, I found that this query is appearing in slow query logs again. When I analysed it, I found that one table in this query is not using index which prompts to higher join size as well as higher execution time. As a solution, I executed command on the table which was skipping the index. As a result Query again started to use that index and not appearing in slow query log. Now, I have below question regarding the above analysis: 

I have installed MySQL-5.6.x community edition on RHEL5. It was running fine. Since, it is my testing server. To find the differences in execution timing, I have to install the MySQL-5.1 community edition again. So, I decided to uninstall MySQL-5.6 first. To do this, I followed below steps: 

SQL Management Studio (versions 2016 or later) SQL Server Management Studio 2016 or higher can connect with Read Only Application Intent (using the same 6 steps as prior versions) and it does store the Additional Connection Parameters. There are still some caveats: 

The SQL Server is running normally and the SQL Browser service is started. Querying the SQL Browser service with another tool on the same server yields the expected results. I can run regular SQL queries with SQLCMD and get the expected results. I was able to verify that the output above is the same on a workstation where I caused SQLCMD -L to receive no responses at all by enabling the firewall; however, the firewall is not an issue on this server. I've checked the settings and, as stated previously, my other tool gets SQL Browser Service responses to a broadcast just fine. Also, running WHERE reports that the path to SQLCMD is , which is correct per File Locations for Default and Named Instances of SQL Server. Does anyone have any idea why SQLCMD is doing this and how to fix it? 

The Object Explorer view will not enumerate any of the tables or other objects in the AlwaysOn databases. Attempting to expand them results in an access denied message. You cannot have a Read Only and a non-Read Only connection to the same listener open at the same time. Intellisense for object names in the database does not work. (Oddly enough, Objects get enumerated just fine in the Query Designer that you can launch using Design Query in Editor... from the right-click menu.) Caveat 3 from the prior versions' caveats still applies.