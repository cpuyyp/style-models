The actual invitation you then extend is a kind of benchmark which tells you if you were successful in setting your mind right. Talk When you meet, simply do small-talk. Prepare a long list of things you can talk about, from the weather to local sport events. Talk freely about your current situation (only the positive things of course, and no secrets or things too close to yourself or your new company; no comparisons). Don't initiate talk about anything from a year ago. Pick any opportunity to let him talk about his company (but don't encourage him if he starts talking about you). Prepare yourself for topics that relate to the time that infuriates you, and prepare your opinions so you don't have to think about them in the heat of the moment. Ask yourself what you would want to do if he asks you to return to his company ("thanks for the offer, but I'm really happy at my new company") or whether you want to have compensation when his company finally gets well ("ah, come on, forget about it") etc. Make it so that your answers are not just there as a stop for the huge pressure you feel inside, but that they are truly what you think. The mindset you have put yourself into, before, should make it so you do not need to lash out at him massively. Make 100% sure you do not need to lie to him or yourself. Oh, and by the way, please don't bring your wife. This would only transfer responsibility away from you. She was not there in the office the last 10 years either, I assume. Move on If he turns into his usual awful self, set yourself free from any personal feelings. Stay aloof, stay like a 3rd person watching a video of your conversation. Relax very consciously; breathe slowly and deeply. Think a few seconds before you answer anything. Have compassion, he is a poor guy who is probably hated by many, and he is probably not very happy. Ride it out, be polite, say good bye and be done with it. You have fulfilled your obligation. If, instead, by some wonder, it turns into a wonderful, relaxed evening, feel free to just let your relationship with him fizzle out like that. Take it as a closure, make sure he knows it was one ("it was nice to meet you one final time after all these years - good luck in your future" or something like that without making it sound snide or sarcastic). Firm look in the eye, firm handshake, separate taxis. I think you now know that it would be a bad idea to promise to meet him next year again. ;-) Good luck And let us know how it turned out. This is not an easy task you have before you, but failing will not hurt you more than you already are, and succeeding will boost you immensely. 

All scenarios work out as well as possible; return the watch. EDIT: Replaced all occurences of "clock" with "watch". Sorry, not a native speaker. 

I have, in fact, never seen a place where people wanted to be friends. I have witnessed plenty of people in the office where I would never ever have the slightest intention to befriend them, and where it still was easily possible to work together with them. You don't even need to be all smiles and happy face, in most places. You should be generally acceptable though, i.e. don't start growling whenever someone passes you. 

In the worst case, you lose this agent, but, frankly, it seems like not a big deal. If you really should get blacklisted for simply declining an offer, then I would take that as a sure sign that you didn't want to be associated with that agency in the first place. In the realistic case, you lose the job, which you are not totally dependent on, as you say. In the best case, they renegotiate and the agent remembers your minimum request. So go ahead, decline, relax, and see what happens. Next time, tell them a higher mark to shoot for and don't tell them your minimum right away. 

And so on. The goal here is not to have the manager storm off and "do something", but he and you can and should have a private talk about the issue. Maybe he has something to say about the other guy. Maybe he has some tips for you. Maybe he will encourage you to talk to the other guy because he knows that person and knows from experience that he just doesn't know his impact on others. Maybe he has a good communication channel with that guy and genially lets him know that he should give you a break. We can't know. Likely, after the first chat with your boss, nothing much will change, but you will know how to proceed for the next few days, and if whatever you agree to does not work, you can talk again and "escalate", in baby steps. EDIT: integrated some thoughts from the comments. 

As you are one level below "Director of IT", you are quite near the top of the food chain already. I assume that there's only one or two more levels of hierarchy above the "Director of IT". In that role, it is perfectly normal for you to be judged by the success of your project, quite frankly. As a project lead, that is the only thing that should count for you. 

You have a few good answers already, but let me add a little twist... I like people using documentation and it is a great sign for your professionalism. Not using documentation I know enough programmers that stumble along without a real plan for long spans of time, trying this and that by chance, picking through old source code where whatever they want to achieve seems to have been done already (but hasn't quite) and so on. Frankly, I detest this kind of approach. They never get very far, often have to ask people, seldom take advice and prefer to continue like this forever, seemingly. Only tutorials? People frequently googling for tutorials or code snippets including SO, without ever referring to documentation, irk me to no end. This behaviour is a huge trap, in my opinion. It leads to a kind of programming fueled by half-baked, arbitrary, unsystematic "knowledge". Those programmers tend to end up with a lot of prejudices. This is where nuggets like "never use ", "never use in SQL", "always do XXX", "never do YYY" come from. They will find it very hard to think out of the box, come up with new ideas, form intuition about how to structure their applications and all that stuff that makes up great developers. I would urge you to solve any problem first by looking at the documentation/reference, and then look for SO or other snippets. Of course, there are exceptions. If your problem is quite obviously something like a bug, or something very, very, very special which is unlikely to be handled in any sort of documentation (e.g., a special combination of libraries/modules etc.), then by all means go straight to SO. If it is something that could easily be figured out by documentation/API, then I would suggest sitting down and working on that particular part of your programming language / libraries etc. so your knowledge gets tighter. Documentation The best kind, for me, is a programmer who, when encountering a new topic, takes the time to really sit down, dig into it, get a good overview and good technical understanding. This is most times achieved (again, in my experience, with the many programing languages I had contact with) by reading the good old documentation including API references and so on. This can, in my opinion, never be replaced by anything else. I do not find it outlandish to read, for example, the old C++ classics (good old paper), the Gang of Four Design Patterns, the (online version of the) "Programming Ruby" manual, the extremely well done Perl manpages, the Git book, certain RFCs, the HTML/XML/etc. specifications and so on from front to back. I would do and have done that even in my spare time and would, frankly, expect it from any programmer worth his/her salt (depending on what they are working with, obviously). I am also thoroughly aware that I am (at least in the companies I worked in, in the past decades) quite alone with this opinion. (N.B.: Obviously you do not need to memorize huge lists of API references, but at least gloss over them to see what's available and what the "spirit" of the API seems to be.) After being thoroughly comfortable with the topic, then is the time to look at 3rd party code for inspiration, or to look at older SO questions (or ask new questions yourself). You might also find that when you have absorbed one field like this, it gets very easy to find answers by zooming right into the meat of wherever you get your documentation from (man pages etc.). At this point, the autocompletion of your editor might also just be enough already. And you might as well pretty soon know when something is just not possible with the tool you are working with, saving a lot of futile searching. 

First of all, my regards for your loss. I assume it does not help much at this point, but miscarriage is quite common in the first trimester (Wikipedia: "About 30% to 40% of all fertilized eggs miscarry, often before the pregnancy is known."). On your question: as usual, I would suggest to keep your private stuff to yourself while at the same time not lying. Not because your case is somehow special (it is not, see above), but out of a general principle to not mix work and private life more than necessary. I would, as your manager, not find it weird or cause for concern if you told me "I found that I'm not really in the mood for a vacation now, I would prefer to work now and take the vacation later in the year". 

Just say no, same as above. Bring your own stuff, eat alone. Convince them that you prefer a period of stillness or a walk instead of eating. Again, if there is real pressure, look for another employer, but I'd say you should have no trouble finding one where this is acceptable to skip. 

Most "hippster" cultures appreciate individuality. Those cultures that do not are probably exactly what you are looking for (e.g., the business suite mentality)? One thing that makes you seem to fit in without hurting you too much is just to grit your teeth and clothe vaguely like the average guy around you. I.e., if everyone is running around in business shirts, then just get some yourself, etc. You don't need to splash tons of money, or clothe yourself really uncomfortable; just try not to stick out that much. 

Sure, mention it like everyone else suggests. And if you did it fulltime, it looks in any case very much better than "unemployed". On a tangent: 

Oh, that's simple. You deal with everything by picking one of "love it, change it, or leave it". Love it In this context, this means: enjoy what you do and how you are, and learn to accept the negative feedback you are receiving. There are plenty of very strong people in history who got very stout negative feedback and pulled through (pick any big statesman you can imagine...). Worst case, you get fired, but if you are so inclined, then that very well may be the lesser evil (and open up new possibilities, anyways). One particular way you can do that, which works excellently, is meditation. Specifically, Vipassana meditation. This is a specific method with a very long tradition which trains your mind to "see things as they are". One of many side effects is that it makes you more apt at staying calm and unperturbed in the face of negative experiences, by letting things pass through you without "plucking your strings" (this is different from blocking stuff out, or ignoring stuff). Note that this has nothing at all to do with religion or mysticism; it is a simple tool to sharpen your mind. This is a purely internal solution which you have 100% control over. You are completely on your own with it, for good or worse. It can be very easy for you, or just impossible - there is one riskless way to find out by just trying it for a few months. Change it It is possible to change your behaviour ever so slightly so that you are still introvert (i.e., I am not asking you to change the fact that you want to stay apart from other people). What exactly you have to do, unfortunately, is hard to tell from afar. It might be as simple as learning to give short eye contacts at critical times (e.g., while saying "hello" or "bye"). It might be a small detail like when you break eye contact, you do it sideways instead of up/down. Or it might be something completely different. So. Either try to think it through yourself, find out in which situations you got the most direct negative feedback, and see if you can somehow make it so that you expect them not to give said negative feedback anymore. Or take part in some kind of communications training (which can be hit or miss, but if they work, they can really change your life without changing the fact that you are an introvert). Or talk about it with a true friend. This is about small details and points of view and little things like being able to deliver "good morning" in a sincere, friendly way over the coffee machine (which I know is not easy). It does not mean that if they tell you that you have to do more smalltalk (which is b.s.), then you have to do more smalltalk. This is more about body language and exuding a relaxed body position than anything else. This obviously is the hardest solution, but for some people, hard routes are the more interesting ones. You can try the previous one before, if you like, and having the previous one under your belt might help with this one. Leave it Obviously this would be your last call. If you cannot love it, and cannot change it, then you can simply look for a new job. You just might find a place where people are more accepting of your point of view. Might be a cop-out, or it might be a life-saver for you. This is obviously the simplest solution; it might or might not work out, and it is impossible to predict. You should maybe try the previous ones before, if you like. The rest 

Full disclosure: I have been the Senior guy you are complaining about, in the past. I have been, not by choice but by necessity, the primary architect and developer of a framework strikingly similar to what you are describing. Let me tell you that I was aware of all technical and organizational problems during the whole time. It was an incremental process; there never was that one single point in time where one could have made one single decision to stop this. Almost every single step seemed to be a good idea at the time. There is a mode of thinking, and certain other aspects (e.g., time pressure, perceived pressure, team culture etc.) which leads to solutions like this. It does not tell you anything about the intelligence, character or any hidden agenda of your developer. I ended the mess by these measures, which literally took years: