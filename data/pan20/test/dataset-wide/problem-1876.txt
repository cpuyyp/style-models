In general, unless you specifically indicated that you were including information that you didn't want to be relayed to your manager, the expectation would be that a letter of resignation would be shared with your manager. Normally, the letter of resignation is sent to your manager directly. It would be very unusual for a letter of resignation to include medical details; normally, you are simply informing the employer that you resign, what your last day will be, and probably some general "thanks for everything" type comments. If you didn't explicitly ask HR not to share your letter of resignation, I don't see that HR did anything wrong by passing your letter on to your manager. HR is generally not in the business of trying to summarize a letter of resignation for a manager, particularly when doing so might cause a miscommunication. Of course, your manager ought not be sharing medical information for laughs regardless of how he came to know it. 

There is no harm in applying for a position that you're not sure you'd take. If you're currently employed, the interviewer will almost certainly ask about why you're thinking about leaving your current position. If your concern is primarily about salary, as an example, they'll probably ask about your current salary and/or ask what sort of ballpark salary range you'd need an offer to come in at to leave your current position and/or tell you the salary range of the position and ask whether that is something you'd consider. If your concern is about something other than salary, the conversation will be about whatever those concerns are (health plans, retirement plans, flex time, etc.) If it becomes clear at that point that they wouldn't be able to make an offer that you would accept, you can thank them and politely remove yourself from consideration. 

There are two basic reasons why you might have a separate "Skills" section of your resume. One is to provide a bunch of keywords for HR systems to be able to find your resume if the term in question doesn't appear elsewhere in your resume. This is particularly true where there are tons of acronyms that have changed over time and you can't be sure what someone is likely to search on (i.e. Java vs. J2EE vs JEE vs. Java EE). The other is to list specific skills and technologies that you want to emphasize to a human reading your resume. Languages you haven't touched in a decade are unlikely to satisfy either criteria. If you are trying to get HR systems to match the skill list on your resume, listing languages you're not proficient in is unlikely to be helpful. It's much more likely that you'd end up popping up for jobs that you're not likely to be a good fit for (someone looking for a C developer is probably not going to have too much difficulty finding someone with much more recent experience). And it increases the odds that someone decides to quiz you about things you've long forgotten in an interview. If you are trying to emphasize technologies to a human reader, you want to be very selective and only list those you're really comfortable with. If I'm reading a resume and I see a skills section that lists dozens of different technologies, I'll generally just skip the section entirely on the assumption that it's just a keyword dump for the search engines. It makes perfect sense, on the other hand, to list the technologies that you worked with in the descriptions of your prior jobs. That allows you to put the experience in context both in terms of what you accomplished and in terms of when and allows interviewers to naturally infer that you're probably a bit rusty if they don't see any more recent mentions. And it solves the problem of people who list technologies on their resume because they happened to make a change to a script written in that language once at a job 5 years ago 

That's a perfectly reasonable question to ask. Normally, though, it is a question that you would ask of your manager not of HR. Commonly, it is a question that you would ask your manager during an annual review process. If you don't have a review process (or if review time is too far out and you want to get feedback more quickly), there is nothing wrong with scheduling an appointment with your boss to discuss your performance. During your review (or during the meeting you request), you would generally want to get feedback from your manager about what you're doing well and what you can improve on. At that point, asking what you would need to do to get a raise or get a particular promotion would be very reasonable. 

You're in the US so this is completely dependent on company policy. As a general rule, most larger companies do annual reviews and tie any raises to that annual appraisal process. Smaller companies are more likely to not have a formal review process and dole out raises and reviews in a more ad hoc fashion. You may, however, be working for a large company that doesn't have a formal review process or a small company that does. Your company may do annual reviews but adjust compensation separately. Most companies will have a handbook of some sort that you were given on your first day that spells out how and when reviews happen. If you weren't given such a thing (and no handbook exists online for your company), the best option is generally to talk with your supervisor about the company's approach to reviews of performance and compensation. Unless something was said about starting you off at a low salary the company said would be adjusted after a probationary period or your duties have expanded significantly from the time you were hired, it seems a bit odd to be concerned about your compensation after just 7 months in what I'm guessing is your first job out of school. For most developer positions, it takes a couple of months to get the new developer up to speed on the existing code base and the company's processes and to get the new developer through the first few easy projects before you start to assign them meatier tasks. At the 6 or 7 month mark, you're generally starting to hit your stride and deliver the value the company anticipated when they made their offer. That's not to say that you shouldn't ask for a raise if you deserve one after your initial 7 months, just to caution you that you'll likely need a particularly compelling argument. 

You're not his supervisor. You're not even in the same department so you can't argue that the hours he works affect you by, say, forcing you to cover for him. You should mind your own business. Don't report anything to anyone. Stop paying attention to when your colleague shows up. And for goodness sake stop abusing your privileges to impersonate him. If your colleague isn't working the hours that he's supposed to be, that's a concern that his supervisor can take up. If your colleague is not meeting his supervisor's expectations, that supervisor is certainly capable of looking at his time cards to note his late arrivals or to suggest that he focus a bit more at the office. For all you know, the supervisor is well aware that he likes to take a walk and get a coffee while he thinks about a problem. 

As with all things, it depends. In general, it is useful to have a network of colleagues and former colleagues that you can go to when you're encountering problems. There are a few colleagues that I'll hit up periodically (and that hit me up) when one of us is struggling with a problem that we suspect the other person might have some insight on. These are generally something very similar to a good StackOverflow question where the person doing the asking does all the legwork to ensure that the question is clear, concise, and answerable. If that's what's happening here, it's probably a good idea to reply if you can because building your professional network generally pays off over time. On the other hand, if your former manager is telling someone you don't know to contact you and the request is more along the lines of "can you spend some unknowable period of time helping me debug exactly what's going on here" rather than a well-researched, specific question that is respectful of your time, it's entirely appropriate to decline to sign up to be free technical support. Commonly you can come back either feigning a lack of memory (i.e. "Sorry, it's been 8 months since I've thought about that system, I'm really not sure where to go to start debugging that") or, if you're amenable to it, approach your former manager to see about doing some consulting (i.e. "It sounds like the Foo is Barred in System X but it's hard to be sure from the description I have. I'd need to Baz the Frobbit to be sure. And un-Barring the Foo is likely to take Y hours. I'd be more than happy to help you work through the problem in in the evening and the weekend but I'd need to charge you $Y/hr with a Z hour minimum").