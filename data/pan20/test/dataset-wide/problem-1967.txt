Since you seem to be in a different specialty than the others on your team, this is what I would suggest. Ask your boss to cover topics you need to know about first and then excuse you when those are done. As a specialist, I have done this in past and it worked very well. Of course you have to have a reasonable boss who would rather have you working than sitting in on a meeting discussing things you have no expertise or knowledge of. It is often best to start doing this when you have a deadline approaching to give you a good excuse for why you are asking. Its espcially good if you can work it so that you are two or three weeks from the dealine and thus we need to do this for several meetings in row. Once they get used to the idea, it is easier to make it a permanent thing. I have also offered to be available by phone for meeting if something comes up where they might need me, but normally would not need my input. I've escaped many hours-long client meetings this way! It won't work for the regular team meeting, but it might for some other meetings. 

First, sit down with your boss and make sure you are clear on exactly what the deliverable is. Then make sure to put that in writing, get the boss to sign off on it and have a team meeting to go over the requirements with the team and do the initial task assignments. When the intern brings up what he wants to do instead of what you are tasked to do, then you tell him that is out of scope and move on. Start having daily (yes daily) meetings on the project to discuss what was done the day before, what roadblocks they ran into and what was planned for today. I agile this is referred to as the daily stand-up meeting and should take only about five minutes per person on the team. If there are problems that need to be resolved with one or more team members, get with them outside the daily meeting. If he brings up his disagreement in the daily meetings, catch him immediately after the first one where he does this and tell him that is unacceptable professional behavior. The next time, don't wait until the end of the meeting, tell him directly that the subject is closed and that he is not to bring it up again. In those meetings, you can make sure tasks are assigned when people are done the previous tasks and that progress on the assigned tasks is being made. Set up a system of code reviews where all completed work is reviewed by someone else and they check that work against the requirements. This will help prevent the intern from going off on his own direction unnoticed. You might make sure to do the first couple of code reviews of his work to make sure he is following directions. If he continues to text you about it after you have clearly and unambiguously told him that it is out of scope, point out to him that the decision is made and you expect him to stop texting you about it. If he still continues or if he decides to ignore you and do what he wants anyway, discuss the issue with the person who is his official boss for guidance on how to handle. 

A a person new to the work world this is what I would concetrate on: Know your supervisor's expectations concerning time and attendance. Some places have more flexible work hours than others, some places have the expectation of working 60-80 hours a week. A lot of this is centered on what kind of buisiness the company has. For instance, there are companies that bill time to customers. A company like that is going to have different expectations than one that builds applications and sells them afterwards. And a government agency might have different expectations or a programmer at a company that mostly has a unionized work force in a manufacturing plant. It may also depend on if there is a need for real time production support or not. While company expectations differ, the place to get those expectations does not and that place is your immediate supervisor. Next find out what the work process is like. Where do you check in code, what are the coding standards, what tools are you expected to use, do you have automated build processes or QA that you have to be able to work with? What kind of testing do they do? What is expected in terms of working together? Do they do pair programming? Do they do code review? Are they agile? How is work assigned? How are deadlines determined? Next talk to your immediate boss about exactly how he wants you to come up to speed and exactly what he expects in terms of your work. Likely at first you will have many questions. Ask him if you should comne to him or if there is someone else he wants to mentor you. Make sure you talk to him about your first task when it gets finished even if they don't have formal code review. It is far better to find out that you are going in a direction they don't like right away than after they notice six months down the road. Make sure you know the deadline on your first task and communicate if you see a problem with meeting it. Expect that your supervisor and you are not always going to agree on approach. Remember though that it is generally his job to make the final decision and you must accept those decisions with good grace even when you disagree. The time for influencing a decision is before it is made. Remeber that technical needs or desires are not the only or even the most important factor influencing most decisions. Try to understand what else is affecting the decisions you disagree with and that will help you be more convincing in the future. You will need to build a reputation for delivering work before you will be able to have much influence on the decisions, so concentrate on that first. Also remember that in business we have deadlines that often mean you can't tweak out that last 5% of perfection. THe perfect is the enemy of the good enough. We aren't creating an art work, we are creating a piece of software that does something and it is sometimes better to get it out there imperfectly than to not deliver at all. It is better to ask a question than to make a wrong assumption. It is better to deliver bad news (like a problem affecting a deadline) sooner rather than later. It is better to ask for help (well after trying to solve the problem on your own, nobody likes a time vampire either) than struggle and not be able to deliver. Make sure you check in with your supervisor at least once a month (or preferably more often but it depends on your supervisor's personality) and see how well you are meeting expectations. You will develop more judgement about this as you get more experience, but for now, really pay attention to making sure you get that feedback. And when the feedback is negative, then make a change. Your boss has control over your pay raises and bonuses and even if you are going to stay employed. His opinion on your performance matters more than yours. Finally start observing the company culture. You will get to know if there are times when it is ok to slack off or or how much overtime is expected to meet dealines or how formally people communicate. 

It is not clear to me if you have told him why you want to change teams or if you have sugar-coated the reason. You can't blame your boss for not acting if he doesn't actually know what the problem is or how serious it is from your perspective. I don't mean telling him you would quit, but telling him what the issue with this person is, that it is causing stress and depression, and what you have done to try to make it work. 

This would be a red flag to me. It is fine to require references up front. It is not acceptable in any way shape or form to require that a current employer be one of the references. People can lose their jobs when the current employer gets contacted by another company for a reference check and then you might not even get the new one. I would pass on this position and probably drop them a note saying why. 

Don't call or email. If they select you, you will hear, if not it is most likely that you will not hear. Just keep looking at other positions in the meantime. If you get too anxious and keep contacting people they might decide not to hire you even if they were thinking about hiring you. Do not be a pest. 

Asking is not so important as when you ask. You want them to be interested in hiring you first before you ask questions about benefits and dress code and the like. If you ask these things first thing, many interviewers will feel as if you are more interested in what's in it for you than anything else which is not the impression you want to give. So I would ask them at the end of the interview after you have wowed them with your awsomeness first and after you have asked questions about the work itself and the projects you might be working on. 

IN a case like this it is essential to keep asking those questions and not let him get away with an unacceptable answer. So he answers he did it because you did it before. You say, that is not going to be acceptable to management, I need you to be able to describe why this is an appropriate technique. And then wait. The earlier in the process you ask these questions the better. Ask at the time he chooses the technique not just in the rush to finalize a report. I don't know if you have ever taken him along as an observer when you present similar things to management, but seeing what kinds of questions and answers are part of the process is useful before he has to defend his own work. So with a junior person. bring them along as much as possible. Then after have a critique session where you talk about what was said and why and how effective or not effective it was.