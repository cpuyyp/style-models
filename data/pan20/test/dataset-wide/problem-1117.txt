Situation: We recently had a consultant company build new Lync 2013 Servers in a mirror setup. There are two security principles set, SA (disabled), and a AD group that is only associated with the Public server role. 

Another option to consider if you don't want to impact the connection between the log shipping servers during production hours is to use Distributed File System (DFS). You will still need a log shipping secondary in Korea, but you will disable the copy jobs for all the databases on the log shipping secondary. All you have is the backup job running on the log shipping primary and the restore job on log shipping secondary in Korea. DFS provides you a lot of flexibility to throttle bandwidth during production hours and then increase during off-hours. Essentially, DFS would copy all your .trn files directly from the log shipping primary to the log shipping secondary in Korea. 

I know that there are times where the vendor would rather their builtin solution manage the maintenance. I'm sure I could find that feature in the application and turn it off, but this question is in case that I can not. How would I configure or edit this job to ignore a specific database or a list of databases in the same instance? 

In short, put the OSes on slow storage and all the data/log & backup files on fast storage. I know that my environment is different that yours, but I think similar principles apply. We have a SAN and the storage pools range in different speeds, 7.2k, 10k, 15k. We install the OSes on the slower drive pools and have all backup files and data/log files stored on the 15k drives. There was a time when we accidentally put everything on the 15k drives and we didn't notice a performance difference. It was brought to our attention by our SAN admin after an audit that the OS was stored on the faster drives. We monitor SQL Server performance with perfmon and Dell Spotlight. For grins, we went and looked at the historical metrics that mattered, and saw nothing to note. 

I wonder if this question will need to be moved to the SharePoint SE site, but I believe this could be a simple a SQL Server security fix. A little back story: Back in April we upgraded our SharePoint SQL Server backend (mirrored) from SQL 2005 to SQL 2014. We did this by way of mirroring from SQL 2005 (primary) to SQL 2014 (mirror). I don't believe the security settings and logins were extracted from the old server and placed in the new. I'll have to reach out to my infrastructure department to see if the server has been completely decommissioned. My SharePoint Admin is trying to create a new site from the SharePoint Central Admin Site (SharePoint 2010), but gets the following error. 

Premise: I ship a Java application which will make a JDBC connection to a MySQL database. (At the time of this writing it could be 5.1 or 5.5, but hopefully the question and answer don't rely heavily on the version.) Observation: Clearly, I can use the the MySQL JDBC driver (Connector/J) or the MariaDB JDBC driver (MariaDB Java Client) to make the connection to the MySQL server. One huge benefit from the standpoint of an ISV is that the MariaDB driver is LGPL licensed while the MySQL driver is GPL licensed. Performance of the MariaDB driver seems very good. Question: To what extent is the MariaDB JDBC driver a perfect replacement for the MySQL JDBC driver? I'm not looking for a debate on the relative merits of the two. But rather I'm hoping someone can answer along the lines of one of these: 

I'm having trouble using copy/paste from pgAdmin 4. The symptom is that I get the character aka Zero Width No-break Space aka Byte Order Mark (BOM) prepended to any string I copy. The workaround is to paste and then delete that first character. But in practice this is cumbersome. In some contexts the character does not get pasted (in vim on my machine). In some contexts it is pasted, but it's not visible. In other cases it is "visible" as a space (in TextWrangler on my machine). Here's a bit more detail. I successfully type and execute a query: 

I select and copy these 4 characters: I think my clipboard should contain just those 4 characters. But it doesn't. Instead, it contains this: This is perhaps related to this old thread between Josh Berkus and Dave Page. But that discussion focuses on the fact that pgAdmin puts the character at the beginning of any file. In my case it's really not the file that is the issue. It's the clipboard. More practically, the solution in that case was to go to File -> Options and turn off Unicode file writing. In pgAdmin 4 (v2.1 on MacOS), that menu doesn't exist. The menu File -> Preference exists, but I can find no corresponding setting in the Preferences. Question: can anyone help me to prevent the FEFF character from sneaking into the clipboard whenever I copy anything in pgAdmin? 

Does anyone have a working sample of loading data into an Amazon AWS RDS Oracle database using SQL*Loader where the source file is on S3? In principle it's clearly possible. The Amazon RDS Data Import Guide for Oracle documents using sqlldr. But the only sample there loads data from a local EC2 instance. I have worked with RDS and with S3 and with SQL*Loader before, but I haven't worked with all 3 together. One sample would be really useful. (Related advice would be welcome too... but a sample is all I'm really looking for.) 

What I've had to do to fix the issue is delete every instance of 'MyReportAcct' on the server, then recreate it, then add to each database. This doesn't happen all the time, but often enough that it is irritating. Further, we shouldn't have to do this at all. I think that we should change this account to an Windows Account instead of a local SQL Login in every instance. I have a feeling that this might fix the issue, but I need to prove why or provide a reasonable answer. I think part of the problem is the mirroring in some way, but I don't know how to prove that either. Security is a weakness of mine and I'm employing steps to change this, so any insight you can provide would be greatly appreciated. Please let me know if you need more information. 

You're correct about how the VLFs grow in size. Check out the following video from Jes Borland for some more tidbits. How SQL Server Works: Log File (Video) 

Short answer: The SIDs for the ‘MyReportAcct’ SQL login are different on each server instance. Long answer: The database houses the security database for each instance of SQL Server (think Active Directory for a database server). In this scenario we have two different databases, since it is a mirrored pair. Each time you create a SQL Login, there is a different SID created along with the account, this is no different than how Active Directory has always worked. When a mirrored database fails over, the SID in the database matches the SID stored in the database of the principal server (SERVER1), not the mirrored server (SERVER2). This natural, and default process of failover causes the SQL Login (MyReportAcct) to become an orphaned account on the principal server (SERVER1). This orphanhood process happens EVERY time there is a failover. The start of authority for SQL Logins are the instance that they were created (SERVER1). The failover to the mirrored server (SERVER2) is now a different start of authority, so the SIDs will be different, hence why the reports fail. Solution: 

I find it hard to believe that there aren't better native tools to filter SQL Server Error Logs. Even Windows Logs have better filtering capabilities. I'd like the ability to remove certain events from the results or a list of events from the results or to be able to search for a very specific error/event.