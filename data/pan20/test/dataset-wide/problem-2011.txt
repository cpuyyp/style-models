I know the OP has since moved on to green pastures, but I want to add another perspective for "two weeks" notice. If you leave immediately, you will miss an important part of leaving a job: closure. If it is possible close this chapter of your life on good terms, and prepare yourself emotionally for the next, new and exciting chapter, do so. After you give notice about leaving a job, the last two weeks can be the best time of employment. You are not assigned new work, friendly co-workers will take you out to lunch and drinks, there is no need for overtime, and deadlines become meaningless. Any stress your boss may have given you disappears, as this manager ceases to have any power over you. (I gave 3 weeks notice once to extend this pleasant time) The most important part of any job are the people you meet. Say goodbye to your coworkers, and share the horror stories of the evil manager together. During these two weeks, as the facades fall away, you will know which relationships will continue into the distant future, and which will be simple LinkedIn connections. You may find that other peers at the same level as you, with whom you had conflict, will become very warm. For others, this is the chance to resolve any interpersonal conflicts and depart on good terms. It is unfortunate that your first boss was an abusive, lying piece of &^%#&^#. If you are not careful, the toxins from this broken relationship can poison your future relationships with managers, and even subvert your career. For this reason, it is important to speak your mind when your boss asks you what your plans are. You should tell him frankly, and tell the CEO also, that they deceived you, they clearly broke a promise about what your work assignment would be. Tell them that their lies put you, a new professional, in financial hardship for no useful reason, when they could have simply hired somebody to do web development. Try say it without anger or malice, and make it clear that they did something wrong to you personally, and that they should refrain from behaving this way with other people, especially new professionals, in the future. The reason to tell them this is to let this angst out of your system; you do not want to carry this into your future relationships with new managers and coworkers. This is a difficult tasks, with a ton of emotional strain, but if you can do it, it will be liberating. 

How's that different from you asking your boss: "are you planning to lay me off or fire me?" or being asked about your religion during an interview? I've been in places where management constantly talks about how employees are their "greatest asset" only to lay them off in large numbers a short time later.. Alternatively, you could be up-front about the simple yes/no nature of the question: 

I think other answers are very good, but I think what goes around comes around. Perhaps this person needs to receive a cup of his own medicine? Maybe you and/or your team members should feel offended at the fact that this person keeps feeling offended for trivial things and on someone else's behalf, and take the issue to HR? Who is he/she to feel offended when "Jeff", who is the target of the joke, didn't? That's just pretentious, to put it politely. On a more serious note, it's likely that HR is coming down on you hard because this easily-offended person is the only person making any noise (i.e. talking/complaining/reporting/etc). If you stay quiet and do nothing, you will pay the consequences later on because they may interpret that as you having "admitted" to being "offensive" by omission (e.g. not defending yourself). In fact, you don't even know what this person actually claimed behind your backs. This person is very unlikely to be trustworthy. (I've had to deal with difficult co-workers before, the "everyone's out to get them"-types, although it never got to HR in our team's case. Our team had tried to play "nicely", but they've been suffering the consequences of it for a long time now.) Instead, if you and/or the rest of your team report the situation to management and HR, then they may realize where the real problem actually is and, who knows, maybe even do something about it. To top it off, if/when HR comes down on this person, they might get everything they need out of this person's instant on-the-spot reaction. 

This got a little longwinded, sorry. I found your question because of the same issues, but I'd like to first comment on your idea that your first job defines your career. I used to worry about the same thing. I went to school for mechanical engineering, got a job as a test engineer in an R&D program. It was pretty cool at times, but I could take it or leave it. I did this for 3 years and decided I wanted to try something in the construction industry, so I applied for (and was hired) at a utility company as a project engineer, running several projects involving equipment and system replacements and upgrades. This involved preparing bid documents, selecting a contractor, overseeing their work, overseeing the design of the system if a new design was required, etc. I did that for a year and hated it, so I went back to my test engineering job. During my second time at the test engineering job, I used excel alot, crunching tons of data. I ended up fiddling around with macros and eventually wrote something that automated alot of repetitive stuff I would do manually all the time. When I had to change something, it was a mess of a time because I obviously wrote horrendous code. But this sparked an interested. Every time I got stuck trying to make a change that seemed like it should be simple, I thought how can I make this easier. Through googling around I started discovering coding techniques, like not hardcoding things lol. You have to start somewhere right? Eventually I got so interested in programming that I started taking classes in CS. I took an intro class, then another one covering object oriented concepts, both with java. I took data structures and algorithms, and a class in C. At this point I decided to go to the career fair at my engineering alma mater and show people what I've been doing, get their opinion on whether I was on the right track for a career change, etc. Well I ended up getting a programming job out of the whole thing. I was so excited about my career change. I loved solving programming problems and it's the first time I can say I really had fun doing school work. Fast forward two years and I'm trying to hang on to that passion as hard as I can, because my job is sucking it all away. I'm in a small development group at a huge company that writes/supports corporate applications (internal software/systems that the business uses to do their jobs). They use Oracle e-business suite among other things, with alot of customization. Our documentation is horrendous. Unit test documents are outdated and don't explain how to run a process through the user interface. I still love programming and solving programming problems, but I feel like all I do here is wrestle with poor documentation and trying to figure out uncommented spaghetti code with 500 line sql queries, and trying to figure out how to run a simple process in oracle. In summary, I would say that your first job does not define anything. If you want something bad enough, just go get it. That's really all there is to it. Now, if you want to make a switch from an accountant to a heart surgeon, well sure there's alot more to consider there. But for most types of career/job changes, it's not as bad as it may seem at the time. It does require hard work. But if you don't want to do that hard work, that's proof enough that you aren't that interested and keep looking. Which brings me to my next point. Don't settle. It gets frustrating feeling stuck, and it can sound like an easy solution to just accept it and stay put. But keep searching for what really fires you up. You can program anything, but for me, I need to really feel excited about the product or service I'm creating. I think to find fulfilling programming work as you asked, you need to determine what you're really interested in, then see what tools/knowledge/skills you need to be able to get a programming job in that industry. 

In my experience, life in the corporate world sometimes doesn't make any sense at all. Perhaps whomever is calling you for an interview has not read your resume, nor have they tried to create a job posting that reflects the experience required for a position. Maybe just a lazy HR person who needs to hire a certain number of people, and they really don't care about the quality of the people they hire. Go to the interview. I have been on interviews that lasted 6 hours, where I was not asked a single question, and then given a job offer and hired on the spot. Years later, I have quit corporate work and returned to graduate school. I am still amazed at the high levels of competence in academia - the graders sometimes actually read your papers! Grades generally match your knowledge! Some companies have competence, and some do not. Evidently, this is one that doesn't have it. Get a job there, get some experience. 

My colleagues who worked at MCI in the 80's and 90's spoke about something similar, which they called a "Long March" or a "Death March". What management would do is announce that there would be layoffs in 3 months, and assign everybody an unreasonable amount of work. The results were predictable: everybody worked like crazy, and a lot of work was accomplished (in the short term). It worked so well in fact that MCI started doing this almost continuously. This created a toxic work environment, where inefficiency, backstabbing, sabotage, and tribalism prevailed. Guess where is MCI today. Have you ever heard of it? It used to be huge. I have had experience working in places that would periodically purge employees with heavy work loads, and I have worked in places that were pleasant to work with good management and efficient teamwork. Which do you think I preferred? There is a good chance that you will be the next victim of this sort of toxic management style. Prepare your resume. As for your colleague, unless he is a masochist, he should spend the four weeks looking for a better job instead of attempting to accomplish the impossible. p.s. If you and your team assist him in accomplishing the impossible, it might encourage management use overwork and threatened layoffs more. Then, this management practice might spread like a disease. Do you want this? 

Someone I know, let's call her "Alice", is on the receiving end of the following situation, and I'd like to become better informed before providing my opinion. This is in the US. Alice is an exempt employee in a consulting company. She works remotely from Puerto Rico, a US territory, for the company, which is based in the US mainland. Due to hurricane Maria back in September, Alice was left completely incommunicated for over a month, meaning she could not perform work during that time. The company continued to pay her salary during this time, which is required by law as far as I know. Currently, she's working from somewhere else in the US mainland, and has been doing so for over a month now, too. However, Alice's boss/manager met with her and told her that she has to update her time sheets to mark her vacation/PTO as having been "used up". To be honest, that seems inappropriate to me for a few reasons: 

It seems your manager and the company have allowed a double-standard in accountability and other things between most employees and this particular employee. You reap what you sow... and you are not the manager; your manager is. Your manager has this problem because s/he has chosen to apply a double standard --something a good manager wouldn't have done because it shows partiality/favoritism. As Snow said, there's not much you can do, and it's not your job to do it. There's not much to this. Your manager friend should hold everyone to the same standards, including general behavior, professionalism, level of accountability, and so on. 

For a bit more detail, please read on. It Can Take Years to Earn Your Team's Respect You mention that you joined barely 1 month ago. That's barely time to get "settled" into your role, learn the names of your team members, and start getting into the flow of only the most basic things, relative to other tasks within the team, who's already more familiar with the software being worked on and all of the associated details. I'm assuming that, by getting "noticed", you mean acknowledged, recognized, respected, and/or treated as "reliable and competent" member of the team. In short, you need: