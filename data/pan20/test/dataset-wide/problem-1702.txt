CHM located on network shares have been blocked by Microsoft for security reason. You can bypass this restriction by making the following modification to your registry database: In the key, add a new string value called In this key, add all the pathes where your CHM can potentially be located separated by comas. Beware that you'll need to list all the possible pathes (UNC names and drive mappings if they can be reached in both way) and that you will have to add each value twice: once alone and once with the string in front For instance, assuming your CHM file is in the path, you will need to enter the following data value: 

We ran into the following problem: we added a new LUN to our small SAN when we upgraded from ESX 4.1 to ESXi 5.0. We wanted to move a number of VMs from one LUN to the other using storage vMotion. One of the reason for that was to make sure the VMs are safe when we'll upgrade from VMFS 4 to VMFS 5. Unfortunately, we ran into the following error when we try to perform a storage vMotion: 

With Nagios, because of the version differences, it gets trickier to maintain. There's a wrapper for the afasnmp app. Here's some links... 

Caching can be controlled via headers that are produced in the content. The content could have the and headers specified. More details Edit 1 These headers can be introduced as part of the content being served, which could apply to images as well. This is something I've pushed through our development team in the past, as I prefer to cache static content on our proxies. For your purpose, it sounds like mod_expires would be simpler. mod_expires is probably not enabled because it is superfluous by default. Best practices tends to disable any unnecessary modules as part of initial configuration. If you ask nicely and you're not using commodity hosting, maybe they'll enable it for you. Edit 2 Just found this. If mod_headers is loaded, you can use it to set the expiration. Using mod_headers 

There can be a variety of reasons for this. One reason may be that you didn't start the slave. Have you run ? The reason why replication won't start will be logged in the error log, which we would need to provide recommendations in greater detail. I'd also recommend reading through MySQL's official manual on replication. MySQL Documentation 

After a recent incident with Outlook, I was wondering how I would most efficiently resolve the following problem: Assume a fairly typical small to medium sized AD infrastructure: several DCs, a number of internal servers and windows clients, several services using AD and LDAP for user authentication from within the DMZ (SMTP relay, VPN, Citrix, etc.) and several internal services all relying on AD for authentication (Exchange, SQL server, file and print servers, terminal services servers). You have full access to all systems but they are a bit too numerous (counting the clients) to check individually. Now assume that, for some unknown reason, one (or more) user account gets locked out due to password lockout policy every few minutes. 

Have you tried installing it in the recommended fashion for installing TS apps ? You need to either start the installer through the "install" buttong of the add/remove contraol panel applet or run the "change user /install" command-line first (and run "change user /execute" once you're done). 

Do I understand it correctly that you're talking about encryption/decryption here, not encoding/decoding ? As in "I want to secure the data vs snooping", not "I want to compress it in transit" ? If so, the ideal way to handle that is at the transport level: setup a VPN between your two datacenters and make sure your VPN gateways have enough CPU and RAM to handle the flow. Typically, that will not add any noticeable latency to the transfer (as long as we're talking about human viewing it) if you have enough resources. 

There's a variety of different solutions for things like this. I prefer shell scripting, others might prefer other methods. For interaction with things that require input and don't have flags to specify the answer, you can redirect input. I would read the apt-get manpage before taking this approach, as it may have native support for what you are trying to specify. For example: 

It is advised to use a protocol that uses encryption for any authentication that utilizes a secret token. FTP is largely considered obsolete for anything short of anonymous file distribution. In UNIX, we'd typically use scp/sftp. There's a Cygwin port for Windows, which I've used in production environments. I suspect in Windows environments protocols like CIFS are often used for code deployment as well. However, that would be in a segregated network and not over the Internet. 

Your question is not very clear. If you want to lookup IPs you can use also use tools such as MaxMind's geographic IP location database or ARIN's whois lookup. 

is the userland tool for manipulating netfilter. netfilter is the code in the kernel that handles the packet filtering. Contextually, changing the userland tool would only change your experience not the way the filtering operates. I have never hit a limitation in Linux with the quantity of rules specified and I've been using Linux for firewalling since the userland tool was . It's notable that Netfilter wasn't introduced to Linux until the 2.4.x kernel and was the interface for ipfw not netfilter. OpenBSD is great for a firewall if you can continue using it in your environment. The limitation will likely be a physical limitation based on the system resources, with a focus on the quantity of RAM available. If you encounter issues, you may have to tune Linux's max ip connection settings in the kernel. You're unlikely to encounter either of these situations on modern hardware with a modern Linux distribution. If you would like to discuss the finer details of netfilter, you might be better off furthering this dialog on the netfilter mailing lists, as they will be the subject matter experts. If this does not answer your question, please feel free to clarify and I will be happy to revise it. Netfilter user hits memory limitation testing netfilter limits 

The first two DNS servers are part of the global Internet infrastructure and is handeled by IANA. Since the same organisation also supervise IP address assignment (as well as the global DNS root), it is the authority that can (and will) delegate the management of the others servers in the query path to the respective owners of the IP block. An interesting thing to note is that your computer is not going to perform all these queries itself. Typically, it will place the request to your local DNS server which will perform the query for you completely and just supply you with the answer (it will perform a recursive DNS query). After that, it gets fuzzy because it all depends on how each server in the query path is configured. So, what it means is: 

Looks like you're having a problem with HTTP compression: it doesn't seem to be working correctly. Try going into the IIS web site and disable compression for both static and dynamic content. 

In theory, you can mix-and-match the disk types as much as you want as long as the replacement disks are all of the same greater size. In practice, you really do NOT want to mix the drive types: it introduce a level of complexity (because the disk physical layout are different) that usually causes the whole thing to be much slower afterward. Depending on the exact controller type, it might also simply not work. Also, the performance of the whole array will be linked to the performance of the slowest disk: using an SSD in there will not help at all. The only occasions when I could imagine this to be of any advantage would be: 

That's right, you can use CIDR notation too! Generally speaking, the best default policy is for all chains. Every chain has a default policy, which is specified by the flag. Even if you have your policy set to default , it is still advised to have the final entry in a chain to be a as well. For example, to change the policy to for the INPUT, FORWARD, and OUTPUT chains: 

Nevertheless, if located in the United States, you will likely be subject to state and federal laws by storing the social security number and I would suggest you treat it as PCI scope data. If you are not PCI compliant, I would seek the particular laws applicable and treat it as sensitive as possible within your environment. A good idea would be to consult a lawyer. From a professional perspective, I like to treat data like this as carefully as possible. I often consider how the public would react to my actions if it were to be unintentionally disclosed and act as responsibly as possible. 

Well, the answer was much simpler than I thought: a faulty device driver for the server's NIC apparently was the cause of all these trouble. 

Don't use shortcuts. Instead, use hard links or volume mount points Edit: The simplest way is to create a mount point for the root folder, but it has a couple of limitations: you MUST redirect a whole folder and you MUST use a complete volume as destination. To do that, create an empty NTFS folder where you will redirect your volume and then open disk manager, select your volume, right-click on it and select "change drive letter and path", remove the drive letter mapping (if any and if you want to) and add the path of the EMPTY NTFS folder. Hard links are a bit more delicate to use and, upon reflexion, it won't help you on since all links must point to the same volume (which isn't your case). 

I assume you want to deny the execute right not only to these folders but to the whole tree starting from them (otherwise, there is no point in doing what you want to do). The - obvious - consequence will be that any executable located in these will fail to run. Unfortunately, this will include a rather large number of legitimate applications. %localappdata% and %appdata% are the most problematic ones: Dropbox, Chrome, SkyDrive, for instance, will fail to work. Most automatic uploaders and many installers will also fail to work. %UserProfile% is even worse since it includes both %localappdata% and %appdata% as well as a number of other folders. In short: if you prevent applications from running from these folders, your system might get pretty much unusable. %temp% is different. While you might occasionally have legitimate programs running from there, it's quite infrequent and usually easy to work around. Unfortunately, %temp% expands to different folders depending on the user context you're expanding it from: it might end up in %localappdata%\temp (in the context of a user) or %SystemRoot%\temp (in the context of the system) so you will have to secure each location individually. %temp% is also a good candidate because that's where most mail programs will save attachments before opening them: that will help in many cases of mail-based maleware. One good trick is to change the premissions on the C:\Users\Default\AppData\Local\temp and C:\Users\DefaultAppPool\AppData\Local\Temp folders when you setup the system (and, of course, %SystemRoot%\temp). Windows will copy these folders when it creates new profiles and so new users will have a secured environment. You might want to add %UserProfile%\Downloads to your list: this is where most browsers will same the user's downloaded files and denying execution from there will also increase security.