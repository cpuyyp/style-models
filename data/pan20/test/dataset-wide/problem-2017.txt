I don't know if this falls under: too technical, not enough detail, reluctance to type a lot of information or the user just making assumptions that you know how they do things: Corporate-wide browser usage rules, this person has been doing it the same way, of course I'm connected to the Internet, etc. Don't assume users know how to give good information when there is a problem. You have to train them. 

Most people will understand if you just graciously tell them you don't drink for whatever reason, but have no problem if they do. Join them with a non-alcoholic beverage to limit the feeling of drinking alone. There are some groups or individuals who may frown on anyone who doesn't drink. They're stuck in their college days or have some notion that drinking a lot = manhood, adulthood, toughness or whatever. If they want to engage in some type of drinking contest, you could bribe the bartender into pouring you drinks with no alcohol in an attempt to trick your client into thinking you can drink a lot. Of course there is the risk of being caught, but these may be the type of people who see your deceit as having "moxie". I don't recommend this. Let someone else suffer these fools. 

Start by focusing on how you're going to control your behavior in front of clients. This could get you fired and hinder your career. Being prepared and coming up with a preferable response will go a long way. When you know you're going to engage a client, tell yourself to smile or get some help on a more involved strategy. Next, you're going to have to realize the career choice you've made along with the types of companies and tasks you're going to be doing. Boredom will be inevitable, but you will mature and your career will progress to positions where you may have to do fewer of those types of tasks. In my case, I don't handle repetition well. I'd rather sit and do nothing. Fortunately, as my career is more involved with programming, I let the computer do the repetitive tasks and I solve some other problem. I worked at a company that not only gave me a personality test, but changed my job description so there was less paperwork or other clerical tasks. I can't totally avoid doing things I don't like, but I've found a way so I don't feel like I'm trapped into doing them for the rest of my life. It helps get by along with an older brain that knows how to relax. Try meditation. 

What you don't realize is you've managed to create a situation where people come to you with concerns instead of dealing directly with their own manager. They should only contact you if they can't be resolved. Let everyone know that these meetings aren't the place to complain about their manager. If they have a problem, work it out. If there is still a problem, they should come to you at that time and not wait for some regular meeting. Conflicts are going to happen and you have to set the example on how to resolve them. To not let them solve it themselves is treating them like children. 

There are a lot of people who would think you're not a good programmer if you were moved to the position of rocket scientist. In a perfect world, people who know how to program well, would get hired as programmers. Many people don't know how to spot talent, so they accumulate all sorts of notions about what makes a good or bad programmer. You are right, being in QA will be held against you by many people. You need to over-come some of the poor assumptions in your cover letter to spin this in your favor. 

First, you should talk to Brent and inform him to come to you first for these types of problems and not your boss. Second, ask your boss to instruct your people to talk to you first and not entertain any complaints. Of course things like sexual harassment or other severe forms of abuse are the exception. Don't get caught up in a generalized term like micromanage. Ask for specific instances and behaviors. Let Brent suggest alternatives. You never know. It could be the way you phrase something or you're correcting him in front of others. You could another coworker or your boss to be a tie-breaker if you can't agree on your performance. Otherwise, you just have to tell Brent he is wrong and will have to deal with it like everyone else. You can only accommodate one complainer so much. Since Brent didn't come and talk to you directly, I suspect your other team members are not giving you open and honest answers either. Brent may be completely off-base as far as you micromanaging goes, but there may be a personal reason he is not willing to divulge. Not wanting to be micromanaged is a more polite and professional description that doesn't make him look like the bad guy. 

I think this depends on what kind of job the next one is. For a PM job, your current references are much more important. If you want to get back into programming, you may have some explaining to do. Mainly the next hiring company is going to check your other job experience to make sure you worked there when you said you did and in what role. Unless you ask for a specific reference, most companies in the US will say very little so it doesn't look like they're trying to make you look bad without cause. Anyone who gives a poor reference to someone they employed for 5 years is suspect to me. I would point-blank ask them if they are this incompetent in their hiring, ability to manage people and have the guts to get rid of people who can't do the job instead of waiting for them to leave. Use the situation to your advantage. You should explain what it is you learned from becoming a PM and how other situations could have benefited from it. I always what to hear what people would say if asked what would they do if they had to do it over. Just because you had a bad experience as a programmer shouldn't affect your ability to be a PM especially since you were successful at your current job. 

He takes no responsibility for knowing how you feel about your current job. Did he ever ask for any feedback? Is he open to new ideas to make your situation more enjoyable? Good leaders motivate people. No contingency plan. He allowed a situation where there is a single point of failure. Why are you the only person on this project? Did he account for you needing to make sufficient documentation for someone else to take over? People leave for reasons outside of their control (e.g. Hit by a bus.). 

Why is this dress code so important to your company that they've gone to the trouble of making it a policy? There may have been a time when jeans were allowed, but too many people showed up to work in torn and faded jeans with their butt-cracks sticking out. This could be more of a firm-wide compromise since many employees need to meet with customers or your office has visitors and see it as unfair to only allow your group to dress casually (Maybe there are privelages they have that you don't which you can point out as a compromise?) Another reason may be to promote a professional environment. Your job is to identify the rationale behind the dress code assumption. It could just be a preference to those in charge. You've identified this as a group preference and your assumption is this will make you happy which will make you better workers. Also, are you truly getting feedback from potential employees that they chose not to work there because of the dress code? Programmers (and probably other creative types) are misunderstood and mismanaged by many corporate leaders who don't get it. Do a little more research. You have your work cut-out for you. Good luck. 

Many people post questions on this site on how to delay starting dates because they are considering other offers. If you really want to leave your current job for this job, then why would you need such a delay? Offer a signing bonus, and if the person doesn't work for an acceptable amount of time, they are required to return the bonus to the company. If the money isn't there, offer some extra vacation time after a week or so. Another suggestion is to keep in touch with the applicant from signing the offer to the start of work. During this time, you should continue to sell them on the quality of the company, position, and manager(s). Invite them to formal or informal company gatherings. They may not be able to accept because of distance or other time constraints, but it shows you care and really want them. Do a review of your rate of retention for similar positions in the company. The reasons could be the same for current employees leaving and those accepting offers, but declining before their start date. You have to make an effort to keep people that goes beyond competitive salary and benefits. Edit: People often want that little extra time between jobs. As a counter-offer, ask them to start sooner, but then let them have a 3-4 day weekend shortly after starting. Finding out what people truly want is all part of getting to know them better and showing a willingness to offer compromises/be flexible. Many places don't allow new employees any days off at all for a certain grace period. It seems like getting them to start is more important then a few extra days off. 

I don't see how you can. He is expecting you to maybe put in more hours than everyone else because you are still learning. There are many careers where new people are expected to put in insane hours but usually there are some rewards to this. You have to ask yourself if this is worth doing so in the long run, you can work normal hours and possibly make a lot more money. Although no one likes being criticized and prefer to have reasonable expectations of them, what are the consequences if you don't get the work done? If all your boss is going to do is keep criticizing, you just may have to learn to get over it. You may have to just deal with a boss who continues to criticize you until you improve. When in doubt, he's always going to ask for more. He's just a bad manager. First, ask how long you are suppose to work and let your boss know how much you actually work. He may not realize the amount of time you are putting in. You may have to say, "I'm sorry, but I can't keep up those kinds of hours." You're being honest, but he could see this as defiance. It's up to you as to how much risk you want to take to refuse the extra hours and suffer the consequences of getting fired. Try and get feedback from your boss and colleagues on what you can do to get better. Maybe you are spending too much time figuring out things for yourself, but he expects you to just ask someone and get it done faster. Not saying I agree with his approach, but I also don't think you know what his approach really is because you haven't asked nor has he explained it. For the time being, you may need to put in more time and work at getting faster. It will come with experience. You may find many developers in your area are working worse hours, so the market is not in your favor. There is little threat that you will go elsewhere because everyone is the same and they'll just replace you with another person. 

I would ask but not all the time. Make sure you get an idea when is a good time to interupt. Gather up several questions to ask at once. It takes people some time to return to a task after their concentration has been broken. Although your company may not be utilizing your time to the fullest, pulling Sr staff off of an important project is not worth 55 minutes of your time. Just be thankful they didn't throw you off a cliff to see if you could fly. 

Your company has an obligation to do what they can to retain their talent. It doesn't seem like your company really understands what you want (Maybe change for the sake of change?) or they're not capable of providing it. When things go bad for them and they have to let you go, they'll say, "It's just business: nothing personal." so you can take the same approach. If they're going to hold bettering your career against you, you're better off taking another opportunity while you can. There's no relationship to maintain in this case. 

Successful companies usually have a solid understanding of the way things are. There are flaws in both directions with communication within your company: 

I don't think we can answer the question, but I think there is a way to go about finding the answer. Start interviewing, inquiring other companies and asking people work in this area. Good developers are hard to find regardless of their stack experience. If you don't want to be a junior a year from now, are you willing to be a junior until then? 

I've been at places that invited a long-term contractor to the company holiday party. There are other places where they've invited to nothing. Remember, contractors are usually paid a higher rate in part because there are many benefits they don't get. However, I agree that it is not to anyone's benefit for a company to go out of their way to show a contractor that it is us against them. If you're having an office birthday party, would it kill anyone to offer the delivery person who just walked in the door a slice of cake? I don't treat guests in my house like family; I treat them better. Nothing wrong with a little hospitality. 

I think it is important is if you are relocating or you telecommute, so your current employment history is not in the area where you're applying. You don't want there to be any confusion. An employer may think you'll request moving expense reimbursement or you're goling to want to work remotely. Living in a large city can bring up commuting concerns. Several companies have mentioned this during interviews. Some have had issues with employees who are willing to take a job with a long commute until something comes up closer to home. These aren't a big deal, but why force an employer to ask uneccesary clarification questions during the interview. 

Have you ever had a discussion with your boss about a management book you've read? If she was interested, you may have suggested letting her borrow it. That would give you an indication of how this person feels about business books or reading in general. An office full of them would be another indicator that they are almost a collector. I might give a copy as a gift to this person, but never without strong indications they wouldn't be offended or not interestd. 

Consider the volume of work relative to the history and frequency of contribution. This would be evaluated in the context of this being a full or part-time endeavor. Difficult to hire people that take months to fix a bug. Having a work-ethic is important. Those who want to hire slaves and just let them burn out probably won't take the time to look at a GitHub post. They'll just threaten you once you're hired. How involved were you in the design of the project? Hiring a junior dev on an experienced team may not make this very important, but if I need you to play a major role in the design of an app, you need to show you know how and didn't just add a few features to an existing one or just copy a project. Did you really write the code? We've all had our copy and paste moments, but at some point, you have to prove you can write code, utilize some sort of IDE or various tools to create code that can run. 

Direct hire may not seem as risky as contract to hire. Most recruiting firms I've worked with in the US set things up where you are a full-time employee of theirs. They manage the contract with the other firm until you are switched over. This seems to be more and more popular in the technology field. I see it as more of a trial period. Although more firms are hiring, they are able to take advantage of the job market and be a little more demanding. I see a big disadvantage is missing out on 401K and any other retirement or seniority benefits during this temporary period. There are always people out their trying to scam, so you may want to make sure the company is solid. Another indicator would be how many of their current full-time employees had to go this route.