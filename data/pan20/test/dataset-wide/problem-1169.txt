I have been seeing developers using when testing their queries. The issue is that many developers are executing such SELECT statements on huge tables, which slows down SQL Server performance. We have told them to use , but they don't do it. Is there a policy or special configuration to make SQL Server show limited results (i.e. 100 rows) on huge tables? If so, which SQL Server version does that? 

Using Visual Studio 2008, I have compared schemas between remote SQL Server database with scripts hosted in a TFS server. The goal was to generate a migration script that would update the remote database with developers latest script changes located in TFS. The next step was to get a full backup from remote database, and restore it in my local database, and then execute the migration script in order to test it. After small tweeks (dealing with constraints) and I have managed to execute the migration script locally and my local database (that is a copy from remote database). The last step was to get this script and run it in remote database, but for my surprise, the script gets interrupted in a procedure: 

First, you need to load the .nsm file into the model. This is done through Tools > Names > Model Naming Options... > Use File: (select the appropriate file). Well, if you've got version R9 or higher, you're in luck. As per this post, the naming standards are an object in the model explorer just like every other entity, so you can simply find it in the model explorer, right click on it, select properties, and on the glossary tab click the save button, and save as .csv. For pre-R9 versions, you need to go to Tools > Names > Edit Naming Standards... The Naming Standards Editor window should pop up. There's a few tabs near the bottom, click the one that says 'glossary'. You'll now have an option to export the file as .csv. Took me way too long to figure this out myself, so hopefully this could help the next guy who has the same issue. ;) 

I am trying to figure if SQL Server has a feature to log when a user fires statements as revoke, delete from, etc. It would be great to see which user has fired the command, date and time, and which command has been run. Is there a way to accomplish this in SQL Server 2008? I have seen this but it is not what I am looking for. 

I would like to know if a Database Schema Migration Script (generated by Visual Studio 2008 or greater) will run faster if my target database got indexes rebuilt and/or reorganized. Note: For all tables, when index fragmentation level is between 5% and 30% I reorganize the index. When index index fragmentation level is above 30% I rebuild the index. Note 2: Database schema migration script generated by Visual Studio has a lot of commands to alter table structure, add constraints, foreing keys and indexes in order to keep target database structure updated/syncronized with files contained in our Database project (.dbproj file). 

Is there a way to limit the inputs into a DATE type in an Oracle database to only accept inputs formatted with only the day and month (not including the year)? 

I have a data model in ERwin (r7) that has about 1000 tables in it. I'm right now in the process of splitting it up into various different subject areas to make it a bit more manageable. Here's the issue: I create a subject area with approx. 50 tables. The problem is, they appear all over the subject area in seemingly random places. Even if I zoom out as much as possible, I can't see the entire subject area, and I need to scroll around to reach the tables. Additionally, there's an obscenely large amount of unnecessary blank space between the tables. Is there some sort of shortcut to condense all the tables in the subject area into one area (especially when there are tables that are also connected through relations)? Currently I'm moving every piece one or two at a time, but I'm hoping there's a quicker way to organize everything. Thanks in advance for your help! 

I was having a looking on this article about default constraints and I have a question. Is there a configuration in SQL Server 2008 that forbid naming creation of new default constraints declared without a proper custom name? In other words, can SQL Server block this: 

Within this mentioned procedure, there is a , a execute command to run a SQL statement contained in a string variable for executing , a and a . The statement is not working in the remote database. Since there is no procedure execution (this is only a script modifying database structure). Why the migration script would fire "invalid column" on the remote database? The remote SQL Server database is version The local SQL Server database is version Both databases are set to compatibility mode for "SQL Server 2000". The same migration script was executed in SSMS 2008. 

The way I'm understanding your question is that since the arrays for a and b don't have a value for 'in location y', the loop 'skips over' it and displays the value 1 for d in the first open row. You could try pulling out locations for all the arrays (even the non-y values), and then using an if statement to display either 0 or the result you want. You can also try putting everything into one for loop, and the arrays that don't have a location of y output 0. Additionally, try looking into the isset(); function in php for those arrays that didn't get the location pulled. If you post the code that you're using to pull and display the results, we might be able to give better/more accurate advice. 

I have 2 naming standards files from ERwin (.nsm extension), and I want to compare them to see if they contain the same rules. Is there some sort of automated way to check this? If there isn't a way to compare the two within ERwin itself, is there a way to convert the 2 files into a more 'standard' file type (i.e. an Excel file), and then compare the files that way? I'm coming from a programming perspective (mostly Java), and from what I've seen it wouldn't be that hard to write a program that compares 2 Excel files.