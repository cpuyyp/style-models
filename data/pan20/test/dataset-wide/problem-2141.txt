Challenge clauses that are important to you. Personal use of equipment is not important. Usually people check personal e-mail and facebook at work and it's technically a violation but is rarely enforced unless abused (which does happen too). It's not worth challenging trivial things like this. Contrast that with company ownership of all ideas you have while employed whether they are related to your job or occur to you while at work, which is a common clause in many tech contracts. Also think about restrictions on your ability to have a part time job, including part-time self employment or contracting work, which is also common in the tech industry. Finally look at non-compete clauses which can vary greatly by how narrow or broad they are. I've seen all of these and successfully challenged them and had annotations added to my contracts with specific allowances since I felt it was more important to have these freedoms than to have that particular job. In every case I did explain why it was important to me and have specific scenarios and examples that were technically in violation but caused the company no harm. 

Demonstrate outside work experience. The nice thing about programming is you can easily demonstrate skills that are not related to your employment. If you want to work in new technologies, go work in those technologies, write about them, contribute to some open source projects, create a github account and post some code of your own demonstrating what you can do. Put all this on your resume. It'll show that despite your employer using old technologies (like J2EE), you are interested in and can teach yourself new technologies. 

So by telling the truth you'd be establishing that you were overqualified and they can search less hard and pay the next guy less? Sure it's a bit of a setback to have to search twice but I suspect unless your boss is crazy, s/he's going to appreciate the honesty or be a bit cold/stiff and then most likely appreciate the honesty later. If their response is shrieking bat!@#$ crazy, you get a new story to tell that would leave anybody sympathetic and amused. The end. The only thing I'd be worried about is whether you've properly assessed the experience at your previous job and your perception of what's actually changed. Feeling undervalued and ignored is typically a culture mismatch thing and I doubt you'll find that's changed when you go back. They might like what you can do for them but for whatever reason, they didn't care what you had to say about it. Will you be one of the cool kids when you go back? I doubt it. If you really, really love telecommute + more money to the point where that trumps the old problem, go for it but don't assume the old problem fixed itself. 

I suspect he believed the two of you weren't going to get it done in time anyway and since he stayed in late it would be okay to come in a little late. Any decent manager will tell you that you're not doing anybody any favors. Hungry, sleep-deprived, stressed out people are ultimately far less useful than well-rested employees who might work late when the situation really demands it but aren't killing themselves over every missed deadline. Mistakes are made. Deadlines get missed. If the entire fate of the company isn't on the line, not many people are going to respect you for killing yourself over it. Relax. Eat breakfast. Save the all-nighter sacrifices for when a lot of jobs are on the line. Not when things that you probably had no control over lead to a missed deadline. 

Personally I throw all functional CV's and resumes into the trash. It's starting to be more of a trend, especially when people have a varied background without necessarily having anything to hide, but to me they don't provide what I'm looking for. When I look at a resume, I look for where they worked, when they worked there, and what they personally did at the job. I'll also look for where they went to school and hopefully their personal accomplishments at school if they're a relatively recent graduate. A functional style CV or resume makes it much harder to correlate accomplishments and skills with the jobs where those were met and used. Certainly some will disagree with me, but I quite literally trash them immediately. 

You don't need to have proof, you're just reporting what you noticed. You can hedge your statements by saying this is just what you saw and you don't know what it means, but you felt you should report it. What your employer does with the information is up to them. Most gaming companies are very strict on employees interfering with games in any way. Usually people do this for personal gain, so it is a weird situation, but doesn't make it ok. 

It helps to think of what the purpose of a manager is: to manage and organize Resources of which employees are one kind. Are you able to effectively allocate your resources (including your personnel) by talking directly to the team without impairing the ability of the team managers to organize their resources? Or would it be more effective just to deal with the team managers directly? To answer this, you need to know what your resources are. 

honestly, I don't think it will make one bit of difference, except on the off chance the hiring manager happens to be a Mensa member too. in the software world, what matters is results as well as the ability to work well in a team. What impresses most is the ability to demonstrate that you have achieved and are capable of continuing to achieve results. Best way to demonstrate this is: 

By and large, most companies that give you a verbal offer on the phone do not renege on it. So the question is what do they mean by "you are confirmed." Is that all they said, or was there other verbage involved? If they told you on the phone that they want to hire you and are ready to make an offer, then it's unlikely (but not impossible) that they will renege. Reasons they could fail to follow through are things like: unexpected budget cuts; resignation of hiring manager. So it really boils down to the verbage involved in the conversation and whether it was more along the lines of "they are interested in you" or "we would like to hire you but it needs to pass approval first" or "the hiring team made a decision to make you an offer." In behooves you in these situations to clarify things to your satisfaction by asking questions: "is there anything to preclude an offer from being made?" ... "does an offer depend on anyone else in the company who has not provided their input yet?" Most reasonable companies are happy to answer questions like this. 

So.. what were the two of you doing in this isolated part of the building? Why was one of you (just one of you?) drunk at a time when it would be the company's business to care? More to the point, why did you feel it was important to point out that you "didn't touch her?" If some crazy lady in the street attacked me, I wouldn't tell the cop I didn't touch or offend her. I'd just tell him she attacked me. What happened here exactly? You were standing around in a broom closet by yourself doing nothing (model employee) and Suzy from accounting walked in, slammed 10 shots of tequila and then slapped you? You don't think management is going to want perhaps a little bit more detail than that? And will that detail paint your actions as an employee in a good light? And why am I, your manager, supposed to be anything but pissed at you right now for coming to me with this complete and obvious BS? Drunks don't slap people. Angry drunks slap people who through interacting with them, made them angry. So yes, you did offend her somehow. After all there was nobody else there to offend her so what I want to know, is what you want me to do about this problem other than decide both of you were engaged in highly unprofessional behavior and verify that by getting Suzy's side of the story before tossing one but more likely both of you out on your asses before one or both of you decide it's the company's fault for not protecting the two of you from each other. Unless of course the real story is just that you made a highly inappropriate and unwelcome advance on somebody at the company Christmas party, she got angry, and you're out for revenge for the slap. Then I'm just going to point out that you're a complete jackass in the most professional terms possible, and put a coded sticky note up reminding me to find a good excuse to fire you before the next company party because harassment suits bother me a lot more than you getting insult and assault twisted. If the story really is more like this: 

Don't send it. Leave it to their internal process to pass the resume along to the CTO. Take a copy with you for the interview, but don't send it beforehand. It also could make you look a little "too eager" (desperate or inexperienced in these matters), which is the kiss of death for you as a potential candidate. What I mean by this, is: a desperate candidate does not earn respect and often gets the short end of the stick during salary negotiations. 

Write down a detailed list of everything you did on previous job. Memorize it. When you are asked questions in an interview that you don't know, say "I don't know that specific thing off the top of my head, but let me explain something similar I did in my previous job" and go into detail about a related task that you worked on. 

People who interview you will be impressed by your skills and knowledge, not your club memberships. Here in Silicon Valley I work with excellent programmers some of whom are basically college dropouts and such. someone who knows you are Mensa, will know you're intelligent. But intelligence doesn't necessarily mean you are good at coding, work well with others, enjoy coding 10 hours a day, etc, which are the important factors that go into the hiring decision, at least for developer jobs. 

KISS. Don't overwhelm with quantity of bulletpoints/jargon. Just stick to "I think we should do it this way because it solves X problems while avoiding typical Y issues." If they want details, let them ask for them but keep your premise basic and straightforward so you can come back to it by pointing out how what they want exasperates Y issues or fails to properly solve X problems. 

You have somebody working under you. Imagine if she disappeared on a day you really needed her to handle a bunch of lesser busy work that would distract you from what you needed to get done. If you truly have too much on your plate, it's on you to tell people that the amount of short-notice rapid-turnaround work you've been handed is putting all of these critical deadlines at risk and could everybody please get together and sort out what the priorities are so you can focus on the truly time-sensitive tasks first. It also sounds like you're at odds with the culture, however. I may be reading too much into it but I gather that you've been at odds with at least some managers for a while now based on this: 

I wouldn't expect anybody could start at 65K, but a 65-75K upgrade for a proven above-average front end dev at their first year in my market (Chicago) is entirely possible and we've got a pretty low cost of living if you compare to other major US cities. If there's other client-side devs in the mix evaluating you, I can assure you most don't care about your degree, however, because I'd guess more than half of us don't have a relevant one. If anything I've had a couple interviewers who weren't front-enders say they're starting to see "self-taught" as a plus so make sure you know your stuff. Very strong JS in particular is becoming highly sought after now that you can pretty much write one web-technology-oriented app that works on damn-near everything with it but if you're more design-oriented there's plenty of interesting career-path options down that road too that I know less about because I can convert a PSD to an HTML/CSS layout but I couldn't design a logo or pick a color scheme to save my life. 

In my profession (computers: network operations, system administration, devops) the simple answer is: people are too busy. They just don't have time. They are running from meeting to meeting, putting out fires, setting up servers, configuring software, and collaborating with their team. There is just no time to prepare for an interview. 

My suggestion is that you need to start getting used to working in "less than ideal" places because you are surely going to encounter this again later in your career, possibly a lot. You are a programmer? You will definitely encounter projects/team/work environments that give you stress, have difficult people to work with, and so forth. Hang out at this gig until it finishes or until you complete a year, then move on. (Why "a year"? This is basically the standard here in Silicon Valley, especially at startups, where you aren't really going to be frowned upon if you quit after a year.) That said, the fact that you are a contractor does give you leeway in quitting and moving on. People are more understanding and forgiving of this, particularly if you use the excuse that you have found a job with benefits and paid vacations. so, to answer your question: the best way to leave is what I have suggested: tell them you're looking for a full time job with benefits. This will ensure there's no bad blood between you. 

I prefer the uncomplicated version. Get offers from other companies that you'd be happy working for. See if your current company is willing to compete with those offers. That takes the personal/value judgment factor right out of it and makes everything strictly business and you have a plan B if they don't want to pay more. 

The friendliest thing you can say is the blunt, honest, tactless thing. "Well Bob, the only reason I'm still here is because I like the fact that I don't really have to work a full work week. It's worth the 30-40% paycut to me." Now imagine being somebody's new manager yourself and hearing that for the first time. Because that really is what you're saying here. You don't like it there but you're putting up with it because it's okay to not take your job that seriously. How badly, as a manager, do you really want to keep that guy? I've been there, but it's really not something to take a power-position on. What you really want is change. Either a new job or some improvements at the current one. You'll have a more receptive manager if you take the job seriously when he asks you to and you'll be in a more relaxed position to try and negotiate once you put some feelers out and become confident you could in fact pick up new work relatively quickly. But really, why, if you're good enough to find a new gig so easily, are you putting up with whatever this situation is? I'd personally much rather have an 8 hour day of mediocrity in programming than a 6-7 hour day of frustration. It sounds like its past due time for more devs than just yourself to find a new place to work. It doesn't hurt to try and change things before you go though. At the very least it might help the developers they have to hire to replace you. The problem isn't that he doesn't know what it takes to keep you. It's that you're still there and he's not going to understand why any better than I do in any respect beyond general career inertia where finding a new job is painful enough that you'd rather put up with the crummy one you have.