Then I'd conclude that you'd skipped half the interview and likely you're in trouble. Two extremes, of course, it might not be that easy to tell. Think back, and try to work out whether he invited you in the manner of a person offering you a free lunch since you happen to be there, or in the manner of a person who had planned lunch to be what the two of you did next as part of the day's activity. Either way, what you say and do during lunch affects his opinion of you, but in the latter case he's relying on it as part of his assessment, and in the former case he can assess you fine without it. Under normal circumstances, I'd expect that if he invited you to lunch, or for that matter invited you to a three hour powerpoint presentation, then that's because it's a planned part of his interview process, no matter that it's happening on a Friday. You might not work Fridays now, but he does, and presumably if you get the job you will too. But if he did anything to indicate that it was an afterthought, or didn't press you to stay beyond what's required to make the offer politely, then it probably wasn't planned. Interviewers have enough to worry about without being deliberately vague what the requirements of the interview are. 

How serious are we talking here? If they impact your quality of life and require major professional attention then chances are clinics may be a better place to be than free in the world. 

I've worked as a Web Developer for the past 16 years and have had more than a few phone interviews. Here would be my expectation: 

The "establish requirements and the solution set" would be about figuring out what is needed and what options exist. The idea here could also be to see what are the advantages each vendor could bring in delivering a solution given requirements including timelines, budget and scope of work. The key here would be capturing what are the "must have" features, what is "nice to have" and what is the long term plan for these new initiatives. 

The key here is that it may be worth bringing in HR as they would be the ones to report this if going to your manager isn't working which is the case here. 

So you didn't learn a programming language as a starting point? How did you reverse engineer without having any programming knowledge? I'd call Assembly a programming language and while it may not be learning it thoroughly, you did understand at least some of the code in that language. If you want to not think of Assembly as a programming language, that's your choice but I suspect a lot of developers would call it that. 

You might be able to improve this with some kind of cognitive self-trick like, "I don't have to worry about this. I have a couple of months salary saved. I will work for this company for as long as the job still exists and I still enjoy it, and then I will find another job". Alternatively, if you simply cannot bear to work for a company that's in trouble, then the job isn't good any more and you should look for another. 

This is pretty common. When someone moves from a more casual workplace to a more formal one (or from no workplace at all, e.g. university), they don't necessarily understand what is considered disrespectful in the new context. If they're arrogant or unobservant then they won't pick up fast on what's rubbing people the wrong way. Yeah, yeah, "it should be obvious", "what he's saying is clearly inappropriate", all of that. What's obvious to you may not be obvious to him. Somebody with authority over him needs to assess what he's doing. If it's not acceptable they need to inform him how he must change. If it is acceptable they need to inform you how you must change (stop interpreting it as disrespect). So yes, you should bring this to your manager, with clear examples of what you think is problematic. 

If the employee messes up badly enough, the employer may well fire someone to limit liability for an easy answer. Secondly, if the employee can't do the work then they may be fired for not meeting expectations. Thirdly, if management decides to lay off staff then some people may be let go as part of how business works. Have you ever had an employer that couldn't pay you? I have. There can also be personality conflicts where someone may be fired for being difficult to manage. There can also be questions of being a fit and so someone may be fired for those reasons, which has happened to me during my first few months at a company. Beware that the company has expectations of what an employee has to do. If that isn't met then the question is what can be done and are there legal issues as people with disabilities may well get some accommodations in the workplace. 

Most permanent positions I've seen in Canada and US over the years I've been employed had a probation period initially, so the key is to have them put in something in the performance review that could have an incentive bonus as the idea here is to demonstrate that you will bring extra value and thus the payoff in the end will be worthwhile. If your position were more tied to sales this would be similar to putting in a commission on the job in a sense. If the company is super small, then there likely isn't to be a big HR department and so the key is finding a way to have good relations with the upper management and show them why doing periodic reviews could be useful as well as providing incentives to employees in a sense. At least that would be my initial thought. 

Does this cost money? Of course, and one of the reasons your lightweight agile startup company is undercutting its heavyweight enterprise-grade competitors is that so far you haven't been providing or charging your clients for 7 day coverage, whereas big suppliers pay support staff the going rate to work weekends. Can you reasonably expect to get 7 days of work for 5 days of pay just by being upset? No. It's very difficult to persuade your employees that something is important, if it isn't worth money either to your or your clients. Apparently the CEO feels it is worth wrecking your employees' private lives for: if that's less important to him than money, then your employees will pretty quickly figure him out. Find out where your mouth is and put some money there ;-) 

It's not common, but it's not completely unprecedented. I'm sceptical, and so are any amount of authors that you can find by searching for articles about BYOD. I think your concerns could include any of the following, although no doubt many of them will be non-issues to you: 

Yes though I'd wait a couple of days before contacting as if there was some emergency, it may take a little while before getting back to you. The key is merely after that time to call and ask, "What happened that you didn't come to our appointment?" There are possibilities such as the recruiter got sick, a close family member may have gotten ill, an accident happened or more than a few other things here that you don't know and won't know until you make the call. 

I'd likely be tempted to find a way to frame your concerns in a reasonable manner and check with your manager if you're doing OK in the role from management's perspective and what key areas would they want you to improve as perhaps they may think other things are where improvement would be better. 

Consider how does your company help employees answer these questions in a positive way. Do you show you care, does employees befriend each other, etc. 

When you say, "mobile app business," is this about the marketing of apps, distribution of apps, the economics of apps, or the underlying technology? There are more than a few things that fall under that phrase is something to consider here. 

First of all, in the US in the IT area, there are essentially two types of contracting. The first, usually called W2, means that you're an employee of the contracting agency. They handle the billing and other overhead, pay payroll taxes and usually offer benefits (quality varies by company). They bill the client, usually about 50% or more higher than what you'll see. For example, they bill the client company $80/hr for your time and pay you $45/hr. The second, usually called 1099, corp-to-corp or freelance, means that you typically work directly for a company on a contract basis. Occasionally, you'll go through an agency but most people working this way prefer to cut out the middleman when possible. You bill your hours, pay all the taxes and don't have any benefits. The good part is that if you bill the client $80/hr all that money is yours, at least until you have to pay taxes (quarterly). Most people I know who work this way have a spouse who has benefits through their job. In general, you'll see about 20-30% more on an annual basis as a W2 contractor. As a 1099 contractor, you'll see about 50-75% more although most of this goes for taxes and often you'll end up making less than the comparable W2 position once Uncle Sam and your state get their cut. Other downsides of working as a contractor you don't get paid vacation and you're typically treated as disposable goods by the client. You can become the fall guy for regular employees if things go bad, even if they aren't your fault. You're likely to work less than 50 40 hour weeks in a year so you make have unexpected dry spells between contracts/projects. Even as a W2 contractor, but especially as 1099, you accept more risk and usually harder work for a higher monetary reward. Lastly, as a contractor of either type, you're most likely to find yourself working in a standard corporate environment rather than with a Microsoft/Facebook/Google type company. You'll probably be doing jobs like maintaining old apps, doing work that the client company's employees don't know how to do or being brought in as a last minute replacement/addition on a failing project. 

Specific training indicated for her by the company should generally be done on company time, but ultimately it depends how much the company wants to contribute towards solving the problem. I'd say that if you don't want to sack her then you shouldn't want to make it her problem to fix the issue alone, but your mileage may vary. Training should also be based on some kind of expert opinion in the area being trained. My instinct is that simply looking at lists of common errors is unlikely to result in much improvement (because it's never that easy), and that some kind of structured tuition will be needed. Find someone you trust either to teach her directly or to recommend worthwhile sources of tutorials and exercises. A teacher in the area of literacy and copy-writing would also have experience of dyslexia and hopefully be more able to indicate whether it should be tested for. 

That is to say: tell your boss the truth. Personally I don't think anyone should spend more than a day stuck on something without talking to other people in their team (either boss or peers) and giving them the opportunity to provide a useful insight or suggestion. Ideally much less time than that, and I think some people would set a much smaller hard limit (indeed one principle of pair programming is that you should spend zero time stuck on something on your own, ever). Of this, "there's no possibility of the bug being related to my use of concurrency techniques" is a bold claim, of which the boss (or a more senior tech assigned to deal with this problem that you can't deal with) may require substantial proof. Therefore it's worth assembling this proof in advance, because you've quite possibly reached the conclusion as a result of several disparate investigations. You don't want it to come across as either "I have a hunch that it's not concurrency", or "I have rejected out of hand the possibility it's my use of concurrency, because I am so excellent that I never make mistakes". Other than the boldness of this claim, I don't think anything in what you say is particularly out of the ordinary or should give cause for concern. Your boss is then responsible for assigning additional time from people better able to understand or fix the problem. As others have said, the extra person doesn't even necessarily need to be any better than you, simply a fresh look can help. Your boss or the team might also decide that since the issue is intermittent, what's needed is more precise logging (or other instrumentation) on a wider variety of environments and data, in the hope of catching the bug occurring more times than you'd be able to alone with your dev environment. Worst case, if the bug lies not in your company's code but in some dependency, you need to prove that and you need to give the third party the best possible chance of reproducing it so that they can fix it and provide an update. If you don't have a boss then a client would be different. The details of what you've tried are no use to them. If you're self-employed contracting for a client, and you have no boss, and you can't complete the project you've contracted for, then in most cases you can't just ask them to help you fix the problem. You need to tell them there's a delay. But you're going to have to fix or work around the problem yourself, or find someone else who can. 

This is quite vague and thus would be a poor answer as there isn't anything really new added as I doubt you'd say you met expectations, right? Now, if you changed this to be, "The client for whom I built an e-commerce site that can handle thousands of transactions a minute using ASP.Net, C# and an MS-SQL Server back-end," then this gives a bit more of what you have used which can also be something to notice. Are you proud or not of what you have used in the past? Some people may well change their voice when saying various technologies or tools since they have various feelings about them. 

Not necessarily if part of the test here is to see how far you go. Sometimes these types of tests are given to see how much will get done that may be something to discuss in the interview. If you spend 40+ hours of the 2 days working on it so that it is mostly done that may show up in some pieces as a red flag of going too far in getting all the desired pieces done. At the same time, how do you handle that you can't meet all the requirements and document what didn't get done? 

Well, this is almost certainly their standard NDA, it hasn't been tailored for you. So what would be the alternative text for them to put in their standard NDA? To say that the company's plans for the next N months are covered, but they're perfectly happy for you to disclose whatever you may know of their 2017 plans? That doesn't seem like a good idea. NDAs tend to be pretty comprehensive, since the purpose of them is to formally state an agreement that you won't share any confidential information you might come across. Why on earth would they want to exclude their long-term plans from this, and permit you to disclose those to their competitors? I agree that they should have asked you to sign this before the internship, not after. The request is unreasonable in that sense. The fact that the NDA itself covers their future business plans, and covers information that didn't have "Top Secret" stamped all over it at the time you were given it, both seem pretty typical. Normally the terms of NDAs are disciplined by the fact that people who don't like the terms won't sign them and won't do business with the company, so potential signers judge them on that basis. In this case you no longer have any pressing reason to sign, certainly not to accept any terms that would be onerous, but perhaps you can generate some good will by signing. Most likely it'll make no big difference either way. I've signed a number of NDAs over the years, and I don't think I've ever actually reached a situation where I've decided what to disclose on the basis of having (or not having) signed one.