Shouldn't need another switch: that's a tiny network. I actually run internet for 500 people through a 4 port procurve switch. Your router is much more likely to be an issue, though, again, 12 people is pretty low. Since you have a 100mb router and a 1gb switch, I'd make sure that those ports are talking to each other correctly. If possible, I'd set the port on the router and the port on the switch to autonegotiate (in my experience procurves aren't happy unless they're set to auto). If you can't set them to auto, better set them both to 100mb. If they're NOT talking correctly you can lose 80% of your bandwidth easily. 

MSSQLSERVER is the default instance name, so you don't have to specify a name in that case. It's also treated slightly differently: MSSQL Server differentiates between "Named Instances" (like SQL2005) and the "Default instance". Chances are you're having connect issues because "MSSQLSERVER" is not a named instance, but you're trying to connect as if it were. Source 

I'm not sure what you mean: you want to install a whole ubuntu distro inside a chroot jail? Sounds more like you want to do a virtualized server instance on an existing server... 

Webmin is a good tool, but it's also another potential security hole...Make sure you lock it down so it can only be accessed from trusted hosts. It's basically a graphical front-end for a ton of command line stuff. It can't do anything that you can't do on a command line, but it makes some of those things a little more friendly...So if you already know how to secure a box, it'll help. If you don't know, however, it's not going to change anything. My advice is, unless you absolutely have to, do NOT store credit card details. Store the last four digits for verification, and pass the rest up to your merchant provider, and let them shoulder the burden. When you step into the world of hardened credit card handling machines, you have to understand that you need to keep on top of that machine constantly because every new vulnerability will get tried against it at some point. 

Sure. Microsoft instructions here. In a nutshell though, you give execution privileges to the IIS directory that holds the files, and then set up the python.exe file as the default handler for .py files. It's pretty much the same as other CGI stuff in IIS. 

Make sure you're not over-riding the value in another file. You can set that value in any one of a hundred places. 

The "-Xms3072m" and "-Xmx6144m" bits are where you're configuring your starting heap size and your max heap, respectively. This is distinct from the "-XX:ReservedCodeCacheSize=128m" and "-XX:MaxPermSize=256m" bits, where you set up the generation memory (where the JVM stores classes, rather than the heap where it stores objects). One thing I notice here is that the sizes are different. Usually you want it to be the same for some cryptic reasons having to do with minimizing garbage collection. You might also want to try "-XX:+UseParallelGC" instead of "-XX:+UseConcMarkSweepGC"...Usually if I have problems with one, then I have better luck with the other. 

You'd be better off adding the script to all users .login file, or .bashrc, or similar. 1) It'd only run when someone logged in, so more efficient. 2) it would run instantly when someone logged in, so no delay. 

I'd take a look at Go Anywhere Services if you absolutely need something professionally supported and secured. Or you can just let a 3rd party host your FTP, and make the security their problem. Mind you, I think it's overkill. As long as it's patched, Windows FTP, Linux FTP, it's all good, and it's not difficult to force SFTP either. You're going to be spending a lot of money. edit: Alternately, you could just get RHEL with a support contract, and use standard Linux FTP. Lot of people would consider that to be supported. 

I usually cheat and dump the database to text, and then use sed (or Notepad++ if the database is small enough). Barring that, it's easier to do it programmatically using Perl or Python. Doing this kind of manipulation with straight SQL is painful. If you DO do it, I'd recommend strongly that you avoid REPLACE. This isn't what it's normally used for. If you're going to do a bulk change on existing rows, use UPDATE by itself instead. 

The easiest way is to scan with : nmap will usually correctly determine if a machine is a printer or not based on the OS. 

Your method should have worked, but you might need to restart sendmail (or whatever) as it might have choked on the brief lack of file. 

During Windows setup (right at the very beginning) it should ask you if you need to load a raid/scsi driver. Pretty sure it won't recognize the drives correctly if you don't give it the driver. 

Only if you're running graphically intensive stuff on the server (e.g. playing games in the server room during maintenance downtime). All those terminal server things are set through the client. The server won't do graphical processing for the clients. The there are some edge cases where people write software to use the GPUs on high-end graphics cards to do actual processing, but 99% of the time, the graphics card runs the monitor that is attached to the computer. That's it. I haven't seen a server with more than basic onboard graphics...Well...Ever. Sun used to do some that could do fancy graphical crap, but I think that was more about looking pretty than actual functionality. 

Well, you can always try to ping the crap out of it and check the blinky lights on the routers. =P Does traceroute show you anything? 

I've actually seen someone do this in cron, just to drive up maintenance calls. You definitely need to check and make sure nothing is explicitly scheduled in the system that would cause this sort of issue. What do the system logs say? 

They don't really mean anything. There are certain reserved blocks, which are good to know The following are reserved for "private" networks. These only ever apply in LAN/WAN environments. 

(Make sure the driver paths are right. Sometimes it's /usr/lib/odbc/) Then the python string should look like: 

...If you already know the source control system (MS Visual Source Save) then the only question is what machine to buy. Just call some vendor and see what they have, and see how that fits your budget. Not much of a question. 

Yes, you'll need to set up a route. Computers that are on the same /24 know how to talk to each other. Computers that are not need to be told, which is what routes are for. Since both of these address ranges are private, this even more important, because there is no magical 0.0.0.0 route to point out to the internet. Now, depending on what sort of network you have in between, and whether or not you have to leave a protected network to get to the subnet, you may need to look at setting up a VPN. 

You're going to need to create a normal primary DNS Zone (with Active Directory integration disabled). Call it "techcrunch.com" (note that there is no trailing period). Create a CNAME record in that zone, and point it to the HOST record of the machine on the local LAN. Be careful. As far as the DNS is concerned you're now authoritative for techcrunch.com, so if there are subnets, etc, etc, then you're going to need to put in names for them as well. 

Each card will have it's own IP, but most webservers default to "all" addresses, and it's actually a bit of a pain to disable it for IIS. Inbound, connectivity depends on which address the remote machine is talking to. If you have 192.168.1.1, and 192.168.1.2, and 192.168.1.1 goes down, then traffic that is intended for 192.168.1.1 will not go through. Outbound, the server should use whichever interface it deems appropriate. You can type to see how it's set up, but it should automatically failover, unless you've crippled connectivity somehow on the second interface. 

Doesn't sound good...You can try ripping the "rebuilding" drive out, on the chance that you just got a DOA drive, but chances are it was one of the others that failed. Rebuilding a failed drive is a common source of failure with raids...It's an intensive process. I once had a 20 drive array fail one drive after another as the array was being rebuilt; when the smoke cleared I'd replaced 18 drives because they warned of failure, and 2 others just because I didn't trust 'em (This is why you never buy 20 drives from the same production group). 

You don't want to do that; the one time your job takes longer than a minute, you're going to be hosed. Race conditions like that make for ugly problems: intermittent, unpredictable, and hard to diagnose. Pboin is exactly right: you need to explore the use of semaphore in your code, and then the problem just goes away, and you don't have to worry about schedule conflicts at all. What language are you using? Edit (apologies for the php, haven't used it in a while, and am a little drunk, so may not compile): The "usual" tactic with locking is to check for a lock (which in this case I do by trying to get one), and if there IS one, to implement a short wait and try again. You can try using php's sleep() function inside a while loop, e.g: 

I'd just add a new card, and see if the problem persists. If it does, it's not the adapter. Ethernet cards are cheap. You should be able to get a nice commodity gigabit card (pci) for less than 40 bucks. 

Sounds like it's trying to auto-detect the monitor resolution. Is the account mobile, or is the user using a laptop? 

You need to use the "Route" command. route ADD (site ip) MASK (site umask) (gateway) IF (number of the interface you want to use) So to get to 200.200.200.200 on interface 2: 

Inevitably both will get updated in contradictory ways in between updates, and all hell will break loose...Or at least you'll get unpredictable behaviour. Imagine a case where two people update the same record in different ways. Which one is right? In a Master<->Master environment, there is no right. Both records are equally correct. So it'll go through and apply them sequentially, causing a data inconsistency. If you're using mysql, you also tend to end up with problems from row-level locking...Those rows often don't replicate. And you have to do an ugly hack to get around the problem of duplicate autonumber fields (server1 auto increments odd 1,3,5 and server2 auto increments even 2,4,6). It's just not pretty. 

I might start with Ubuntu, if it's your first time. Gentoo is a perfectly respectable mainstream distro though, as are SuSe, and Fedora. 

What all do you have on the machine? If it were me, I'd just promote one of my secondaries, and rebuild from scratch. I'm always trying to find time to upgrade mine though, so, you know, grain of salt. Or you could cheat, and make a VM image out of the PDC, and run it off another piece of hardware while you fix the old hardware. I like doing this with a lot of things. You could use Ghost to make an image, and then restore the image to the new raid. It's tempting to try and add another drive, and just make Windows do the software raid thing. The problem there is that windows keeps one of the drives as the boot drive. If THAT one fails, then you have to jump through a few hoops to make the other one bootable. Not nearly as cool as a hardware raid.