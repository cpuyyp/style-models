Runlevels 0, 1 and 6 should show as (as they result in shutting down or restarting the system, or bringing it to single user mode) and the rest should be . If it isn't enabled, then you should enable it. 

The virtual console you're using is a virtualized serial port. It has absolutely no idea -- and no way of knowing -- how large the virtual terminal really is. So, you have to give it this information explicitly with . For instance: 

Create a file on the master, containing the domain names of the hosts for which you want certificates signed automatically. Example: 

Get rid of any installed packages which don't match your installed repositories and resync your system's installed packages to the packages which are available. This can be accomplished with a single command: 

At the moment, I'm not aware of any method for manually causing the system to switch to a new temporary address. However, you can tune the time period in which a temporary address is used and cause the system to create them more frequently. From the kernel documentation: 

You specified a repository that doesn't exist or is invalid. Something is wrong with your package list. 

Once you've gotten your configuration to this baseline, you should find things start working again, or you might have a different issue which is easier to deal with. 

This looks like it's being caused by . causes a request for to initiate a search for any file starting with which the browser might be able to understand. When it finds , that gets served. Just remove that from your configuration. 

You have SELinux enabled, and have missed that it is blocking this. You can see the log entries in the audit log . The easiest way to resolve the problem is to use the default data directory location, and to not try to override it. Rather, mount your storage at this location. 

Anyway, to figure it out for sure, run and scroll through the output until you find the entry matching your current IP address. A running example from my workstation: 

This is most likely to be a bug in the way the package was put together (by Dell). Since they're referencing files in the section that can't be assumed to exist before the package containing them is installed (that same package!) it's almost certain this is an error on the packager's part. Most likely such commands should have been in a or section instead, depending on what it is they're trying to do. As such, you should report the problem to Dell. 

Stop your existing instance and detach the EBS volume from it. Create a new instance but do not start it. The new instance should use the same AKI/AMI as the original instance, or puppies will die. Attach your EBS volume to it. Start the new instance and run your job. When done, stop the new instance, detach the EBS volume and reattach it to the original instance. 

Also, consider deleting any queued mail (spam!) on the server, so that Postfix doesn't attempt to resend it. View the queue with and if you don't see anything legitimate, delete everything with . 

My does not specify this at all, so the default FILE is used. Removing this should get you going again. As Matthew Ife indicates in a comment, the kernel keyring is more secure and will (eventually) be the way to go, but at the moment it doesn't appear to be stable enough for production use. You may wish to report this to Fedora as a bug. 

You appear to be attempting to install using a serial console, rather than a normal console. Not sure why you're doing that, but... By default the installer tries to display either text or graphics on the Linux console. To divert output to the serial console you need to hit Tab at the boot screen, and ensure that you add the following options to the boot command line: 

Run a malware scanner, such as maldet, or AVG, or both, on your user's data. Most malicious scripts are picked up by such tools. 

Not long ago I went looking for Icinga RPM packages, and could not find a repository (that looked reputable) containing them, so I went to build them myself. Fortunately and contain their own spec files which you can use as a starting point: 

With the strong warning that you shouldn't be trying to disable this to begin with: The dictionary check is handled by cracklib, via pam_pwquality, which you should have seen present in the file. The man page for the current version of pam_pwquality suggests an option to disable the dictionary check: 

If this command fails, fix the problem before continuing. Go to single user mode. You need to be on the console for this. 

You are only listening to the loopback address, so it can't receive connections from other servers in your VPC. Try instead: 

You should always use the private IP addresses to communicate between your various infrastructure components (RDS, ElastiCache, whatever). If you use the public IP address, then you will be billed for regional data transfer, because the traffic leaves and re-enters AWS. Check your application carefully for something that is inappropriately accessing a backend component using a public IP address. 

This is obviously not a list of IP addresses or CIDR ranges. Change it to reflect the actual addresses of the servers/networks which should be allowed to relay through this Postfix. For example: 

You haven't defined inter-zone forwarding between LAN1 and LAN2, thus the default forwarding policy (reject) is used. You simply need to open this up. Click Edit next to the LAN1 line, and in the Inter-Zone Forwarding section, make sure you enable LAN2 in both directions. 

First, I strongly recommend that you use as this will provide much better performance when the ban list starts getting large. Now, with any of fail2ban's firewalld actions, it will add a direct rule, which you can inspect with : 

Find out what time none of the developers are likely to be logged in. For this example we will use 3 am through 7 am as the time that no developers are expected to be logged in. Email the developers and inform them the server will be rebooted at 3 am. Reboot the server at 3 am. 

You're looking for . The standard Linux commands for user and group management (from shadow-utils) are: 

Your key/constraint names must be unique across the entire database. To resolve the issue, choose a different name for the key which has the same name as an existing key, or rename the existing key. 

Mail servers will cross-check your SMTP server's advertised HELO hostname against the PTR record for the connecting IP address, and then check that the returned name has an address record matching the connecting IP address. If any of these checks fail, then your outgoing mail may be rejected or marked as spam. So, you need to set all three consistently: The server's hostname and the name in the PTR record must match, and that name must resolve to the same IP address. Note that these do not have to be the same as the domain names for which you are sending mail, and it's common that they are not. 

The two device paths you give are equivalent, as far as Linux is concerned; they always point to the correct LV. 

Note that here we are not actually erasing the packages, but only the rpmdb entries that tell that the packages are installed. At this point it should be possible to update the system, with 

You need to set Apache's for the virtual host to the actual hostname that you want to serve, such as , and NOT the EC2 internal hostname (though you could use a for that if you wanted it to be accessible). Unfortunately you can't use your EC2 hostname as a domain within Route 53; you have to use your own domain name. 

That's not a fix, it's a workaround. But it should get you going. The reason it didn't work is that it's expecting to be capitalized. 

Postfix doesn't care; it can be run on any ports you want just by editing its file. Gentoo's blocking the package is entirely artificial and unnecessary. (And why on earth are you using Gentoo for this?!?!?) 

You can test the configuration by adding to the line that begins with , immediately after that keyword. The next time you restart smartd, it will send out an email notification. 

shows all services that firewalld is aware of, not those that you have opened ports for. shows those that you have opened ports for. You can see in the listing that only ports 22, 80 and 443 are open, which is what you said you wanted. Finally, about pings: All ICMP is allowed by default with firewalld (as it's usually a bad idea to block it unless you really know what you're doing). If you truly want to "block pings" then you have to do so explicitly. You can use to see the list of ICMP types that firewalld knows about, and to block one of them. Be sure you're on the console of the machine in case you lock yourself out. 

This is a problem with your WordPress configuration, not your nginx configuration. If you really mean to run the server on port 81, then you have to modify the URL in your WordPress options. 

If you specify for the in question, then Apache will not generate a directory listing. However, if someone guesses the filename they could still access it if the operating system allows the web server to access the file. 

PHP is well known to be rather CPU intensive. You've used all of the available CPU and nearly all of the available RAM. You should first take steps to deal with that, such as opcode caching (e.g. Zend OPcache) and file caching (e.g. W3 Total Cache WordPress plugin). If those don't help enough, then it's time to upgrade the instance.