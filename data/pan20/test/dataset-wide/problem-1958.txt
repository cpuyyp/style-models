Your InMail to the job poster should contain whatever information they requested you to send to them. If the job advertisement says to go to a website and apply through there, then there is nothing to put in an InMail. If that is the case, then you should consider why you want to end them an InMail at all. You could send them an InMail saying that you are highly interested in working for their company for [these reasons] and have applied for the position that they posted, and ask if there are other similar positions available. If the job advertisement tells you to email someone to apply, then follow those instructions. If the email is to someone who is not the job poster, you can decide whether you want to treat this as analogous to the above case. And, of course, if the job advertisement tells you to contact the job poster with specific information, you give them the information that they have requested. Remember that the job poster might not have anything to do with hiring. I've noticed that some companies have one person post all of their LinkedIn ads. When a company has 50+ LinkedIn ads across many different types of jobs, it's highly unlikely that the person who is posting them knows anything about it. If you are going to send an InMail to the job poster, you should evaluate whether there is any benefit to you in doing so. If the person who is posting is essentially just a job aggregator for that company, I'm not sure if there is any benefit. In each case, the question is whether the communication is beneficial to you. And, as with everything else that you do when looking for a job, this question needs to be answered with every piece of communication that you send (or are thinking of sending). Just as you should tailor your cover letter and resume to the individual position, you should ensure that the rest of your communication is tailored to the individual position and the person with whom you are communicating. Having a single policy what goes into any given piece of communication reduces your opportunities to show how you really are the best person for the job that is being advertised. 

I see two separate but related problems here. The first problem is the one that you've articulated: you're helping out this other person, and you'd like to be recognized for the work that you've done that is above and beyond your normal work. There are several different ways to handle this. One way is very casual. When they thank you in person, say something like, "I'm glad to help out. It would really be helpful to me if you would let my manager know that you appreciate this". Practice saying it out loud a few times so that you can phrase it in such a way that feels natural to you, and so you don't feel so unnatural in saying it. If a situation like this occurs in a chat, you could simply cut and paste the contents of the chat into an email to your manager to let them know about it. I usually phrase this as, "I wanted to share with you some kudos that I got for helping out [whoever] with [whatever]". If it's someone that I've been helping out a lot, then I'd change it to something like, "I wanted to share with you the appreciation that I got from [whoever] for [whatever], which is something that I've been helping [whoever] with for a couple of weeks [for this reason]". If the other person emails you a thanks, then I forward the email to my manager with something like, "I wanted to share this with you. It really made my day that [whoever] appreciated the help that I've given them on [whatever]." Another option that you have would come at review time. If your company asks you to provide the names of people outside your team who can give feedback about your performance, you can give this person's name to your manager. How you go about doing this is dependent on how your company manages its review time (if it does at all). I work for a big company, so everyone knows when it's review time, and we all know that we'll get requests for feedback about people on our team and elsewhere in the company. It's not considered a breech of etiquette here for someone to give my name for feedback and not tell me in advance about it. The second problem that you have is that your manager doesn't know that you've been regularly helping out this other person. If you have a regular meeting with your manager, or you have some kind of regular status email/form/whatever that you have to submit, it's appropriate to mention in either your regular meeting or in your status email that you did [whatever] for [whoever]. If you don't have either of these, then you should document it separately (as listed above). In doing this, make sure that you're very positive about helping out others and sharing your expertise. Finally, don't forget to pay it forward. Whenever someone does a favor for you or really goes above and beyond, make sure that their manager knows. Usually, I do this by sending them an email that thanks them for their efforts, and I CC their manager on the email. If their work is truly exemplary, I send the email directly to their manager that explains what the situation was and how their employee helped me out, and I CC the person on it so that they know that I contacted their manager to let them know how awesome they are. My email to their manager includes what awesome thing they did, how it impacted me, and includes my sincere thanks for their assistance/whatever. 

Apply directly to the company. You make a reasonable assumption that the recruiter is working directly with the company in question. This is not necessarily a valid assumption. As a hiring manager, I have seen positions that I have posted get re-posted by recruitment agencies with whom I have had no contact. Sometimes these agencies contact me with candidates and try to convince me to interview them. Since I didn't contact the recruiter and haven't been authorized to use a recruiter, which is an additional expense for me, I cannot consider the candidates that they put forward. The recruiter only using the original job ad is a red flag to me. When I have used recruiters to hire in the past, they've usually written their own job ad based on the discussion that I have had with them about what I'm looking for, why I haven't been able to hire yet, and what a great candidate looks like. If they're simply reposting my existing job ad, the chances of them doing anything that adds value to the process is a lot lower. 

I think that you respond to the apology by focusing on the positive content, which was the useful suggestions for how to move forward. You can choose to do this either in an email to the team, or privately. If you do it privately, you can also add a statement that you appreciated his apology. Doing this costs you nothing, and it buys you goodwill from him. People generally like having useful suggestions acknowledged. Additionally, acknowledging an apology lets him know that you're willing to excuse an instance of poor behavior when he's identified it and tried to make amends. From all appearances, his email was a highly professional way of handling a situation that he had (likely inadvertently) made awkward and uncomfortable, and responding to his apology recognizes that. 

As the candidate, you always get to choose what you do and do not say, and how important it is to provide (or not provide) an answer to a question. The candidate can try to sidestep the question and answer the similar question of, "what is your expectation of salary for this role?", and thus the candidate can discuss their research about salaries for business analysts in the area with this experience, and hope that HR accepts this response. As HR, they always get to choose what questions they ask, and how important it is to have an answer to that question. If there is a piece of information that HR really wants but the candidate refuses to provide it, then HR is in the position of deciding whether they want to make an offer without this information, or if they simply want to move on to another candidate who is willing to share that information. Personally, as a software engineer, I don't think that I've ever not been asked about salary when interviewing. The general interview process that I'm used to is a phone interview with a recruiter, a phone interview with the hiring manager or someone on the team, and then an in-person interview with the team. Of all of the in-person interviews that I have done, salary expectations are always discussed before the in-person interview. From the hiring manager's point of view, there is no point in interviewing a candidate whose salary expectations are above their budget. When I'm asked about salary, I talk about total compensation: base salary, bonuses, stock options or grants, and benefit package. For entry-level positions such as those that require less than two years of experience, there are often many candidates who are just as qualified but who are more forthcoming with the information that HR wants. Your friend needs to decide whether their desire to get as high of a salary as possible is higher than their desire to get a salary that is higher than the too-low one that they currently make. 

In asking these questions, I wanted to focus the conversation on my behavior, not on my co-worker's behavior. How my co-worker behaves is between my co-worker and our manager, and unless it's getting in my way, I don't need to be involved in that conversation. In my case, my manager told me that I didn't need to CC on routine conversations, but to feel free to do so if I felt that there was something in the conversation that my manager needed to be aware of or take action on. My manager said that if someone else made the decision to CC when I didn't feel it was necessary (regardless of whether it was on my team or not), that I could simply reply-all and not worry about it. My manager said that the delete button isn't that hard to click on. Your manager might have different thoughts, so check. You don't know why your co-worker is doing it, and you might not ever know. I still can't explain why my co-worker does it, but I'm comfortable in knowing that it's not something that I need to worry about. 

Building work relationships takes time, and that time is lengthened when you're working with a remote team. It's even worse if you're the only person who is remote from the others. Addressing this issue takes awareness from everyone involved. I've worked extensively with remote teams, and here are some of the things that I have found to be effective in building work relationships. 

Follow your heart. If your heart says that you really really want to go to law school, go to law school. If your heart says that this is an awesome opportunity that you just can't turn down, don't turn it down. A friend once recommended that I flip a coin. If I found myself hoping that I would get one answer, I knew what I should do. If I still found myself torn, then do whatever the coin flip said to do -- it meant that both options were equally good for me. You're right that your life will be very different no matter which option you take. Standing at a crossroads is always difficult because you know that your life will change. Your life is going to change on many smaller decisions. You might find the love of your life, or your next job, or your best friend while waiting to get a coffee. Every single decision you make, even just which coffee shop to go into, could impact your life. Keep perspective: you're going to make many many other life-altering decisions in your life. Humans are adaptable. Both paths are awesome. Whichever path you take, focus on letting that path be awesome instead of focusing on what might have been if you had taken the other path. Both paths will have ups and downs. If your life changes in such a way that the path that you are on is no longer awesome, you have the opportunity to make a new path for yourself. If you choose one path, that doesn't mean that the other path is forever closed to you, or that a new even more awesome path won't open itself up to you in the interim. Go forth and be awesome. It's that easy, and it's that hard. 

I think that your question isn't about the software industry as a whole, but rather about the area of the country that you want to move to and the particular type of job that you want to get within the software industry. If your particular job within the software industry is one that has a lot of applicants, then it is more difficult for the company to justify the expense of a candidate who is not local. If your particular job has more specialized skills and thus fewer qualified applicants, or if you want to move to an area with many open positions, then it's harder for companies to fill the roles and thus they are more open to relocation. For example, roles working in support or the helpdesk are easier to fill than positions for kernel hacking. The latter is more likely to relocate the right candidate for their role, the former has their pick of local candidates. Personally, as a software engineer in Silicon Valley, relocation often isn't an issue. Every company that I have worked at thus far has relocated people if they were the right person to do the job. When I consider candidates for positions on my team, I don't pay a lot of attention to their current location. I do take note if it appears that a particular candidate might need sponsorship to work in the US, but mostly as a flag that my HR team is going to have to do some extra legwork if we decide to hire that candidate. Judging by the resumes that cross my desk, my employer's recruitment team sends me the candidates that they think are the best fit for open positions, not just the candidates who are already local. 

I've often heard "perfect is the enemy of done", and considering pragmatism in the workplace is an excellent application of this. There are many problems which might have a perfect solution, but the perfect solution would be more expensive. "More expensive" might be measured merely in terms of dollars, but it can also be measured in terms of how long it takes to implement, or how much effort will be required to keep it running at optimal efficiency. If the perfect solution doesn't meet the needs of the situation, then you have to come up with a solution that is good enough for now. For a non-work example, on a recent visit to my mechanic for my car's regular oil change, I mentioned that the sunroof wasn't working properly. The whole sunroof mechanism is automated, from the cloth that covers the sunroof when I don't want the sun beating down on my head to the actual opening and closing of the glass of the sunroof. The cloth that covers the sunroof was catching just as it was about to open fully. After examining it, my mechanic explained (and I confirmed via my own research later) that this is a known problem in my vehicle, and that the mechanism that operates the sunroof will eventually fail. He said that this catching is the earliest sign of it, and that my sunroof will probably stop working (hopefully not while it's open!) in a year or two. He gave me three potential solutions: