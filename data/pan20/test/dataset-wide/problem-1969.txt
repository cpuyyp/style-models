Not whether you're a stable family person, someone who can be paid less because you have two incomes or must be paid more because you have a family to support, or someone of good character. Just mobility. Many places that are hiring doctors, professors, and executives, and expect those people to move to the new city will actually help to find a job for the spouse of the candidate they want. Truly. The more portable your spouse's job is, the happier they are. Other places may be less likely to make you an offer if your spouse could cause you to move to another city (your spouse has a high-flying geographically rare job) and more likely if your spouse can work anywhere (teacher, store clerk, office worker, chef.) If you don't live in a place that forbids this question, or you do and it's asked anyway, I agree that you should clarify the question by finding out why they want to know. The best way to do that is to paraphrase. For example: 

If you haven't been told that your old company is going to fix the problem then you could replace the last sentence with 

If you solve the bug, yay. If not, you create an instrumented build. Say a particular error message occurs in several spots in your code. You change it so each of those spots leaves a unique signature - in the logs, in the message, somehow. Maybe you also turn the logging up if that's a thing you can do. You get that code to your person. Then steps 2 through 4 again. Still not found? You check that your person is ok with still being your person. You check with your boss that it's ok to still be looking into it. You add more instrumentation, more logging, more capturing. Your boss sees that you're not just thrashing, but you're logically working your way towards narrowing it down. Your client, who is interacting with you a lot, sees too that you're working on this and working intelligently. And you are likely to solve it this way, too. But along the way you will be sending the right message to those who are watching you. Still not found? There are things you can install on the client's machine that enable "historical debugging" or "replay debugging" -- if the client refuses to install it you can honestly say "well I won't be able to solve it if you don't co-operate" and if they do install it, well, again you're sending the right message and you are that much more likely to solve it. The key is to know what you need (more information) and how to get it. Then set to work getting it and make sure everyone knows you have a plan and are following it. 

Not all mistakes or errors in judgement at work are firing offenses. What they thought you did - just don't show up one day, with no notice and without permission - is really bad. They would fire you for it. Once you were able to show you didn't do that, they didn't fire you after all. What your supervisor did - forgot someone asked for time off, didn't arrange cover, and caused upset to you by the director telling you that you were fired - is not good, but it's not a firing offense. Well, it might be at some employers but you can tell it isn't at yours, because your supervisor wasn't fired. I think you can see it is a different kind of mistake. You can decide whether to forgive your employer for their original reaction to what they thought was happening. I probably would. Not showing up without permission or notice is a pretty bad offense. You can decide whether to forgive your employer for the weak apology. I might or might not. If you decide not to, start looking for another job, but don't quit until you find one. It's not clear from your question what needs to change with your schedule, but if there is something you want, now might be a good time to ask for it. They may feel a little guilty over temporarily firing you and speaking so strongly to you when they thought you had done something you hadn't. 

Now you should have their attention for "here's how we're going to change things." The most obvious approach is to institute a daily standup. You know all the stuff that needs to be done. The group meets (typically first thing in the morning, but other times can work) and each person says "yesterday I ... and today I am going to ...". If they have any blockage, such as not knowing XYZ, they announce it here. You can then decide how to solve that - remind them it's in the wiki, ask if anyone present knows it and can tell/show the person to unblock them, committing to setting up some other meeting today to unblock them (eg "I mailed support three days ago and have been waiting for an answer ever since") and so on. If anyone says they don't know what to do next, the group can decide right there in the standup. Give them a little ownership over their tasks, give them some visibility into the bigger picture, and most importantly put a stop to days on end of nothing getting done for random excuse-sounding reasons that arrive long after the fact. Refer to the instructions you prepared earlier whenever necessary, but never assume that anyone, much less interns, has memorized all the instructions and training you provided or will remember to look back at that material without prompting. Part of what you're teaching them is that this sort of material is actually useful and worth turning to when you're stuck. You're also teaching them that they don't want to be stuck. Also use the daily standup as a chance to hand out daily praise. Younger people haven't yet learned to praise themselves for finishing things, so they may need it from their peers and you for a while. "I finished the ABC screens." "Great! Now, who is going to test them?" That's better than just "I guess that means they need testing, who's doing that?" You don't need to treat them like kindergarten students, but Great, Fantastic, Good-we-needed-that, and the like do make a difference. 

Imagine if a group of 5 people all chafe against these procedures, because they take a long time and the 5 people don't know the benefit of following them. In a deadline crunch, 2 people skip steps they think aren't important. Badness happens. If management takes just those 2 people aside and says "that was wrong" -- the other three will not learn the lesson, will they? There may have been some one-on-one talks and consequences for the people who didn't follow process, or there may not. But an all-hands email that says "this is how we do things here, because when we don't, badness happens" is absolutely critical to ensuring everyone re-commits to following the process. Are you the target even if you followed the process? Yes, you are. You're not a bystander. You can take a moment to feel pleased that you never succumbed to the lure of skipping process, and aren't responsible for the badness. Or you can take a moment to feel lucky, or even slightly guilty that when someone said "I don't have time for that nonsense too close to deadline" you didn't object, or didn't object enough. Believe me, everyone is a target of an all-hands email. That's the point of them. 

Only a very small percentage of the working population is evaluated by someone who shares their technical expertise. This site is full of questions from (for example) developers working in software development firms who are managed by people who don't understand the tools and languages the developers are using, because they have changed since the manager held the job. Your situation isn't that different. So, you are never going to get "wow, this architectural solution for the new API is elegant and efficient!" as a review. (Or whatever applies to your skill set.) That's ok. You have four things you can do: 

The key as always is to be truthful. If the second answer is true for you, then you want to work in a place that agrees with your attitude. Not all long answers are good. Consider this one: 

I have been treated with a lack of respect many times in my life. The occasions where I was able to ask for that respect are very few and far between. You can remove yourself from the situation - end the meeting or interview, decline the job, and optionally tell them you are doing so because of how disrespectful they were to you. You can grit your teeth and remind yourself that this cannot possibly be about you, because they don't know you, it's a reflection on who they are, not on you, and put up with it in the hope of getting the job (or whatever else you want that you are going through some process for.) Optionally, you can tell the person much later about the effect of their behaviour on you emotionally. What you generally cannot do is, in the moment someone is being intensely rude, point out how rude they are being and ask them to stop. Human nature being what it is, they will usually react poorly and decide that you are the one who is rude. If it helps you to put up with it, make a backstory that explains the person's behaviour in terms that are not about you (perhaps the phone-call-taker's wife is very ill or mentally fragile right now, perhaps the game-player has given his two-weeks-notice and is leaving tomorrow and thinks it's stupid to get pulled into this interview) and use that interpretation rather than "they think I am a poor candidate and can't even be bothered to really interview me." You may never know which is true, especially if you don't take the job, but you will be happier if you assume the not-about-you version is true. What's more, it almost certainly is. They just met you, they don't know enough to decide that you don't deserve respect. 

You can buy personal battery operated fans - small enough to carry around in your pocket and even hang from your neck. You can also buy scarves and bandanas filled with gel beads that soak up water. This keeps the scarf damp, so when it evaporates it cools you. It only takes 5 minutes or so to resoak the scarf each day. You could also see if you can change seats with the people who feel cold - you might both end up happier. 

Notice you're not disagreeing. You're not refusing. You're not sending one superior off to work something out with another. You may get answers like "yes, A is fine with it, we discussed it a little while ago" or "none of your business, I've told you what to do" but either way you learn something. You may get "yes, something has changed, 4 days has gone by and A expected the outline the next day. There is no longer time to wait for this subtask. Get it done and then go back to the outline." That's a bit of a reprimand, but at least you understand that the conflict isn't a conflict, it's a change in priorities based on events that have happened since you got your instructions. Any number of possible explanations may exist for this apparent conflict. Clients call with emergencies, people have to be pulled off things, people change their minds, you misinterpreted what you were told and B has come to clarify, etc etc etc. By asking questions instead of arguing, you can learn what's going on around you and get better at your job. If all this happened a little while ago, what have you been doing since then? Does B think you're doing what he asked? Does A? If you have been paralyzed since you got this instruction, get the clarity you need in order to move forward, and get it now. 

Your boss may tell you, in fact almost certainly should tell you, that this is a career limiting move. If you had asked about how to reduce that anxiety, how to be better at presenting, why visibility matters, why presenting is a vital skill for everyone, including junior developers, or how to do things you don't see the point for -- there are lots of questions here on these topics and you can learn a lot. But I'm answering what you asked. How can you get out of it? The answer is that whether someone says "I need you to present on X" or "can you present on X?" or "I'm assigning the X presentation to you", you can answer as though they asked, and say "no thankyou" while offering to do whatever part of it you're comfortable doing. You can announce that this is a new position on your part and you're going to say no thank you every time, but you don't have to. You can go to your boss for advice about how to be happy and comfortable saying "yes please" instead of "no thankyou" to these opportunities, but you don't have to. Do be sure your resume is up to date. You may have to look for a new job soon. And this time, ask in the interview about these sorts of presentations and make it clear you don't like them. There are many many developers who are never asked to do this. They work in companies that are different from yours (for better or worse) but a job without presentations does exist.