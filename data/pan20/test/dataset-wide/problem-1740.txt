I would suggest trying bind mounts (like /Database already is) rather than the unlink/relink games that page has you play. Try something like in for /lib/modules. Alternatively, I assume your problem replacing the /lib symlink was that commands started to fail immediately after the /lib symlink was removed. That's likely because the replacement was not atomic. You might have better luck with as that should be more atomic if not, in fact, actually atomic (I don't know offhand). 

openssl ciphers will tell you what openssl will translate your cipher spec string into. Use to see verbose information about the ciphers listed. So for your listed cipher string on my CentOS 6 system I get: 

Assuming you mean then yes, that should work. Check that the file has exactly two lines and that there aren't any extra spaces or anything in the key line for the second key. Also check that you have added the correct lines for each desired key. 

I believe you have run into this bug. Which I just duplicated on a CentOS 5 machine and EPEL 5. That's a pretty bad bug to have in a shipping RPM if you ask me. Luckily the workaround is not too bad. Either create the symlink in the normal place (which I don't generally recommend) or create a directory and put the symlink in there and use LD_LIBRARY_PATH to point there. (I'm not sure why you have LD_LIBRARY_PATH set in your environment already unless that was a debugging attempt.) 

So, we assumed Group Policy was to blame. On going through all GPO's there is use of User Rights Assignment, Restricted Group Access or Local Users and Groups Assignment. We have also gone through all login scripts and nothing is set there either. On checking the ADDS logs we can see that replication is working as it should. It's also worth mentioning that Site1-DC01 holds no FSMO roles nor is it a GC. We are stumped as to how it gets re-added. Can anyone point out what we're missing? 

Ok, have found the answer. A little embarrassing. The server had a LANDesk agent on it and there was a LANdesk task that added the workstation admin group to the local admin of all machines on that site and therefore as this is a DC the domain builtin\administrators. Thank you all for you help though!! 

After a lot of searching around, it doesn't appear to be possible, I have attacked it in a different manner using PowerShell for updating normal AD accounts to Unix 'enables' accounts. 

I do not want to give the group "Full Control" of the OU's as per other threads, this is not an adequate answer, I do not wish to give the group this much control. I should point out that the setup works perfectly as a domain admin for obvious reasons. Any help will be gratefully received. 

We're having a strange problem that we can't fathom out. We have inherited a 2003 FFL/DFL domain that has a mix of 2008 R2 and 2003 DC's. The Workstation Admins group was in Builtin\Administrators, not great I know. We removed said group from the elevated permissions only to find it had returned the next day. Checking the permissions on the group Builtin\Aministrators only Domain Admins can affect it, as it should be. We used the repadmin to track down when the change happened: 

You need to find out if you are supposed to have an intermediate certificate or not. If you are then having your server supply it in the chain will help any clients that do not have it build a valid chain (assuming they have the StartSSL root certificate installed locally). That may not be the case and that will not help people who don't already have the StartSSL root certificate trusted locally. You can't help those people though they will have to install it to avoid the warning. 

For apache you can control the available SSL cipher suites with the SSLCipherSuite directive. Beware though constructing a secure, reliable, compatible cipher suite string is not the simplest of tasks. 

This appears to be something that the javascript on the google page is doing. I don't see it in firefox with noscript enabled and stop seeing it in Chrome on Windows if I disable javascript. I don't know what specifically as I haven't dug any deeper than that. 

and tell you what sasl plugin types are available. I would assume those would return errors or empty lists if sasl support was not enabled at build time (though possibly not). You could also check the output of and see if it links to a sasl library or not (though it might be possible for postfix to be built with sasl and not link to a sasl library if it supports it via a plugin or something, I don't know whether it does or not). 

We have several Linux servers that are AD integrated, all our DC's are Server 2008R2 running at 2003 DFL and FFL with MSSFU installed. I wish to delegate the population of the UNIX Attributes tab to an AD group for our Service Desk. I have delegated read, write and read all, write all permissions for all msSFU*** objects. When testing the permissions I open Users & Computers, open a user and switch to the UNIX Attributes tab. I then select the domain from the drop down which auto populates the rest of the fields, no problem. When I click apply I get the below error, but if I check the attributes themselves in Attribute editor they have populated and I can use the user in Linux. 

I have a problem that has got me going round in circles. We have 14 Centos 6 AD integrated servers using Samba/Winbind with idmap_ad (security = ads, idmap backend = ad), this setup is running perfectly in 13 of them. Problem The problem lies with one server and one user. From the problem box you simply cannot resolve one particular user. This user resolves from all other servers. Results when trying to resolve on problem server: 

Now resolved, this worked for me: Cleared all Winbind caches and flushed Net cache, remember to take a backup before deleting anything! Stop the Winbind and Samba services: 

Attempted Resolutions I have stopped winbind and smb and cleared the winbind cache (winbindd_cache.tdb & winbindd_cidmap.tdb) the started them again - no joy I have started winbind with -n to perform straight lookups - no joy Unfortunately this is a production server so I can't get too drastic with it and I am unable to replicate the problem on any other server including a test server I built using the same configs. I'm fairly convinced it is not winbind after the above test but am at a loss as to why the user won't resolve. I can run and get the users SID then run and see: Key: IDMAP/SID2UID/S-1-5-21-746745685-249376194-4547331-1137 Timeout: Tue Apr 2 17:30:32 2013 Value: 1283 0 Key: IDMAP/UID2SID/12830 Timeout: Tue Apr 2 17:30:32 2013 Value: S-1-5-21-746745685-249376194-4547331 -1137 This shows the correct UID (12930) so the server can find him in AD and pull his Unix Attributes. I can run and it returns it successfully as I then tried and restarted smb and winbind, this did not fix it either. I still can't the user nor and therefore the user cannot log in nor access samba shares as the server can't resolve them. The infuriating thing is that all other users work including newly created ones! ... Can anyone help? I'm stuck! ... Basic details are: 

Yes and no. You are correct (barring some additional details) for server certificates. However the certificates in /etc/ssl/certs are intermediate and root CA certificates and not server certificates. That is they aren't used for server identification directly. As such they don't have that matching concern. Server certificates, the ones that servers actually present to the client, do have the matching concern and are what you see in the first certificate you get when you connect. If you look at the other certificates in the chain openssl builds (and spits out to you) you will see references to the /etc/ssl/certs style of certificates. The CN itself may not match if one of the alternate fields defined as being legal matches matches instead. Among the methods for adding additional valid names for certificate matching is the use of a subjectAltName extension with the dNSName type which then specifies what the valid name to match against is (at least for HTTPS purposes). There are others for other purposes as well. 

Installing an extra root certificate on the server is not going to help a browser trust the server certificate the server sends it. The browser needs the root certificate locally in order to construct the chain of trust when the server sends it the certificate. If you check the certificate dialogs in Chrome and Firefox I believe you will discover that Chrome has found the root CA installed locally and has constructed a correct valid chain whereas firefox has failed to do the same (because it does not have the necessary root CA locally). Installing root CA certificates in browsers is a fairly simple process once you have the appropriate certificate file. The certificate dialogs in the various browsers all have an 'import' button of some sort that you can use for this task. If your certificate requires intermediate certificates then those should, for best compatibility and correctness, be sent by the server during the SSL handshake process. That requires the intermediate certificates to be configured on the server the same way as the server certificate is (that is they must exist in a file and Apache must be pointed at that file with the SSLCertificateChainFile (or similar) directive).