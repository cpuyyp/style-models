I've worked in both very small and large companies, I think it's very hard to generalise, I will just put the most important advantage and disadvantage of each: Disadvantages of small companies: Most important consideration I think you should make is that when changing jobs in the future, small companies don't look nearly as good on CV. It's highly likely nobody has ever heard of your small company you work for. Even if you are doing the exact same job in a small company it's much more impressive being a Javascript developer at Google than a Javascript Developer for John Doe consulting. Disadvantages of large companies: Processes and bureaucracy are no fun at all, but come with the territory of large companies. In general large companies are extremely risk-averse, resulting in creating a process for just about anything as to make sure nothing bad happens. This in-turn creates bureaucracy and it can be very hard to figure out how to get permission and who can help you, when there isn't a well defined process in-front of you, which can mean doing the same job in a large company can be much more painful and time consuming than the same task in a smaller company. Advantage of small companies: Potential, if I think about what is the best advantage it is that there is a massive potential, however unlikely, that the company grows rapidly and you come to hold a very strong position in the company. I stress this is very unlikely, but often with startups you might be the only developer yet your job title is CTO or head of engineering, (pretty much head of nothing but yourself), but if you acquire a senior position early on you will have a great one later. This isn't so much the case in a large company. It is sort of a scale out scenario most of the time, you don't really get promoted, but instead less desk space as more people are added. Advantage of large companies: Stability and Reliability. Generally large companies are a very stable job to be in. Opposite to a small company, everyone will know the company you worked for, making it easier to get a job in the future. If you play your cards right, you can climb the hill and get promotions, unlike with a small company you will actually have to build the hill first, and hope your business lets you climb afterwards. There is plenty of other things could go on forever but these I feel are some of the most important.a I do think though you should be more focused on finding what job you will enjoy the most no matter where that is. 

As a still fairly early career professional myself I think the most important thing you can do for people starting out is inspire and motivate them. I'd advise caution against giving somebody only tasks like documentation, bug-fixing, manual UI-testing and logging, especially to us poor little millennials. Of course if your company needs to get this stuff done then someone has to do it, and as a member of them team the junior developer will need to do their fair share. But if you don't give somebody something stimulating to sink their teeth into eventually they will leave, speaking from experience here. As to what to do I would allocate some time to pair programming and and having them do this with various people. There will be tasks which then popup throughout this interaction which can then be allocated to the junior dev. Also include this person in meetings even if they are just a spectator. I've learnt allot by just watching the pros interact, the language they use, what's important, risks and concerns in projects and so on. Just a little note too I feel that as a professional it's everybody's duty for their industry to help train the next generation, as we all benefit from some more experienced person than us investing time in us. This junior developer may not be able to help with this project at all. But definitely the next. However one day when they are a senior developer and they are the manager of the project, they will remember what you did for them when they were joining their first project and do the same (; 

IMO Github is not a great platform in general for selling yourself. It is great for collaboration and gaining traction for open source projects, but when it comes to selling yourself there are better ways to go about it. I would consider either summarising successful projects in your CV or if something is really great which you have done, consider creating a video or even a slideshow, and post it on LinkedIn and then link back to your repo on Github if you want to. Just a word of caution on Maple and Matlab. Matlab definitely has a place in the software engineering industry for certain jobs, it can be highly desirable to know the various tools boxes and what not. But Maple I really don't think so, if I search for Maple jobs in the large city where I live I don't see one job, when I search for Java I see approximately 600, python 275, this is really an academic tool which universities buy. Matlab and Maple remind me of Microsoft Excel. They are terrific for calculating your engineering and mathematics assignments, and can be impressive when you add a few little controls, but really feasible to develop a SAAS application, website, phone app, etc. Also you don't learn about CI/CD, cloud, object orientated programming, design patterns, frameworks, IDEs, Command-line, or the many other things which software engineers deal with on a day-to-day basis, but I'm sure you can pick that all up if you work hard. Good Luck 

But if that statement isn't believable for you to say, or you want to pick and choose what colleges you add on Facebook then you're in trouble here and you will only have the decision either to accept or offend. Even if you have really close friends at work you want to have on Facebook I would consider not adding them on Facebook to avoid these situations in the future. Finally you could just add them and then selectively restrict all your content from them such as your photo albums and activity. I know there are ways to do this but I still imagine they can see information you don't want them to and that may not be acceptable. 

If you are really unwilling to compromise on the project, you should either be finding yourself a position where you can make all the decisions either being a manager or working solo. There is no way to ensure you can get things your way all time (even if they are the best I've found meritocracy don't exist in the real-world) when you are a member of a team. Even if you go to your boss/manager you will only win if your way aligns with their way, but I stress at the end of the day it will really be in fact their way. 

IMO I don't think it's reasonable to not compromise on certain a aspect of the project when working in a team, especially testing. I hold testing myself in extremely high regard, but lets face it if you have a limited time and budget which is every single project ever, if the project starts running behind schedule because of issues such as the conflict you are asking here, testing will be the first thing to go. Just imagine how silly it will be if the reason you start having an irreparable conflict with this person is over a task in the project which becomes de-scoped because of the timeline. I can't remember this exact quote I believe I first heard from Venkat Subramaniam, is that 

Sounds like you should be thankful you haven't been fired already, and your boss is giving you a chance to meet his expectations, but then again you are planning to quit even without a new job so it sounds like you don't even want this job. Anyway it sounds like he would have fired you if he had thought you weren't going to be able to meet his standard. I personally would find it hard to put in the effort to improve my performance if I was just planning to quit soon. Furthermore it doesn't seem like you want to use this boss as a reference seeing as you didn't please him with your performance and are planning to quit even though he chose to see if you would improve instead of straight up firing you. But to answer your question I'd say yes this is a very big red flag. 

This really depends on allot of factors. For instance the country you are in, I know in Germany for instance you really cannot get away with working longer than you are supposed to. This is even enforced on software installed on your computer in some companies, or a key-card system as well for larger companies, although this doesn't sound like your situation what country you are in can be very important. Assuming this is not the case then it can depend on the people and the company. I personally do not feel pressure when my colleagues work longer than I do and if I felt pressure to work longer than what I am paid to I would probably look for another job. Every now and again I feel compelled to stay back if I have a deadline or something or feel like I need to get something accomplished but I don't stay back just because Fred is staying back, and I don't make a habit of it, if I had to stay back to get my job done there is either a problem with my performance or the company's management. However if you are in one of those work places where there isn't enough to go round, or you are competing with someone who is doing extra hours then you might not be a happy camper. If I didn't get a promotion because Fred was doing 60 hours whilst I was doing 50 and that was the sole reason, yeah I would be pretty upset with Fred. I strongly advise you not to tell others not to feel obliged to work longer just because you work longer than them. This can be taken very condescending as you are firstly assuming (whether or not it's true doesn't matter) that you are working longer than they are. Never do this. If you are worried about working longer can come off bad then work from home outside of hours and make your commits during work hours (if you are a software developer), but it sounds like you may already be doing that. 

I honestly think all you need to do is get him to show/demo the information he is telling you. This will clear up any misunderstandings. Don't spend allot of time trying to figure out what he means, this is a very inefficient way of working. If something isn't clear straight away, simply ask him about it in person. Something like: 

For arguments sake lets assume somebody's cat died as a result of this bug. This person wants you to find what is responsible to ensure no more cats must perish because of this senseless maniac bug, who is practically a psychopathic serial cat killer, with no conscious. Now if this was your cat, at what point would you want the detective to stop looking? What if they had exhausted all reasonable leads after 1 day, I think you would still want them to keep looking so you still have a chance of getting justice for your cat. But the fact is you have no emotional attachment to this cat, and you know deep down your efforts are in vein. So what to do? IMHO an appropriate course of action would be to reassure all parties that you will do what you can to catch this killer, but this may need to enter a long term strategy also to take any preventive measures as a result of your investigation, to ensure cats are as safe as they can be in case the killer were to strike again. Then you will need to get additional work assigned to you whilst you still search for the cat killer. At the beginning this might not be much work and your time will be still mainly on chasing the killer. But slowly you can ramp up your additional tasks till you hardly spend any direct time on the case. Do keep it in the back of your mind, maybe suggest additional logging changes you could make to help set a trap for this bug if it does come up in the future. That will probably be your best bet in ever really solving the bug as you say currently there is no logs, maybe logging is something lacking in the business which could be improved and you could spend time on that and it would still be under the hood of catching the bug, and then move on to the next task once you convince your boss that if the cat killer strikes again you will catch him then, and minimize any harm done to customers in this process. 

Once you put in your notice you can't look back. You need to look at this situation from the employers point of view. Business is nothing about fairness. One can only assume once you had put in your resignation there was no way they could afford the other developer to leave too, hell he might of just said: 

It really remains to be seen what the best approach will be you should consider whatever you do now could be changed in the future. If I were you I would extend an olive branch to this person so to speak and say something like: 

Disclaimer I deleted my Facebook. This is what LinkedIn is for. Add them on LinkedIn instead of Facebook. In your LinkedIn invite explain that you like to keep your personal social media account separate to your work-life. If they would be offended by you not regarding them as a friend I would say something like