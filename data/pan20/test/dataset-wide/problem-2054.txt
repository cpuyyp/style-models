I started a new job two weeks ago using technologies that are new to me. I was upfront from the start about what I did and did not know so there's no surprises. I do a little of everything and so I work with three project managers at one time due to the nature of my role being involved in almost every client project we have. When assigning me a task and allocating an expected time, two of the three project managers are generous with their time estimates and have mentioned that they understand I'm new and learning a lot of unfamiliar technologies while also trying to stay on top of multiple projects (which relate to the things that I'm learning). They give me enough time that I've hit the minimum time expected (or finish in less time). But the third manager's project(s) are the most out of my field. Despite this, and unlike the other managers who are aware of how new I am, she repeatedly asks me "How long will this take you?" and when I reply, "I honestly couldn't give you an estimate because there is a lot of dependencies to get this task done that I need to learn first", her eyes bug out and I can tell she's trying her best not to lose it. I think the reason being is that the role I filled was backlogged with weeks, if not months, worth of work from the get go and so she's trying to hit deadlines for clients. She'll then assign me an expected time that, at this point, I've gone 10 hours over. I'm salary so it's not like they have to payout overtime and I also spend this extra time finishing up the project at home (going well beyond my 40 hours which is fine). I don't mind busting my ass; I mind the sense of dread and emergency she approaches every conversation with because she's worried about the project timelines. It stresses me out and makes me feel uncomfortable for not giving her time estimates. I may normally question my progress or capabilities, but I've had nothing but great feedback from the other managers. The senior project leader told me at the end of this week that she's, "Extremely glad to have [me]". The CTO even went out of my way to give positive comments on my work. So... How should I handle this? 

I just found out yesterday that we're getting three interns this coming Monday and that my boss is offloading them onto me. I was a TA and tutor for several years in college, so I genuinely enjoy teaching people. Except in this case, I'm a freshly graduated junior developer of only 4 months. I'm still figuring things out as it is and I'd hate to be responsible for three people who are seeking a professional learning experience and end up failing them. Additionally, I work at a start-up and my position in front-end development is not a position anyone else here has; I've had no seniors here to learn from and so all of my projects have been built and designed on my own and through my own learning (and we all know what a rocky road that can lead to). I feel that I am strictly in no position to be handling interns when I'm so inexperienced myself. His words to me yesterday were that, "You'll be working very closely with the interns on your projects and having them do this and that." Being that my project is in languages/technologies no one else here knows/uses, this translates to me being the sole programmer working with them. If they have questions or get stuck- they can only come to me. This is not your simple run-of-the-mill web page; this involves several JS libraries and 3D rending in the browser. My JS alone is more than 2000 lines. Is it normal to put interns under freshly hired staff straight out of college? What about three of them? How do I handle this? 

I'd argue that you don't. Every word in a tightly-wrapped cover letter and resume is precious space that you could be using to impress the recruiter. I'm pretty confident that if you live in A and are applying for a job in B, the potential employer assumes that you realize that you're not applying for a local job. It's 2016 and we're well into the Age of the Internet; employers aren't expecting that you found out about this position in your local newspaper. Your willingness to relocate is a given if you're applying for a job that's not local. It's almost like writing on your resume, "Will work for money." Isn't that the point of applying for a job to begin with? So the employer assumes that you're willing to relocate for the job that you're applying for, so that leaves us with, 

In a small company of about 30 or so people, anytime someone gives their two-week notice to the boss, the boss insists that the resigning individual keep it private until the week before leaving. This doesn't just include senior staff but project managers, lead developers, and essentially every other position of management that would likely appreciate as much time as possible to prepare and adjust. 

In my experience, interested companies will usually say in the first email or phone call something like, "As you may know, this job is located in Vermont. If offered a position, how soon would you be able to relocate?" The first thing to note is their assumption of your willingness to relocate (which ties into the first part of this answer). The second thing to pay attention to is the fact that if they're interested, they'll ask. Now you have the opportunity to express how quickly you can relocate. If they don't ask you here, they will ask you eventually but even if you could move across the galaxy in two days, that's not going to be the deciding factor on a job offer. This is why I'm suggesting that you don't waste your CV or resume space on this. Good luck! NOTE: If you were unwilling to relocate or couldn't relocate within a reasonable amount of time, then that's probably something you'd want to mention on a CV. It'll knock your odds of employment down but it'll filter out the companies that are not looking to hire someone in such a position, thus saving them and you time in the process. There's no point in getting to the interview stage, or any stage for that matter, just to find out that the company and you are incompatible. 

What about this story clearly suggests that this phenomena of questioning your knowledge is due to sexism? Nothing. Knowing that women can also be sexist, I flipped the genders. Yet in doing so, I don't see any blatant sexism going on. Here is an example of clear sexism: 

There's a team lead who chooses to address the entire team whenever there is a problem with one employee. It's usually trivial to tell who is being referred to because the issue will be with something like, "two hour lunches", "chatting too much with staff who are not on break", "forgetting to clock out", etc. Situations where one can think to oneself, "Ah yeah, that'd be Steve" or "Yep, that's Alice." I'm not really concerned with how to handle this situation at my own workplace but as a relatively young (aka inexperienced) professional looking to one day get into management, I'm curious how effective of a tool this is. Is it better to have an individual meeting with the employee who has behavior that needs to be addressed or is it a wise tactic to simply address the whole team? Clearly the simple answer is, "It depends" but I think we can agree that we're intelligent enough to discern the obvious examples of that statement. I'd like to know, by-and-large, which is the more effective tactic? 

Let's say Bob is severely underpaid but really loves his job, the short commuting distance, and his coworkers. But sadly none of these things make up for the fact that Bob is at least $15,000 underpaid and, as his family grows, has an increasing need for better wages and an increasing desire to feel monetarily compensated for his worth. Bob spends some significant time job hunting and, after some time and several interviews, gets an offer from a company at the exact wage he wants. As a last effort, Bob goes to his current manager and asks for a wage but without mentioning the other company's offer; no reason to corner what is a relatively a good boss (who in the end has to report to people who make the salary decisions) into an ultimatum situation similar to, "Pay me more or I leave." To his manager's delight (at being able to keep Bob) and to obviously Bob's as well, the pay raise has been green lit and everyone is happy! Bob respectfully turns down the alternate company's offer and things are well for a few weeks. But then, the powers that be decide to let Bob go for no reason known to Bob or his manager other then the stinginess of the company owners that lead Bob into job hunting in the first place. Now, Bob is out of a job and has to go back to job hunting. Not only has he already interviewed and turned down offers with companies, he has to start fresh and from a significantly less pool of companies to choose from (let's say Bob was really scoped in on staying local). Is there a way Bob could have avoided this in the first place? Negotiating some sort of contract where he couldn't be fired just weeks after his raise and turning down other offers? Note: Bob was not fired as a consequence of any action that he took. The owners simply decided they'd rather not pay him at the new salary. 

The answer is circumstantial; there is no set time frame for when you'll have the experience necessary to work remotely. It could be one year, it could be three years- it all just depends. Though I'd strongly discourage a fresh graduate from picking up a remote job. It is highly unlikely you have the experience or knowledge necessary to be completely, or even mostly, autonomous. This will result in coworker's having to help/teach you over the Internet, which is quite cumbersome on both parties as well as more time consuming than if someone was helping you debug in person. Additionally, a slower progress to autonomy means that you're likely to consistently be behind on project deadlines. This means that you'll be finding yourself quickly burned out in your first job from working long hours to compensate for lack of progress and many nights studying to catch up on the experience that you'd be otherwise getting from coworkers in person. Working under pressure can be a hell of a thing and such pressure is likely to be hammering on you while working alone and facing those first waves of "programmer doubt". Except in this case, instead of when you were stressing about the bad grade you'd get from a project you knew wasn't going to be turned in on time, you now get to stress about getting fired with bills creeping in because you're learning for the first time that you don't know as much about programming as your university made you think you did. Trust me- nothing alleviates that stress more, or sets you up on a faster track to success, than a senior coworker knowing exactly what you're going through, taking you under his/her wing, and showing you the ropes. When you're working remotely, this face-to-face gained sympathy is not likely to occur. To put it curtly, I think you'll be missing out on several vital opportunities for early financial, technical, professional, and social growth.