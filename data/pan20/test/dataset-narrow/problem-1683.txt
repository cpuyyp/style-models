I think the touch part of the screen behaves as a different part (a input device) on top ot the display's output device. So you have currently just rotate the latter not the input This suggest a similar concept - except the screen is rotated by adding this to (you may be able to stick with your existing rotation command, in which case some of these options may need to be different!): 

The power is insufficient in the respect the power supply cannot supply enough current I've had this issue running just a Pi 3 from a 1.8A 5V USB adapter. A 2.5A solved the issue for me. Look for higher current, NOT higher voltage*. With regards to measuring with the voltmeter, it may be difficult to see the spikes that cause the symbol to appear, most likely when under load. You can try measuring how much current draw the Pi is using (perhaps compare this with and without the touchscreen) to see how much extra the screen uses, though a quick look at retailers suggest supplys that can do 2.4A may be enough - so a 3A supply should work... *A slightly higher voltage (e.g. 5.1 on some semi-official adapters) will help with voltage drop over the cable length etc 

The problem here is, mainly the price (pretty much £25), as well as the fact all those holes don't look waterproof... Another choice could be PiCE, a apparently waterproof and rugged case, funded by this Kickstarter campaign (with promotional video). 

There is an entire page on elinux.org that has a list of supported cameras, complete with hardware IDs, operating system, resolutions, whether it needs a powered hub etc. It also has a list of a few to avoid. Here is a screenshot of one small bit: 

disabling the shortcut. You need to remove the to uncomment the line so it is read into the configuration, and you can remove (or change) the bit to remove the association with the F1 key 

It can apparently run Debian (or Raspbian, but apparently Debian can be used), Ubuntu and 'bastardized Linux' (Android). It seems to have all/most of the features of the Raspberry Pi, with a few more: 

There is likely more to it than this, but you may just need to load the driver for the Pi's sound module (unless it using the headphones wireless dongle as a separate sound module anyway....) - you can use this command for Raspbian: 

Another way to do it find some instructions (or make it up yourself), and use parts from the above places, or elsewhere (e.g. ModMyPi, Maplin, etc). Software components are also easily available out of the Pis repos or off of the internet - pre-configured stuff can also be found (e.g. a 'Dawn Robotics SD card') 

The default audio out on the Pi models uses PWM for audio, so is not really for hi quality audio.but is enough to make it audible - for example see the tests done here 

Your problem is, what you are trying to do is find an existing CCTV camera enclosure and stick a Pi (and possibly a camera) inside. This has the issue that the Pi or camera module (with incredibly easy to break cable) may be damaged due to being forced into it, as well by it getting wet due to being outdoors in not-well designed case, or overheating (fairly unlikely). Ideally, you need to get an existing case for the best performance - the problem here is, its fairly unlikely you can get anything under £20 (normal Pi cases can be fairly expensive anyway :( ... ) For instance, you can get this case from ModMyPi: 

At a guess you may be pressing the F1 key accidentally (by something pressing against, or using a faulty keyboard, etc) causing it to open the FAQ You should be able to disable this shortcut by editing this line in : 

I haven't tested this, but something like this might work (if not you should be able to get the idea of it....): 

Yes you should be able to - but you likely will be limited by the Pi might not be able to provide enough power through the USB for the hard drive (this depends on which Pi version and what hard drive you are using), so you probably will need to use a powered USB hub - hard drives work by spinning platters so can draw a lot of current, whilst USB sticks and SSDs shouldn't need as much power. The limit to the size of available flash or hard drive depends on how big that drive is. For playing media files you can simply install a program to play videos (if you are using Raspbian OS) - for example omxplayer [ 1] [2] or vlc, then you can play the video via the HDMI display output (perhaps on a desktop). If you want to dedicate the Pi to playing video output, you could try a more optimized distro on the Pi such as OpenELEC or OSMC, which I think use XBMC. 

You can use a CGI script - this basically means you can get scripts run by the webserver. Here are some samples from a old project I did (not necessarily the best way of doing stuff, but it worked quite well if with some latency over a WiFi connection): controls-touchembed.html 

This I think I did following this guide. My script above was used to invoke commands that are the , which were python scripts that used GPIOs to control motors etc. Note with some apache server setups, you may need so setup the security for a directory to have the CGI scripts in - this often is , , etc. I haven't done this using python scripts directly (I think CGI scripts can various languages, but you need to define the shebang on the first line)). There is also is a python module as well (see here) 

An upgraded version is available in the next version of Debian, Jessie, but you will have to upgrade to that when Jessie is stable 

I just shorted 5.8V+ (4 half-done AA batteries) through my Pi... at most for 3 seconds... it went through somewhere near the ethernet port... whilst connected to the ground of the circuit, also connected to the batteries... Having got my Raspberry Pi in a little robot to be made to finally work from my Android phone, I may have go a little overexcited and driven down some stairs... Hence when I picked the remains up at the bottom, the Pi fell out of its holder, which disconnected it from the 5V power supply, but touched some point near the ethernet port against an exposed contact on the battery pack... with the Pi's GPIOs still connected to the motor circuit, with both the grounds connected.... Here is a picture of the damage: 

Which may be easier, but I think one other way I could use it is to get the Pi's solitary GPIO PWM output to output a signal (which can be used to half power the motors when needed), and then use SOMETHING to send the signal to the relevant H bridge inputs when needed: 

It looks quite good compared to the other case, as it has heat sinks, waterproof assembly, removable sides, holes to attach to things - it also looks like it can be mounted on a tripod (whether you would need to but it from them i don't know) There is also an outdoor version, which has RF transparent (WiFi etc can go through) rubber gaiter to protect connectors going into the back of the case. A weather shield is also available (for £10!!!). Doing it with this would also likely get fairly expensive with all the extras. There are many other cases, most of which are even more expensive, and are not waterproof... The thing I would do (doesn't mean you have to do it - I actually had a go at this until i got bored and started on a Pi based Robot instead), would have a USB webcam with a fairly long cord (could also be linked wirelessly, those can be a bit less reliable, and cord will be required for power to the camera anyway) linked to the Pi, which could be either indoors in a standard case, or just attached in a plain box on wall (a 1.75 litre Really Useful Box and a few carefully drilled holes worked fine for this (two for USB power in, and USB camera out), plus some 90 degree corner brackets. With the price of the box (£4 tops, can't remember) plus the brackets, with no cost for the camera (3MP internal USB camera out of an old netbook + old USB cable from a broken camera), I think I did this under £10 (not including the Pi and stuff I had got previously). Oh and one last thing, if you have a microSD card you can use, you can use this to fit it into the Pi flush to the edge of the board, meaning there is no sticking out SD card to get in the way. 

There is some info here as to why it is called Iceweasel, it was something to with Debian (on which Raspbian is based) not liking Firefox's branding... Note: I seem to be only able to get version 24.5 on my Pi, but Firefox Iceweasel still works. 

Source: $URL$ (Google cached version here if site is still down) So you could connect the gps unit to the Pi via wiring directly, however without the needed components and a schematic of the board's wiring, this could easily go wrong and fry the gps unit and/or the Pi. Therefore I think it would be easier (and possibly cheaper considering the price and availability of some components needed) to by the baseboard and use that. N.B. It sounds like the Pi you are using is a original A or B model (you can compare against picture here if you need to), which should work with the baseboard as the site shows it is compatible: 

As a Fedora desktop user, and having just battled through trying to get stuff vaguely up-to-date on Raspbian (wheezy base image), I though I could install Fedora REMIX (i.e. Pidora) to see if it would be easier to fix the issue there. The problem is the image is no longer available on the offical Pi downloads page, and the version that is available is 20, which is a old version (almost as old as Debian Wheezy) that went EOL with the release of 22 (a month or so ago). So can it is possible to get a newer image as a download, or via (available) instructions to modify a Fedora ARM base image? Also, would the normal Fedora ARM version be suitable (is it missing the Pi GPIO drivers & libaries?). Using a old Raspberry Pi B (2011) if it matters (which I don't thing supports Ubuntu Snappy), it would be interesting to know it if is supported whether Fedora REMIX supports the new model. Otherwise I'll just update the Raspbian image installed to Jessie... or manually modify a Fedora ARM base to suit what I need. 

A 9-inch screen is as large as most netbook screens, so it should be fine. it would be better than a small screen like this: and would be larger than this 640x480 screen: 

Press Ctrl+O to save, and Ctrl+X to exit. Then exit LXTerminal if that is what you are currently using. This works even in LXTerminal Another way would be to right click and click 'Preferences', and untick 'Hide menu bar' under the 'Display' tab. 

The baseboard you are referring to doesn't just seem to link the GPIOs, it also seems to have a 3V3 voltage regulator, a independent power supply, and likely a lot of resistors and other components on it as well: 

First, it checks whether the switch is on, and changes if the switch is on. Then it should turn on or turn off the output accordingly, as well as printing what is doing, useful in the case of dodgy wiring. Also when I do scripts on the Pi, and want to do something else with it afterwards without rebooting, I do a cleanup script top run afterwards, or after a script has crashed due to an error. In the case it should be something like: 

The first command loads the sound driver module, the second I think sets the sound output to the 3.5mm socket. You can then use to adjust the volume, and to test the speakers You can also use the util to produce different sounds, using for mono, to switch between each channel of stereo, and to do different frequencies of noise - gives alot more options: 

For a better beep, I generated a 0.25 second beep file in Audacity (Created new audio track, generated 440 Hz tone, amplified it by 11), then copied it onto my Pi - I could then play it with . This I then copied to , and created this bash script at (I ran first): 

I think the focus by Debian has been pushed towards the next release of Debian (Jessie, the current version is Wheezy), so updated packages are less likely to turn up. *To get the latest version, download the zip file inside the folder with the largest number here - the latest number is also shown here EDIT: I found the problem - wheezy, the currently stable version has libc6 version 2.13, and version 2.15 or above is needed for most Chromium ARM builds to work - you can see this in the above error, and the following when I tried installing chromium from a deb, which also resulted with a few other errors: 

To actually change the touchscreen orientation, try changing to in (on the line). Then follow by running , and adding this line: 

Make sure you use s in the path not s - Windows paths use , and are usually relative to the disk they are on - e.g: On windows systems Path to folder on root (C) filesystem 

Note: needs to be run from a terminal on a graphical desktop so it can work, it doesn't seem to work from a TTY. 

before the line in , and rebooting. Again, you will lily require different parameters (it also suggests at the end of the line). These devices are general purposes when you have got the rotation working, it should help to calibrate the touch-screen as well! - this is also detailed in that article. 

For a update to a small robot I am doing, I am controlling a robot using the Pi. This works very well but I would like to add more precise control, using PWM on the H bridge that controls the motors, similar to what is described here. My problem is that the Pi only seems to have one available (GPIO hardware) PWM output, so I can't easily variably control more than one motor in one direction. I do already know of the following additional options 

You should be able to compile Chromium from source for ARM - there are some intructions on that here (probably) To attempt running a newer version Chromium, first install Chromium from the repos to make sure all other packages and libaries (e.g. ) are installed. Then run these command to download and extract the (currently)* latest snapshot of Chromium: