You seem to be confusing the ubiquitous network request/response concept with the application client/server response. In the network layers (OSI layers 1 to 4), everything is a peer-to-peer connection. Peers can query each other, and receive responses from each other. This is not a client/server concept. Each peer at layer-3 could ping the other peer and receive a response. It is a two-way street, and that is peer-to-peer. The client/server concept is an application concept. For instance, a web browser can request a web page from a web server, and it gets a web page in response, but a web server cannot request a web page from a web browser. It is a one way street, and that is client/server. 

That is incorrect. VLANs are to create separate layer-2 broadcast domains on switches, where, by default, the entire switch would be in a single layer-2 broadcast domain. A layer-3 device (router) is required to move traffic between the layer-2 VLANs, just as if the VLANs were separate LANs connected to different router interfaces. It is possible to restrict traffic between VLANs on a router using ACLs or firewalls. We live in a layer-3 world. It used to be, "Switch where you can, route where you must," but that concept is no longer true. Routers, including layer-3 switches, can easily have virtual interfaces for the VLANs, and that is very inexpensive, compared to physical router interfaces to isolate layer-2 broadcast domains, and network security is much, much more important than it used to be. Layer-2 protocols just haven't kept up with reality. In particular, STP, even RSTP, can be problematic. There are replacements, e.g. TRILL, that strive to eliminate the need for STP, but they are currently limited to data centers, and most are not inter-operable or are proprietary. Cisco has some best practices around layer-2 designs, including restricting each VLAN to a single access switch and using routing, rather than having VLANs spread across many access switches. The recommended best practices will virtually eliminate STP problems, e.g. broadcast storms, which can cripple a large network. 

You are forgetting the fact that the data must be fragmented on an eight-octet (64-bit) boundary. If you take the 1400-octet MTU and subtract the 44-octet header, that leaves 1356 octets for the data, but 1356 is not evenly divisible by eight: , but . See RFC 791, INTERNET PROTOCOL: 

If there is no RP for the second multicast group, the new multicast stream will not be routed because the routers have no place to send the stream. Based on the RP configuration in your previous question: 

If you connect them in a ring, you could also use the above command for the trunk interfaces between Switch 2 and Switch 3. 

There are a couple of diagrams which follow. The next diagram shows an EtherChannel among the ASA, and I think this text may apply to it: 

When you default an interface, it will remove all non-default commands. If you configure a non-default command, such as configuring PIM, on an interface, reverting the interface to its default will remove the non-default PIM configuration. That is the expected behavior. 

Switches operate at layer-2. They do not get into the frames to look at the packets (IP) or segments (TCP/UDP); all they see is the layer-2 frame header, and that is the basis for switching. Cisco switches don't do NAT, that is done on a router or firewall. Most modern switches do the switching in hardware, and very little CPU is used for this. Consequently, switches don't normally have powerful CPUs or a lot of RAM, but this is highly dependent on the switch model. I don't understand the need to grab the switch configuration every hour. This is not something that is practiced to any degree. If you insist on doing this, you could also grab the CPU utilization when logged into the switch, but it is doubtful you are impacting much. 

Your network devices (routers, switches, etc.) should be using NTP to keep their times synchronized. The primary benefit is for the logs and troubleshooting. When you look in the logs on your syslog server while trying to troubleshoot network problems, your job will be much more difficult if the times are not synchronized. 

R1 inherently knows about both networks because it is directly connected to both, but R2 has no way to know where to send traffic for the R1-to-R3 network, nor does R3 have any way to know about the R1-to-R2 network, unless you somehow tell those routers about the other networks. In fact, you could cheat, and use default routes: 

Unfortunately, you really aren't going to get what you want with today's Wi-Fi implementations. Multicast over Wi-Fi performance is pretty abysmal, today, but there are things in the future which hope to change this situation. Multicast over Wi-Fi will use the lowest available speed for multicast. The original way to overcome this is to convert multicast to unicast at the WAP. A Scheme Improving Performance of IEEE 802.11 Multicast Protocol: 

If the Fortinets are connected to the QFX via layer-3, then they are routing, and you don't configure gateways for routers. Routers learn routes in three ways: directly connected network, statically configured routes, or through routing protocols. If everything is connected via layer-3, then you run OSPF, and let the routing protocol handle the redundancy. The two WAN routers should have default routes to the Internet, and you inject those into OSPF. 

In addition to the VPN tunnel mode of IPv4, IPv6 has added a VPN packet mode, where the packet contents are encrypted. This allows end-to-end encryption without using a tunnel (encapsulation of the original packets inside tunnel packets). 

On Switch1, use descriptions on the interfaces. Also, you will also need a password on the VTY lines if expect to connect to the switch via telnet. 

We cannot tell you which image to use. That is up to you to decide, based on the features, bugs, etc. in each image, and you need to go to $URL$ to get the information on each image. The latest image is not always the correct one because as features are added, new bugs are often introduced. If what you have now works for your needs, then you could simply use that one. Your switch has what you need to remotely manage the device in a secure manner. As is, it supports TACACS+ or RADIUS authentication. It also supports SSH for connectivity. Cisco Catalyst 2950 Series Switches with Standard Image SW: 

If you connect a PC to the switch interface, you will have an access interface using VLAN 10, but if you connect a Cisco phone, you will get a trunk with both the access VLAN 10 and the VoIP VLAN 20. 

A traceroute through a tunnel only shows the tunnel endpoints. The packets, including traceroute packet, are encapsulated in outer packets, which don't have the TTL set the same way as the packets carrying the traceroute, and traceroute depends on the TTL for discovering where the router hops are. The tunnel fools traceroute into thinking the tunnel endpoints are directly connected. This sort of thing can happen with other protocols (e.g. MPLS), too. 

The reason for the 24 bits (really 23 bits) is the OUI which is assigned by IEEE. They guys who created multicasting went to the IEEE and registered the OUI for multicasting. The story I heard was that it cost $1000 (a lot of money at the time) to register an OUI with IEEE, but they didn't have all of it, so they went in with someone else. They then divided the OUI into two parts (the reason it is only 23 bits). Multicasting can only use half the OUI addresses because of this. (Apparently, the other guy didn't use his half for anything of note.) Remember the destination MAC address for multicast has nothing to do with any interface MAC address. A MAC address has 24 bits for the OUI, and 24 bits to identify the individual interface, per OUI. Multicast uses the multicast OUI and the last 23 bits are for the layer-2 multicast group number. It's true that 23 bits are not enough to represent all the layer-3 multicast groups, so that you have multiple layer-3 multicast groups represented by a single layer-2 multicast group. That is a whole discussion all by itself. 

Switches with multiple VLANs look like multiple switches, and they maintain separate tables for each VLAN. For example, a switch with two VLANs will have two MAC address tables, one for each VLAN. You do not get IGMP snooping to cross VLANs, and multicast doesn't cross VLANs unless you enable multicast routing. 

*This hold true for the data-link layer only if both hosts are are the same data-link LAN. If the network packet must cross to another LAN, each router in the path will strip off the data-link header, replacing it with its own data-link header for the next network through which it will forward the network packet. 

You cannot splice or otherwise extend a UTP cable that is too short. If a UTP cable is too short, you must run a new cable of the proper length, not to exceed the maximum length allowed (properly installed cabling will have a pull-string, or you could use the old cable for a pull-string). Splices, taps, couplers, etc. are expressly forbidden by the ANSI/TIA/EIA 568, Commercial Building Telecommunications Cabling Standard. Splicing the cable adds impedance and decreases the return loss. UTP cabling is limited to 100 meters. That length assumes up to 90 meters of solid-core (better performance, but fragile) horizontal cable, and no more than 10 meters of stranded (poor performance, but less fragile) patch cord combined between both ends. The frequencies used by modern networking require adherence to tight specifications.Each cable run must be tested to meet or exceed all the tests in the test suite for the cable category. Simple connectivity from end-to-end (like for telephone cable) is not sufficient. The high, modern networking frequencies require tight specifications to be met. The primary tests are: 

I don't really follow your argument. From your network perspective, the Shared Address is your public address. Your outside address (usually on your firewall) will be in the Shared Address space, then you can use NAT to translate your inside addresses to the Shared Address (your outside address). If the ISP has two customers within its Shared Address space, then those two customers may directly communicate using their outside (Shared Address) addresses. Basically, an ISP is using the Share Address space as its inside network, and you are connecting to its inside network as your outside network. 

You didn't actually connect two router ports, you connected two switch ports. The router has a switch module. You created a layer-2 broadcast storm. Broadcast is an essential part of ethernet. When a broadcast comes into a switch port, a switch must send it to all the other ports. When you connected the two switch ports, it created a loop where the broadcast was both going out all the other ports, and coming back into the switch, causing it to need to be sent out all the other ports, and causing it to come back into the switch, forever. This caused the switch module to be completely swamped to the point that other traffic would be dropped or slowed so much that the switch module couldn't be used. Ethernet headers don't have a TTL field like IP headers do, so there is no way to have the protocol itself break the loop. Layer-3 routing loops can happen, but they are somewhat self-limiting because of the TTL field, but they still cause major disruptions, too. 

What an unmanaged switch will do with VLAN tagged frames is unpredictable. Some unmanaged switches will drop the tagged frames, while some may pass them on. Unmanaged switches which pass tagged frames will pass them on to the hosts connected to the switch, and most end-devices cannot use tagged frames, and they will be dropped. In any case, frames from the hosts through the unmanaged switch will be placed on the trunk without VLAN tags, so all the frames will be part of the native VLAN, usually VLAN 1. This will place all the traffic in the same broadcast domain. A host connected to a trunk will usually not work since the host will probably not understand VLAN tags. Some servers can, but most end-devices do not. IP addresses have nothing to do with switches or VLANs, so changing IP addresses does not change VLANs. Switches and VLANs are layer-2, but IP addresses are layer-3. 

NAT is a problem with dual routers because the tables in NAT don't get shared between the routers. That topology will break NAT if the traffic is asymmetric. Asymmetric traffic will come from the WAN to the wrong router and get passed to the correct router on an inside interface instead of the outside interface, so it will never translate. EDIT: This is your drawing modified for what I mean. The link between the routers must be the best path from one router to the other. 

Often, you may want to use a loopback, since it will never go down, as the source because you may have a backup path to the other end. It is not always the right thing to do to use the exit interface since it could go down, but there is another interface which could also get you to the other router. Putting it on a loopback will allow the tunnel to continue to function, no matter if the best interface to the other end is up or not. 

As @RonTrunk pointed out, NAT translates from an inside interface to an outside interface. The router can source lots of thing from interfaces with the correct commands. You could create an access list of the addresses to translate, add a loopback as a inside interface in the access list, and try to source what you want translated from that. For example, some source commands: 

You don't actually have any point-to-point links. A hub is a layer-1 device, basically, a multi-port cable, while switches are layer02 devices which only deliver frames to where they are destined. All your links are shared links. Unlike hubs, switches don't forward every frame out every port. Switches learn which MAC addresses are on which ports, and they deliver traffic destined for a particular MAC address to the port where that MAC address is found. Also, unlike hubs, each switch port is a collision domain, and there will be no collisions on the switch, itself. You must also be sure that the switch ports are not configured for full duplex. Otherwise, you will get a lot of errors. Ethernet has no facility for retransmission for damaged frames; they are just dropped. 

IPv6, like IPv4, routing needs to have a route to the destination, even if it is only a default route, otherwise the traffic gets dropped by the router. Routing works the same for any IP version: the router looks at the destination IP address, and it tries to find a match in its routing table. Absent such a match, the traffic is dropped. You either need a default route from your ISP, or you need to manually configure a route to with a next hop as your ISP's IPv6 interface. Edit: Normally, your ISP should assign you a for your site, and you should set up IPv6 prefix delegation to assign your individual networks on your LAN. Some ISPs will only assign a , or, more rarely, a . The ISPs will not advertise any prefix longer than a , so that the addresses will belong to your ISP, but you can easily get a from your RIR. If you get provider-independent addressing from your RIR, you may need to use BGP with your ISP, or negotiate for the ISP to advertise your IPv6 network.