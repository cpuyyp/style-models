I've been trying to read up on a debug output I received with "FORUS FALSE" on it and tried looking online for that, and then I found just a little bit about a forus packet saying it's a packet destined for the router itself but I think I saw this output on a switch? I'm not able to find any solid information on this? Could someone please explain what a forus packet is and what forus false is supposed to be? Thanks in advance. 

So when enabling object tracking on an AVF for an ISP uplink (for example), while running GLBP on another interface of the router, we specify a weight range and tell the AVF that if object loses its IP reachability, the weight is dropped below a certain limit and if that is below the lower limit specified, that router can no longer be part of the GLBP process (or does it become an SVF?). I'm not even sure if my question makes sense but, why is this range even required? Is there any other use of enabling this range? If the uplink goes down, why not just directly take the router out of the AVF role, what's the need for checking with a range? 

Just for clarity I am assuming your layout is: Internet - FW - 10.1.1.0/27 - r1 - 10.1.1.80/30 - r2 - 10.1.1.64/28 You mention that you are running a routing protocol (RIPv2) on all devices. Assuming that includes the firewall and all things are configured correctly the firewall should have a route back to the other 2 networks (10.1.1.80 & 10.1.1.64). Can you confirm that you can ping these from the firewall? You state that you can ping all interfaces on both routers but you don't specify the source you are pinging from. You don't mention a default route in your routers so I will guess that is where the problem lies. If your routing protocol is operating properly your firewall is going to be a node hanging off of the 10.1.1.0 network. If you don't specifically tell R1 and R2 to utilize it as the default they won't. Here is a document on the Cisco website on the subject: Gateway of last resort. 

Now if I'm right, the metric seen on R2 will be 4. Since we set an inbound metric as 3 and +1 because R1 sent his update with a hopcount of 1. That's fine. Now for example, say I remove the access-list and offset list on R2 and add the following on R1's RIP process. 

So now, my doubt is, will R2 receive the update with a metric of 4 or will it receive it with a metric of 5? The reason I ask is because I've learnt that when you apply an offset-list as outbound, it sends the metric as it is configured while when you set it as inbound, it adds the received metric to the offset-list value. Also if we follow the logic that routers increment hop count and then send the update out rather than increment it on receiving an update, this should be correct. But on GNS3 and in a few other places, it says that R2 will receive the update with hop count 5 when by my understanding, it should be 4. Is this a bug in GNS3 or is it how it really works? I'm practicing everything with regard to Cisco 3700 series routers 12.4 IOS version. Any help would be much appreciated! 

I have configured a logical tunnel between my master-routing-instance and a additional routing-instance. I tested the same config (except IP addresses) on my lab-system and on one of our other core-routers => Working! But on this router, it doesn't work and I can't see the differences. I have configured the tunnel-services for this fpc (fpc 0, pic 3) like this: 

Not sure whether you this might help you: $URL$ For me, it sounds like you're trying to build a source based routing. Another thing: $URL$ (PBR - Policy Based Routing / FBF - Filter Based Forwarding) I think one of the above papers should help you. Kind regards, Flo 

I'm a little bit confused and pretty sure it won't work. But a mate and me are arguing for so long now, I decided to ask you. Imagine a PFSense Firewall with 3 Interfaces. 2 different LAN-Interfaces 1 WAN-Interface Behind one of the LAN-Interfaces is a Server. Its IP is NATted on the PFSense to a nonRFC1918-IP. Behind the other LAN-Interface is another Server whose IP is NATted on the PFSense to a nonRF1918-IP. For communication via WAN we have proxy-arp configured with two different IP-addresses for the two servers. Now I want the first server to communicate with the other Server without knowing its private IP. So I tried building rules on LAN-side which allow traffic from 1st Server RFC-1918-IP to 2nd Servers nonRFC1918-IP (the proxy-arp-IP). As expected...it doesn't work. Does anyone know a solution for this to work? I know that the servers could communicate via their private IPs...but it's a must have because of PCI compliances and things. The system should be out of PCI-scope, so it's the only way to get it to work. Hopefully Flo P.S.: If it's not clear enough, maybe I can paint a picture for you ;) 

Shortly someone will tell you that questions about home networks are off topic and will give a link to the rules for this forum. However, an Ethernet's link speed is always predicated upon the device it is plugged into at the physical and MAC layers. The IP (network) connection to some other device has no impact on your link speed. So, if your switch is Gigabit and the machines plugged into it have Gigabit interfaces then they should negotiate a Gigabit link speed. As you mentioned your router being FastE will negotiate a FastEthernet connection with the switch. Your wireless devices with always negotiate some link speed within the capabilities of whatever 802.xx protocol you are utilizing. 

If I understand what you are asking for then you could do the following: Create 4 different vlans in two different switches trunk them over the one cable that you have available. Architecture would look like: ---4 Ethernet connections - switch(A) with 4 vlans - single Ethernet trunk connection - switch(B) with same 4 vlans - 4 Ethernet connections --- 

Within the same LAN segment? No. Between LAN networks, you can see the same IP address. But within that network, all the IPs have to be unique. So in Site A you've got a LAN with IPs 192.168.1.0 - 192.168.1.255 And in Site B (connected to site A via a router with NAT enabled on it) you've got a LAN with the same IPs - 192.168.1.0 - 192.168.1.255 This is possible. But within the same network, having two hosts both with IP 192.168.1.1 is not possible, it will clash. NAT is mainly so that you can use the same private IPs between sites. Just imagine if for site A we could use 192.168.1.0-255 and for site B we had to use 192.168.2.0-255. And similarly for site C,D,E... you didn't have the option to use 192.168.1 or .2 subnets? That'd lead to a lot of waste in terms of usable IP addresses wouldn't it? Hence, NAT allows same IP ranges to be used between segments. But no you definitely, not with NAT or anything for that matter, have two hosts on the same segment both with the same IP address. It has to be unique. Hope it helped! 

The preamble is simply a series of 1s and 0s that signal the start of a packet. At the end of the preamble is a sfd (start frame delimiter) that signals the actual start of the Ethernet frame. The very next byte is the beginning of the destination MAC address. So yes the synchronization bits (preamble) are on the same signal path. 

Until you set a route in your PCs they don't know what to do with the packets. Type "route print" in a command prompt of your windows PC. You will see a route to your local network but no route to anywhere else. Once you set the default route then the machine knows where to send packets. 

To permit a range of IP addresses you need to apply the proper inverse mask. The concepts are covered in Configuring IP Access Lists. However your range of addresses is dictated by the mask you choose. You cannot pick a range that crosses mask boundaries like you are requesting. So an ACL for a range of 100 addresses could be 0.0.0.127. Example: permit ip 192.168.1.0 0.0.0.127 This permit statement will give you the number of addresses you require but it dictates that the available range is 192.168.1.1 - 192.168.1.127. If you absolutely must use the range of addresses that you laid out you could permit in several smaller masked ranges. For instance - permit ip 192.168.1.128 0.0.0.63 

I don't know if this will help, but when I want to add similar lines to various devices, I connect to each device on various tabs in SecureCRT and then at the bottom there's a window that provides a "chat to all tabs" capability. I use that. 

In a frame relay multipoint topology where the routers are running RIP, we know that RIP by default keeps split horizon on with IPv6 and we go into the RIP process an use no ip-split horizon to disable it. But my question is, what command do you run to check whether split horizon is enabled on disabled on that interface with IPv6? Much thanks! 

How is 2^11 = 121? Firstly, 2^11 = 2048. The formula for finding the number of valid hosts are (2^n)-2 which is 2046. The 2 being the broadcast address and network address. In the example you've given, 10.0.0.0 is given as the network ID. Since the mask is a 255.255.248.0 one, it means that the hosts jump in terms of 8 hosts, and will have 32 subnets. The broadcast ID of the first network will be 10.0.7.255. So the network ID of the next subnet will be 10.0.8.0, while it's broadcast ID will be 10.0.15.255 and so on. You're not clear with your logic of subnetting. Please watch a few videos on how to subnet. I suggest this one and the rest of their series. 

It might be helpful for you to start a packet trace (with something like wireshark) you will see that the first thing your local machine does when you issue the ping command is broadcast an APR packet (assuming it isn't already in the arp table) to the IP address you are trying to reach. Example: 

Short answer is no. The piece of hardware you are referring to is called a PoE injector. It is designed to sit between your network and a the device needing power to inject power for that one device. Non PoE switches do not have the circuitry to pass this electrical current to all ports. So reversing a PoE injector and attempting what you are surmising would probably result in a dead switch. 

I think the easiest way is going to depend on the capabilities of your switches. If they have SFP ports then the easiest way would be to install the correct fiber module and connect the new fiber port in your switch to your existing fiber with a patch cable (pay close attention to connectors). If your switches are void of such technology and you don't have the budget to procure new ones then you are relegated to media converters. (Keep in mind, media converters are a stop gap measure.) Single fiber optics I believe are not very prevalent, so sticking with your desire for easy I would not pursue them unless you are low on available fiber and desire to preserve what is left. 

I have a switch that is counting "output errors". A "show interface gi1/0/46 controller" shows up "2963657 Excess Defer frames" but I really can't find any documentation about "excess defer frames". Can some one tell me what kind of error this is and what circumstance can cause that? Hardware is WS-C3650-48TS, Software 03.06.05E. Do you need any more information? Thanks in advance, Flo 

Now I expected to be able to ping from the routing-instance into my master-instance like this: But it isn't working. Has anybody a clue? P.S.: When I ping from master to routing-instance, the output-bytes counter of the lt-end in the routing-instance increase, what means that the routing-instance replies with echo-reply-packets. But the input-counter of the lt-end in the master instance doesn't receive them as the input counter does not count incoming packets.... Thanks in advance! 

The Cisco support forum seems to indicate that this switch is pre-standard and therefore doesn't support AF or AT. 

pfsense will bridge. Seems to me the easiest route would be to isolate the two machines behind your pfsense box and bridge the outside interface with the inside. No reconfig of IP yet you have the separation you desire. You could even do some port forwarding if you wanted access to your server from the outside LAN. 

Once your local machine has the MAC address of the device your trying to reach it then assembles an ICMP (ping) packet with the destination MAC/IP combination. So your correct that the destination packet is a particular IP but that packet is then wrapped in a MAC frame and sent. Hope that helps. 

Short answer is no. Link speed and duplex negotiation is between a NIC and a port on a network (usually a switch port) not with the network itself. Collisions can only occur once you have established your connection to the network and are attempting to transmit a frame.