So if I put in a fake password, it knows that it's the wrong one, and doesn't go any further, but when I put in my real password it looks like I'm missing some kind of link-up between the authorization engine and the XML engine. If I take out the aaa authorizaion exec default local, I get a slightly different error: 

In IOS-XR, there are different concepts of authorization than in classic IOS. In classic IOS, there's only command authorization, which allows or denies specific commands, typically sent to a tacacs+ or radius server. In IOS-XR, there is command authorization (aaa authorization commands) (but you're better off doing this via task-groups) and exec authorization(aaa authorization exec) , which controls who can actually start an exec session. It appears that using the normal access method (ssh/telnet to the vtys) that if you're authenticated, no other authorization is necessary, but if you start the XML agent on its own dedicated port, then that use must be authorized. In my particular case, we are using a TACACS server for authentication, and I was specifying to use local authorization. The username does not exist on the router, so using the local method 'aaa authorization exec default local' caused authorization to fail. Changing it to 'aaa authorization exec group tacacs+ local' caused it to get the 'authorization OK' from the TACACS servers, and all is well. 

With your setup, the configuration looks fine and packet-tracer tells you that your static NAT for DMZ Web_Server is good. To test this out, put a laptop/PC in the network 192.168.1.0/24 between ASA outside interface and ISP router inside interface (you may need a switch here), then access the Web_Server at or using ... 

In this setup/lab, ASA2 is not an actual dynamic peer as you have static IP address configured on outside interface. therefore, you need a static default route on ASA2, and the same on ASA1. In the real world/scenario, when ASA2 is a dynamic peer (dynamic IP address on outside interface), ASA2 will/should have its own default route thanks to the command or . 

Please contact Cisco TAC and local Cisco reseller for further advice. AnyConnect 4 Licenses will display as AnyConnect Premium licenses when you issue a ‘show version’ command. simply means the maximum number of concurrent SSL VPN, Clientless SSL VPN, and IPsec IKEv1-based remote-access VPN peers/sessions that can terminate on your Cisco ASA platform. And you are right, that is your limit. More information you can find on Cisco Support Forum and here Also from Cisco AnyConnect Ordering Guide (03/2017): 

There are some platforms like my "favorite" 6500 which can have strong negative reactions to some types or amounts of traffic that is just fine being completely switched through the router becomes a different story once you create a SVI. typically this would be non-ip traffic, but its very hard to predict. 

There are several references to backpressure as regards to the internal bandwidth and switching fabrics of routers and switches. What exactly does backpressure mean, and what are the real world ramifications? 

And this would run 'generic-policy' in the middle of the 'test' route-policy. However, it looks like XE uses route-maps and not route-policies, so unfortunately that capability isn't available to you. route-maps in XE appear to be discrete objects and you can't chain them in that way. 

If you turn on inbound soft-reconfiguration on the neighbor in question, then you will see another entry in the list with the pre-policy communities on it. 

ISP --- Firewall --- Inside network I often see this in networks at SMBs, and mostly you do not own a public IP range but your ISP does. 

1 What you did is NOT enough. You have to ensure VPN configuration is updated for the additional subnet (172.20.0.0/16) at BOTH ends. To be specific, the following points need to be satisfied: At your end: 

Your understandings are correct! One thing you also need to pay attention to is the type of interface we use in each case: 

The issue is: you applied a wrong profile () on your . The correct profile is (without 'WLAN' word in betwwen) as defined. In addition, to ensure your policy is working properly, try to access/open the URL of blockmessage.local (on BOCK-URL-SERVER) directly from your untrusted clients. I hope it is helpful. 

I know the API guide linked is the 4.1 version, but I can't find the 4.2 version of the same document. Also, the XML tty agent (i.e., typing 'XML' at the # prompt) does work as expected. 

There are some odd corner cases you can do with wild card masks that are difficult to do with subnet masks - for example, you could do 1.2.*.4 easily in a wild card mask that would be hard to do in a subnet mask. How practical this is is left up to the operator in question. Basically a wild card mask splits up each bit into a 'match' or 'don't care' setting. if you have 255.255.255.33. for example, that would translate to '11111111.11111111.11111111.00100001'. If the original IP was 1.1.1.200, this translates to 00000001.00000001.00000001.10001000. Using the example given, which is starting to make my brain hurt from doing binary math, only the 3 and 8th bit of the last octet would have to match the original IP in order to be a pass (along with the other 3 octets). 

Add a route for additional subnet. I do not see a route for 172.16.0.0/16 in your configuration, so I assume you have a default route. Otherwise, if you have a route for 172.16.0.0/16, you have to configure a similar route for 172.20.0.0/16. 

What you are concerning is about IP split horizon on Frame Relay. However, you should NOT have this issue as you are using multipoint physical interface Frame Relay on R1 and split horizon is disabled by default, BUT it could be the problem with packet-tracer IOS or the IOS version itself. The best way of verifying is to run the following command on R1 

Your output looks strange as I do not see Encryption Domains (Local and Remote subnets) at both end. Indeed, your Encryption Domains are also your VPN IP peers (10.140.134.50 and 192.168.1.10), that is incorrect! When see only encaps/decaps packets at one end, it is likely an issue with routing, thus return traffic cannot hit Firewalls/Routers for being encrypted. You can try initiating traffic from Router end and see whether the traffic is encrypted (encaps packets counters). 

Unfortunately on IOS the show advertised command has always showed the attributes of the route pre policy. It will drop routes that were denied but the attributes are the original ones. Instead I recommend setting up a bgp session to another one of your devices, turning on soft reconfig inbound and denying all routes. This will let you look at the attributes of the sent routes. You could also try a debug, but that might be a lot to go through. 

I'm trying to configure the dedicated XML agent on IOS XR 4.2.3 (ASR9K) . The API guide says to do the 

There are several interface counters that don't work as well as they used to. Sometimes this is because the chassis/router has a 'fast' switching mode (CEF, or something else), and that particular 'bucket' never gets hit. Another reason might be that that particular counter only works in L3 mode instead of L2 mode. This kind of stuff is quite common, unfortunately on cisco products, particularly on the 6500 which has an enormous amount of legacy code/architecture weighing it down. 

The best way is to request a network downtime (non-production or off-business hours) and test your network with different cases. Note that EIGRP provides very fast convergence. 

I believe that is because R1 does not have a route for network 192.168.1.8/29 (where you have R0's f0/0 interface, PC0 and PC1). Therefore, R1 does not know where to return the traffic to PC1. PC1 has the IP 192.168.1.11 with default gateway 192.168.1.9. It can ping 192.168.1.1 because this IP is on R0 and R0 know where to return traffic to PC1 (f0/0 directly connected network). Simply add the following static route on R1 and try again: 

On ASA2 (dynamic peer), you did not set the VPN peer - 10.0.0.1 in your . Please try the followings on ASA2: 

I am afraid that the interface f1/0 (with IP 200.100.30.252/29) on R2 is NOT really up, causing the issue. Please check it again. And please use the next-hop IP addresses for all static default routes The configuration on R1 looks good as I used that to reproduce the following case and I can ping both IPs 200.100.30.251 and 200.100.30.252 from R3.