I have some code in C# I'm trying to move to a stored procedure - Sql Azure does not like multiple calls. So everything needs to get moved to a proc. Here's the C# code: 

Using Azure Sql Server, and in C# if that's relevant, is there a way to get an event when data in specific table changes? In one table we need an event if any column changes in a row. In a 2nd table we need an event only when either of 2 columns change (although any change would be ok). And we need to know which row. Is it possible to do this? If so, how? Update: We need a call into our C# code for this event. A database trigger where the database can do something doesn't help, our program needs to take action on a change. thanks - dave 

I'm trying to work out a way of listing the drives that a particular instance of SQL Server is "aware" of, and understand the process. I can run which gives me a list of drives, but when I look in the GUI (Eg. Databases | Restore Database | From device | Add ) the list of available drives is far fewer. By what process does SQL server become "aware" of a drive and is there any way to problematically determine the drives it is aware of? Thanks in advance! 

So, my working theory is that the transaction isolation level used for the conversation is not supported. But where is this set and how can I change it? I've read about a similar problem here: $URL$ and $URL$ 

I am automating rebuild and reorganise indexes using T-SQL. I run into problems with indexes that cannot be rebuilt online. Primarily this happens because ntext/nvarchar columns are included. Is there a way to programmatically identify them as part of this statement? So kind of addition to the WHERE predicate 

We are setting up a new SAAS application on Azure and while we have used Azure before, not at this level of multiple apps, etc. We plan to have both a web app and a cloud app in both a US and EU data center. They need to hit a common database because requests will go to the closest data center via traffic manager and a lot of the data works off of the customer table. And a customer (company) can have users in both the U.S. and E.U. Is there a way to set up Azure Sql Server so it has instances in both data centers, and Azure keeps them synchronized? If I understand sharding right, that is not what we need as someone hitting either data center could be requesting any of the data in the DB. thanks - dave 

I can not understand or visualize how this is formed in the HD. I think that 4 * 5 = 20 physical files are created. Is this correct? And what data are stored together? Is there a "clustering" of 2008 dates for all customers with the same hash? I am confused on that. Also I am confused how the data are fetched. Is the customer_id hash used first to determine the range partition or the opposite. What are the exact steps to fetch the data? UPDATE Another example. I did the following: 

When using triggers, if an update is done to a table then a trigger is executed. This is very convenient. But what I would need is to execute an external script. Is it possible to configure MySQL somehow so on a trigger/change of a value in a table an external process/scrip is executed? 

I've inherited a situation where I have SQL Server 2005 Standard 32bit running on Windows Server 2008 R2 64bit. When I come to install SSRS components I'm warned that "Failed to find the ASP.Net Version Registration with Microsoft Internet Information Services (IIS)." In IIS 7 and above, each application pool can run in 32bit mode. If I change all application pools into 32bit mode will this solve the problem? Are the better alternative solutions? Thanks in advance. 

In the end I used datareader and datawriter roles to give access to the data. Then granted VIEW DEFINITION with the below proc. Will need to remember to maintain this... Thanks all. 

I'm investigating a problem with query notifications. The platform is SQL Server 2008 R2 (SP1) - 10.50.2500.0 (X64) Standard Edition. .NET errors show a problem reported from SqlNotificationInfo Enumeration ($URL$ ) as: Event Reason: Isolation. During tracing I notice that the audit login event immediately preceding the Broker conversation shows: 

Can someone please explain why the delete shows a different number of rows than the count? I am using the same join. Are they not equivalent? 

These block each other but not always! I can not understand this. These refer to different rows why do they block each other? 

Now if this snippet runs concurrently by 2 transactions, T1 and T2 what will happen? I know that in MySQL by default the isolation level is . So let's say that amount initially is 500. So when the 2 transactions finish will the final amount be 300 or 100? I mean when they start both read from table which I guess is a shared lock. When one updates the table it gets an exclusive lock right? So what happens to the other transaction? Will it proceed with the amount it "view" when it started i.e. 500? 

I have a SQL server cluster that is often reaching 100% CPU out of working hours. I want to gather some information to help troubleshooting when the actual condition is taking place. I'm thinking of gathering info from sys.dm_exec_requests for example. Question: How can i trigger this information gathering to take place based on CPU utilization condition For Example: Insert the results of sys.dm_exec_requests into a table when CPU > 95% suggestions for anything else I should gather are very welcome! It appears that I might be able to do this with alerts, but I need to better understand the counters as my example doesn't fire, despite CPU >5% 

I've been tasked with identifying any blocking happening on a production server. My plan to achieve this is to use 

In combination with a server side trace to collect a Blocked Process Report. I understand that this activity will incur a performance hit, I'd like to find some way of quantifying what this will be.