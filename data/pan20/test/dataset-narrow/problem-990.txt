In any version., you can use this type of formula to AVERAGE non-contiguous cells without zeroes (assumes positive values only) 

Now convert to text by doing this Copy column B then right click and use Paste Special > Values > OK Now convert to a formula by doing this Select column B and use Data > Text to columns > Finish 2.Use this formula in B1 copied down 

If you try to change the format of a date (or any other value) and it doesn't actually change then that's a sure-fire way to know that the data is text formatted. A definitive check is to use function, e.g. with "date" in G2 use this formula 

Assumes data in A1 If the number might be longer than 5 characters then extend the part If you want to avoid error if ABS isn't found then try wrapping in IFERROR function 

You can get the correct difference in minutes using MOD function, e.g. to get 10 for a 10 minute difference and 71 for one hour 11 minutes you can use this formula [revised] 

If the column E values are in E1:E7 then try selecting column A and applying this formula within conditional formatting (use the "use a formula to determine which cells to format" option) 

With a named search range you can do the same with OFFSET, i.e. with Fruit as the named range =OFFSET(Fruit,MATCH("Bananas",Fruit,0)+2-1,0,1) Where +2 defines the "offset" 

so you can select a range of 21 cells to display all those values - such formulas need to be confirmed with CTRL+SHIFT+ENTER after the entry range has been selected 

Format both of those cells with this custom format m/d/yyyy;; make sure you include the two semi-colons at the end Now select both P2 and P3 and drag down the column until you get blanks 

From your last comment I'd say your values are definitely formatted as text, will return 0 instead of #DIV/0! for . It's not always easy to see if values are formatted as text but two options are: 1) Try to change the format to "Number". If you see no difference then you have text values 2) Use a test in another cell, e.g. - I suspect that will return FALSE here To change the format to a numeric one, when you have text values, is not possible with cell formatting. You can try using "Text to columns" functionality to do so, just select the data, F3:F7 and then do this: 

where there are 3 rows that match the time conditions.....but all for the same user (), so the function returns 9 (the position of the first "CT" entry in ) for all three, so then gets 3 values in the same bin, so the formula resolves to this: 

function makes this easy to do. Let's assume that you don't want to reference any columns further left than column (adjust as required) and that the start cell for the first formula is (adjust as required) then you can use this formula in copied down 

formula needs to be confirmed with so that curly braces like { and } appear around the formula in the formula bar 

confirmed with CTRL+SHIFT+ENTER and copied down the column Explanation: This is a common technique used to get a count of different values in one column (in this case users) where some criteria are met in other columns (in this case that the latest start time/date is between the start time/date and end time/date in other columns). The "data array" for is the result of the function for the rows where the time criteria are met - and will find the first matching value, so where you have repeat users returns the same number for each (and you get for rows where conditions are not met) The "bins" consist of all the possible results for (1 to 15 in this case), so if the conditions (that the time band contains the latest start time) are met and the user is the same, the same number is returned in the data array and it goes in the same ......so it's sufficient to count the number of bins which are >0 to get a count of different users. Specifically for row 2, for example, the data array becomes this: 

Is there a column with the names? Assuming Sam/Heather in A2:A100 and Y if complete in B2:B100 then you can get the total tasks for Sam with 

That makes A1 and A2 into the top row and A3 and A4 the bottom row - if you want A1:A2 to be the first column then swap A2 and A3 

LOOKUP is fine as long as B1 exists in F1:F39 (and because F1:F39 is sorted ascending), but what if B1 is 120? Your formula will return . If you want in that case (as you would get with your MATCH function) then better to use , i.e. 

That looks for the first non-blank value in alternate cells, AO3, AQ3, AS3 etc. that doesn't match any value found in EK3:EX3 Revised suggestion: OK based on your comments, I'm assuming that you still want non-blank data from alternate cells so with data in AO3:EI3 and with EJ3 blank try this formula in EK3 copied across to get the next different value 

You can then copy that formula down the column The 9 indicates the 9th column of the range Sheet3!D$2:L$30000, because that's the column from which you want to return a value (the match is always done with the first column of that range). VLOOKUP with FALSE as final parameter only returns exact matches or #N/A (although it's not case-sensitive) 

You have criteria in columns and rows. For that type of setup you can't use , but you can use an "array formula" like this: 

.......but that version would need to be "array entered" - i.e. confirmed with . It's a little more inefficient than the previous suggestions, using the whole column (and that doesn't work in Excel 2003 or earlier - in those versions you need to use a specific range). Note that MATCH with "match type" of -1 as per Chris' suggestion needs to have descending values in column B - this formula works however column B is ordered. 

You can use an extra function around your existing formula, e.g. for your scenario change the formula in to the following 

that gives a list of start dates of 15 day periods (or whatever you define in D1) Now for the quantity in that period use this formula in E3 copied down 

If you have a collection of non-adjacent cells like A2,C2,F2,H2 and J2 containing positive numbers or zeroes then this formula gives you the smallest non-zero value 

also confirmed with CTRL+SHIFT+ENTER Use of is a little arbitrary - that value should be greater than the combined length of all the qualifying strings 

I assumed that you use ; as argument separator in formula but that's region-specific, use comma instead of semi-colon if required 

That will give you a one for all rows where the organisation has any rows with a 1 flag, 0 otherwise 

You can't use wildcards when comparing with = so you need LEFT function in SUMPRODUCT formula like this 

That latter version will work with "A" and "A*" because * is not treated as a wildcard in that formula. Assumes Range1 and Range2 are of data 

Wildcards only work in function when the values are text formatted (not numeric). Try using like this: 

If the existing Year, i.e. 102, is alway 3 digits then with data in A1 convert it to required date with this formula in B1 

There are two different ways that your formula might return #VALUE! error here, depending on how you are trying to employ it: Firstly if you have a formula which returns an array of values then it makes a difference where you put the formula (if not "array entered"). Put that formula in A10 (not array entered) and you see the value from A8, put the formula in B10 and you see the value from B8, put the formula somewhere other than columns A and B and you get #VALUE! That's standard behaviour in Excel for these type of functions. Secondly, if you try to "array enter" the formula in a 2 cell horizontal range to see both values (as chuff suggests), then you also get #VALUE! error which is caused by ROW function. That happens because ROW() returns an "array" (even when it's a single row like here) which some functions don't process properly - you can see that if you highlight ROW(G6) and press F9 key - you see {6} rather than 6. The solution is to either use just 6 in the formula or, presuming you want the flexibility provided by ROW, you can wrap in another function, like SUM, e.g.