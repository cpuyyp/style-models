So think of this like a row entry in the table, and we've picked out column 1 from the row, which is ipNetToPhysicalPhysAddress. So in this particular entry, the part is the index of the entry. The 1 is the ifIndex of the interface that the ARP entry is learned on, 'ipv4' is the ipNetToPhysicalNetAddressType which is one of these: and finally, the IP address of the ARP entry, 10.200.17.34. These three things make up the index for that entry. Then the value for ipNetToPhysicalPhysAddress at that specific index is the MAC address . 

2) The 7204 is not announcing anything - it's only meant to receive prefixes. Anyone care to shed some light on what this means? Is this normal/expected output? A google search only yielded me one tidbit of information pulled from CCO: 

In most modern versions of IOS (since 12.2(8)T - thanks @ytti) BGP synchronization is disabled by default (and shown in the running config as such, ie shows up in when you turn on BGP). As to which IOS version they decided to make it a "hidden default", I'm not entirely too sure, but you should be able to do: 

Move the second ISP connection to one router on your side. Both you and the provider configure on each of your sessions - you don't have to use Lo0 if you don't want to, as long as you guys agree on which address to static-route to. Configure 2x /32 static routes to each others' loopbacks via the connected interfaces (or next-hop IP's) - this is how the load balancing works, as it's really just ECMP. Configure on each others' sessions (You want to keep this number as small as possible to avoid TCP session hijacking). 

Just a suggestion, as I don't understand at this level too much but could you not create virtual interfaces on those routers, assign them alternate IP addresses that are not the same and then do some funky IP-routing/NAT-ing to get them to communicate? 

You will need to log on to the switch via console cable (light blue with a serial port on one end and an rj45 on the other end- you can buy USB adaptors for it if you don't have a serial port on your PC/Laptop). In my experience you when you first start a fresh install/config of a device you will have to set SSH access through the line vty transport input telnet/ssh command. You will also need to create and open a VLAN, assign that an IP address then 'noshut' an interface, chuck it in a VLAN. You can connect a cable to that that port and then connect via putty using ssh to the switch using the IP address you assigned the VLAN. Hope this helps. 

I have a project on my radar to move my works current 10mb line to a new 100mb line. Both lines come in through an ADVA box and are connected to a cisco 1921. The 10mb is currently connected to the 1921 router but the 100mb is not - the cable is ready to plug in when the time is right. We have a checkpoint firewall also. The jobs I have outlined I have to do to ensure this transition flows smoothly is the following: 

Yes. Assuming there is only a single VLAN configured, switches (aka transparent bridges) will forward L2 broadcasts to all other network segments, except the segment that originated the frame. Similarly, L2 multicast traffic is treated as "unknown unicast" and is also forwarded to all other network segments. And while I hate to be that guy, you could have had the answer to this with 10 seconds of googling, so I downvoted the question. 

I don't understand your question either, and it's probably because I believe you're operating under incorrect assumptions. Let me be clear - your provider doesn't care about you trying to NAT traverse to make your Skype calls better. They care about making money, minimizing outages, and lowering their transit costs if they're not tier 1. That's basically it. The "large scale" or "carrier grade" routers you're referring to have very little to nothing to do with NAT or "picking ports". Even routers that are directly upstream of the router in your home (or the the Winn Dixie), don't care about NAT. The whole point of NAT is that your end device doesn't know it's being NATed, and the carrier's edge router doesn't care - they see a destination IP address and a source IP address which they have allocated to you, and they want to get those packets off of their network as quickly as possible. As Ron has said, NAT was designed for address preservation/conservation and "mobility" in mind, so that customers at the edge of the carrier's network could make the most use out of their allocated address space. Most routers at the "large" scales you're referring to are not deployed in production networks with design considerations that involve doing any kind of NAT, they're implemented for their FIB/RIB capacity, port density, type of interfaces available, TCAM size, backplane speed, etc. etc. The finger pointing regarding the port selection need not be at the carrier and their equipment, it needs to be squarely at the client initiating the connection and its upstream first-hop L3 device that's performing the NAT. So if your question is, "why don't the clients pick easy to guess ports?" (or say sequential ports), the answer is many implementations had done just this when choosing an ephemeral port: "take the last currently in-use port, add one, get new ephemeral port" However, you need to understand that choosing an ephemeral port isn't only something that the client has to care about - a "collision" would occur in the following scenario (somewhat simplified and contrived): 

I have a new 100mb line at work that has a 80mb(MPLS)/20mb(Internet) split. I just want to confirm my understanding of this. The MPLS connects us to our HQ in London and with the current split that gives us 80mb of bandwidth to our other offices, does this 80mb also provide any bandwidth for internet access or is that 80mb only for access to our other offices? 

Looking at the above is there anything else I need to be aware of when crossing over to a new circuit and getting a new external IP? Any thoughts would be much appreciated. 

When your PC is turned on, it uses the DHCP protocol to request an IP-address and network settings. Every time a packet is then sent from the computer it will send it to the default gateway of the router. The router is not consistently pinging out 'hello im here' more like the host will direct traffic when it needs to. - Hope this clarifies it. 

this is going to sound really dumb, but I've forgotten how to connect and manage a switch if the console interface is serial and the other end is an RJ45. The switch I'm working on is a Brocade FWS 648G 48 port switch and it has a serial port as it's console interface and the RJ45 goes in my laptop - obviously this doesnt create a COM port ( Do i need some kind of converter to USB? ) Anyway, usually on older laptops I remember using hyper terminal but they took this away on windows 10. Just a question really on how any of you manage a switch like this ( im used to cisco where the console port is the rj45 jack and the serial end has a serial to usb adapter on and use putty). Again apologies for the dumb question, thanks in advance. Here is an image to show what I mean - $URL$ 

There are a couple of ways to do this on the cheap (the exercise of research and/or implementation I'll leave up to you). 

Talking about terminology you've really already said transport which I think is what that type of service is most commonly referred to as. Sometimes folks will also refer to it as a "tether". You have another option of moving the interface on your side to the same router and then setting up eBGP multihop*** between you and your provider. Yes, you lose redundancy on your side, but on the opposite side it's going to the same router anyway, so that's kind of a moot point. This also eliminates the need for the provider to do eBGP multipath, in case they're not willing to do that with you (but I've found that in general most providers are fine with turning this on, if it's not turned on already). If that doesn't seem plausible then announcing two /25's is likely your best bet, unless of course your provider is willing to turn on (again, assuming they haven't done so already). ***Doing load balancing with eBGP multihop in your scenario will involve the following: 

As long as whatever routable address space either network is using on the "External" side is unique, yes, the "Internal" address space may overlap.