This is the setup, now what's happening? When inside the network you will use your internal DNS resolver, and when resolving the DNS server will respond . This address is of reachable and everything is fine. Now, when you manually set your DNS server to google one, , and you ask for , you will get and not So your browser will try to reach the external IP address of your company router from the internal interface. Since the NAT rule apply only to traffic coming on the external interface, this fail. When you set your computer to DHCP (I suppose this is what you mean by "make the IP settings automatic"), then you receive the correct, I.E. internal, DNS server address and it works as intended. 

Unless you have a specific agreement with your ISP and the whole path is under the control of you and your ISP, no there's no QoS on the Internet. All Internet router will simply ignore all QoS markers on your packet. If you have a tunnel, then you can discriminate between the different flows that pass through the tunnel and give priority to some traffic. 

To answer the question precisely we would need to know the web site address and the result of DNS resolution test toward this name (using nslookup on Windows or dig on Linux / Mac OS) This may due to a split DNS scheme. This scenario could explain your issue: 

In , , an MST region appears to the external world (another MST region, a 802.1d or 802.1w switch) as a single (virtual) bridge, using its IST instance. What is the priority of this virtual bridge? How do we configure it? What need to be configured on all members of the MST region to ensure this MST region virtual bridge will always be elected as root bridge? 

In this configuration the client machine will have directly connected route in its routing table, for both networks. Those route are of kernel type and will always be preferred over other routes you could set. So whatever your configuration is, the traffic initiated on this machine destined to 192.168.2.1 will always be considered as local and will never exit trough eth0. I doubt you could change Ubuntu routing decision on a kernel type route, but who knows? You may use a software that will generate the traffic sending it trough eth0 irrespectively of the machine routing table Even if you do so, the answer will not pass trough the firewall, since the answer will be directd to 192.168.1.1 which, once again is a local address. or You can setup on the client machine a virtual machine, and configure the 192.168.2.1 IP address in this VM, then set on the client machine a route to send traffic destined to 192.168.2.1 via 192.168.1.2 Regarding the pcap replicator I don't get it... 

the rfc6864 - Updated Specification of the IPv4 ID Field precisely address this issue. Extract from this rfc: 

So if you want to listen to the traffic you must filter on both answers and responses that have different destination IP and port. Most packet sniffers (TCPDump , Wireshark...) can filter traffic on the IP on port without specifyin if it is source or destination. I.E. 

I would assume that this is because the O in OSI stand for "Open". Networking is about communication between many different kind of devices. Using the word "computer" would be misleading, because the OSI model can be applied not only to computers, but to any kind of devices that is able to communicate over the network (routers, manageable swicths, automates, sensors, industrial machines...). So they had to choose a term to describe any device using the model. The "system" word fit and is vague enough to cover all cases, and so to describe a system compliant to Open System Interconnection, the use "Open system" (which is shorter and more practical that "OSI compliant system") only a guess tough, I don't think you'll get an authoritative answer from anyone else than the authors. 

Note that the purpose is to use the Nexus as gateway for a bunch of VLAN with HSRP (also there will be 8 switches 2960X used as TOR, each with a VPC to the Nexus). HSRP is not configured yet as I want to have a working VPC configuration first. Here are the configurations: (all 3 switches are factory default settings apart from the configuration bellow, all interfaces not shown have no config at all) Nexus 1 

It's possible using Policy Based Routing (PBR). But the fact you have 2 interfaces in the same network makes it difficult because you cannot choose witch interface the router will use to reach the next-hop and you can only specify it by IP (and not interface) in Vyatta PBR. Why do you have both interface in the same LAN? It will cause many issues. At least you could have one interface with IP in the 99.99.99.0/24 network and the other interface with IP in the 1.1.1.0/24. Even if both are actually in the same network segment that would dramatically simplify the configuration... Edit : OK misunderstood where the 1.1.1.0/24 was placed. The question remains... why? This is not a good setup. Whatever the reason behind having 2 interfaces in the same IP network is, there should be a better solution. In this configuration I don't see how to achieve what you want. If you set another network between Vyatta eth1 and your gateway (a /30 for example) , then you can do it. Edit 2 following last comment : If you want to have your email server NATed to a different IP, to avoid blacklisting, then it's easy to do without bothering with 2 interfaces. You don't even have to set the IP on the interface, it works with nat rules only. 1 - remove the configuration on eth1 2 - set your nat source rule like: 

The request goes from your computer to the router that perform the hairpin NAT then to the server. So it doesn't go up to the Internet. (In some case the router can be hosted by an ISP on a remote site, so the request may cross a line in both sense, but this is not so common). 

Nor does RFC5494, the other RFC that update RFC826 Regarding the request that already include the MAC addresses see RFC5227 section 2.3: 

Note that as pointed out by @Andriy Berestovskyy this table is outdated and Extended VLANs are propagated by VTP version 3 

As long as you can NAT the required protocol and ports (see below) on the routers, you can use any VPN solution that support NAT-Traversal (NAT-T) to establish an IPSEC tunnel (as commented by Zac67) pfSense does support NAT-T, so you're good to go. As you already find out, OpenVPN is commonly used in such case, because it is very NAT-friendly, and it is also supported by pfSense. For IPSEC, you need to open / forward / PAT the following: 

Nat loopback is useful when you have some DNS issue. Imagine that you host your own email server inside the network. You need to access it when you are in the office and when you are outside. Your mail client is configured to access it with the name If you don't use split DNS, for whatever reason, this name will always be resolved to the public IP address. Without NAT loopback this server will not be accessible from the internal network because you try to access an internal ressource from an internal interface trough an external interface. 

If you get one IP in one of those blocks and another one which is not then you are good, otherwise we can't tell you. 

seems to confirm that this is actually your issue. Additionally, I suppose (due to the size of the networks) that you have many Wireless clients, and SOHO devices are not designed to handle many clients. That may also explain the poor performance, but it's hard to say with the info provided. 

means that in this context the unit is defined as . Since 1 byte = 8 bits, a word is 4 bytes. So a header 5 words long is 20 bytes and a 15 words header is 60 bytes. 

In addition to the previous answers from Zac67 and Teun Vink, you must ensure that all switches in your network are configured with the same version of STP (STP / RSTP / MSTP /PVSTP), and set the STP priority correctly. 

Your access point are the controller based version, I.E. lightweight, that means they are supposed to connect to a Wireless Lan Controller ("WLC") At startup the access points get an IP from DHCP then try (by several methods) to join a WLC. When they fell to do so, they reset their network interface and try again until they succeed. You cannot use such AP (with this software) without a WLC. They can be converted to autonomous (standalone) mode by uploading another software into the AP. The easiest way to do so is... ...from a WLC, and it requires that you do have the software available (trough a Cisco support contract). Such AP have in their product name either "L" (for "LightWeight") or a "C" (for "CAPWAP based"). A standalone AP (without L or C in the name) may have been converted to lightweight mode. In this case the original software may still be present in flash, and you can reconfigure the AP to boot from the original software rather than the lightweight one. 

A few selected switches, like this one can be powered by POE and thus don't use external power supply. But all other switches (including the one in your photo) do require power and have a regular C14 power socket on the backside. Many Cisco switches can be powered trough a regular C14 power socket (110 / 220V AC) as well as , for redundancy, trough a specific connector connected to a Redundant Power System Some others have dual traditional power supply (hot plug-able) 

Obviously, if the size is below the MSS, the whole message is sent in a single frame and what you measure is the time it takes to send the frame, the amount of data in the single frame has little impact (especially with very little amount of data, where the data size is much smaller than headers size). The TCP three-way handshake is performed before the actual data transmission and add roughly 436 bytes. The connection termination four-way handshake, if it occurs (depending on the software you use) may also add a significant overhead. So all in one, below MSS, the data size is negligible comparing to the whole process. When the data size is greater than the MSS, the message is split into several packets (that are encapsulated in several frames), so you expect to have a kind of stair effect (with a jump at each MSS multiple). TCP offload engine may also have an impact, you should check if it is enable and compare result with / without it. You should also capture the traffic on both machines (with a tool like wireshark), this will give you more clue about whats happening. 

The AUX port is basically a serial port and is not an Ethernet port at all, so no you can't connect it to an ethernet switch port. But you can connect a RTC modem to it and access the console remotely by dial-in. 

Yes it will work with VLANs with the proper ACL that deny all traffic between VLAN 1 and 2, but I'm not sure that VLANs are supported on the 851 models. This datasheet for the 851 doesn't list VLAN or 802.1q in the feature list (except in the Wireless part) This datasheet for the 871 model does explicitly say it supports VLANs but only with the So you have to be careful about the licenses that are included with the router you choose. 

You can use private IP between two public IP network as long as you do not send to the internet packets with a private address as source. It's quite common. 

Layer 2 switch A generally has a address, which is linked to a virtual interface that can be bridged to any vlan for example, so you can choose in which VLAN the switch management is accessible. This is not necessarily a loopback interface. Note : some layer 2 switches can have several management IP addresses in different VLAN while other can only be configured with a single management address. Layer 3 Switch / Routers Now a combine the functions of a router and a switch. A router, by nature, is attached to several networks, and has several IP addresses, one for each network it act as a router for (as a minimum). Let's say you have a router with: 

Both of your switches support This is the feature specifically made to do what you want, it combines several physical links into a single logical one. This provide both additional bandwidth and fault-tolerance. On the 1810 model this is limited to 4 link per trunk. (source: this datasheet) So you can have 4Gbs between the 2 switches. Note that: