The CSMA/CA algorithm requires the AP to "coordinate" all the clients. If clients talked with other APs or with each other, it would be impossible to prevent interference. Furthermore, the assumption is that your client is using Wi-Fi as an access layer technology to connect to a larger network. Why would you need to connect to more than one? 

If your access points are continuously rebooting, it either means your switches can't supply enough power, or they can't communicate with the controller -- i.e., you don't have reliable network connectivity. That could be wiring problems, or perhaps you have your switches daisy-chained and you are oversubscribing uplinks. You can look at your interface counters to see if you see errors or drops. That will give you a hint where to start looking. 

It may be helpful to separate the forwarding functions of the switch from the management functions. We often refer to these as the "forwarding plane" and the management plane." The management functions can include snmp, telnet, ssh, ftp, tfp, etc. For these to work, the switch needs an OS, and in fact most switch OS are based on some form of *nix. The forwarding function does not need any of that. In most switches, all the forwarding is done in hardware, so there isn't a "stack" in the software sense. 

R2 doesn't have a route to 11.11.11.0, so it doesn't know where to send the echo reply. Add a route with the next hop on 10.10.10.1. 

allows you to start a CLI session (a command shell). Without it, you can't get a command prompt. You can see more information here. EDIT: From: $URL$ 

If you enable VLAN 103 between WAN 01 and WAN 02, you will create a layer 2 loop, which presumably will be broken by Spanning Tree protocol. So depending on the STP parameters, one of those links will be in the blocking state. You will end up in a very similar state where you are now. 

EDIT: Perhaps I should be more precise and say "payload" instead of data. In fact, each layer's PDU is "data" to the layer below it. 

Instead of describing where you would use BGP, let me describe why: Other protocols like EIGRP or OSPF assume the best way to get somewhere is the fastest link -- i.e. the link with the highest bandwidth. As such, they have a simple metric for selecting routes. In many situations, especially between different organizations (autonomous systems), the reason for choosing a particular path may have nothing to do with bandwidth. It may be due to a pre-arranged agreement on who will carry what traffic, or based on some financial agreement. You may want to route some traffic to one neighbor, but different traffic to another. The main advantage of BGP is that it gives you much more control over what routes you advertise and what advertisements you accept from your neighbors. BGP gives you more control over route selection and your neighbor's route selection. That's one of the major reasons BGP is The Routing Protocol for the Internet. 

The interface could be down because you have no ports on that VLAN that are up. Or, you have already configured another VLAN interface on that switch. On layer 2 switches, you can only have one VLAN interface up at the same time. If you want the two VLANs to talk to each other, you will need a router, or a layer 3 swith. 

Access lists have an implicit "deny all" at the end of every ACL. If you want to allow other traffic, you need to add a third line: 

Can't say for sure without seeing the router configuration. If you don't manage the router, the question is off-topic here. 

Per-packet load sharing. The host/router will send packets alternating between the two links. As you mention, this can cause serious impacts on throughput if packets arrive out of order due to unequal delays. Per-flow balancing. The host/router will send all packets for a particular flow down one path. The host/router uses a hashing algorithm to determine which path to take. Usually the algorithm uses some combination of layer 2, 3, and 4 information to pick which path to use. The problem here is that depending on the environment, the flows can be very unbalanced. For example, if you use IP information, and you talk to one particular host (your VPS endpoint, for example), you will use only one link. You will have to choose your algorithm carefully, depending on your particular usage. 

One simple explanation is that R3 needs to determine which tunnel the packet came from. It's often that there may be more than one tunnel terminating on the same interface on R3. EDIT: More importantly, if you allow the tunnel configuration on R3 to specify a different endpoint, there's no guarantee that that address is actually on R1-- it could be anywhere. That would mean the interface for the other end of the tunnel, 10.0.0.1, could exist in two different places. That will cause, as we say, a bad routing day. Another explanation is that it allows keepalives so R1 and R3 know that the other end other end of the tunnel is up. You can certainly have asymmetric paths if you want. That depends on the route information on R3. 

Can't say for sure without seeing the configuration, but most likely P1 and PE1 are not fully adjacent. The routing table doesn't show interfaces, it shows routes. It's telling you to get to the network 192.168.1.0/30, use interface Fa0/0. 

Yes, they are public IPs Yes, you create a static translation between 192.168.1.187 and one of your pool addresses. The details depend on the specific hardware you have. The IP address WAN and gateway are the network that connects you to your provider. The WAN pool is a network of IP addresses that you can use for your devices. They are two separate networks. Although it usually doesn't matter, you would normally translate your internal addresses to one of the WAN pool addresses. 

Create network statements with subnet masks for each interface you do want to advertise and exclude the interface you don't want to advertise. For example, if you have 

However, I agree with the other answers that this is not a good option and that using sub-interfaces and VLANs is a better way to go. 

Yes, if the AS=PATH includes both an AS-Sequence and an AS-SET. Not exactly. The segment includes the type (sequence or set), length, and value (list of ASNs). In other words the segment can include more than one ASN. 

It's not clear whether you're asking us to critique the drawing or your network design. The design seems OK from a superficial point of view, but since you have included hardly any requirements, it's hard to say whether everything will work as desired. I do notice that the servers are on the same subnet as the external firewall interface. I don't think that is what you want, unless you have some magical L2/L3 firewall. Also the firewall IP and GW are the same. You don't show the IP addresses of the firewall links. If the access points are bridging, then you need to decide if the firewall interfaces are all on the same subnet or not. If the access points are L3, then you need to show the IP addresses of the access points. In the latter case, you probably don't need VLANs at all. The drawing itself is missing things that would help someone who had to troubleshoot this network: 

There's no mechanism to tell the router "what you would like it to do." It will generate an ICMP message using the source address of the interface the packet was received on. If the router has a route back to the source that is different than the reverse path (i.e., an asymmetric route), the time exceeded message will take a different route, but the source address will still be the same. For example, if the router receives a packet on interface 1 with a TTL of 1, it will generate a time-exceeded message with the source address of interface 1, and the destination address of the original host (that is running the traceroute). If the router is configured in such a way that its best path to the host is through interface 2, then the router will forward the packet out interface 2, but the source address in the ICMP packet will still be interface 1. 

You don't mention how the subnets are connected, but if you have a router(s) connecting the subnets, then any subnet should be able to communicate with any other (assuming nothing peculiar is going on). There is nothing special about IP addresses that make them "troublesome." The fact that some subnets are "numerically similar" to others makes no difference to the router. 

You may have already learned that network addresses (routes) can be summarized. That is, many network addresses can be summarized (represented) by a single network address (i.e a route). A default route can be considered a summary route that contains all network addresses. Because routes can be summarized, routers may not have complete information about the entire internet, but they may have a route to a large summary network that contains the destination. That is, they know enough to forward the packet to another router that will have more information. So if you send me data, your provider may not know where my IP address is located. But it may know that my IP is in the range of addresses that are located in the United States. So all your ISP needs to know is how to forward it to a router closer to the US. That router will have more information to get the packet closer to me. It in turn will forward to another router with more specific information, until the data gets to me. The Tier 1 and Tier 2 providers that make up the backbone of the Internet have routers that carry routes to all the networks connected to the Internet (currently more than 500,000 routes). Your IP packet will eventually be forwarded to a router that does know to get to the destination network.