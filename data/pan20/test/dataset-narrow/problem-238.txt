I would start looking at your monitoring tools as the culprit. However being that your data from Paul's script shows average wait is low I would not put to much concern into it right now. Your main challenge here that I think you may be overlooking is your user's told you there was a slow down in the system/application. Most will always point to the database/server as the culprit. My general next question when someone tells me that is "what portion of the system is slow". If they tell me things like pages loading slowly, and they are not actually executing any ad-hoc reports or queries, I ask them to check with the server folks or application admins to ensure nothing else is messed up. Then while they are doing that I will go check the database server performance. However as you have shown if the XE wait type is the only one above 10% or so I don't think the issue is with the database server. If you want to find the culprit of that wait type you can begin querying , this will show you the and wait that is occurring. You can also use sp_WhoIsActive to get similar information a bit more easily. I would bet you are going to find it to be sessions associated with your monitoring tool. 

That check box does not prevent job step history from being recorded/stored. SQL Server is going to do all this by default and that I know of you cannot turn it off. The check box referenced is for telling SQL Agent to store or job step output. It would store this information to . Which from my testing just checking that box alone does not do anything. You would still find the table empty if you queried it. Once I also checked , ran the job again, and then it showed a record for the job step. This would enabled on a job that runs command for a database: 

Registry keys can change with all software products between major versions or even with a service pack. Instead of trying to pull the values from searching the registry you might consider just using SMO. For instance to find the directory path you are looking for simply use the following: 

If the user making the update to that database table does not have a user in the database it will default to the "dbo" schema. This is shown below: 

Using your event session configuration, with the exception that I am filtering to only capture data for database on my local instance, I can view the target data for this session and find the query was captured: 

If you are configuring a T-SQL job step go to the Advanced Page and configure the "Run as user" to the login of your choice. 

The SQL Server Customer Advisory Team wrote a blog post that has some information on this setting here. 

If it fails it will show a similar message just with a failure and should provide an error code. If not check your Windows Event log for similar events around startup time of SQL Server. To fix the issue you need to follow the KB article you provided. It is not old and is still current, check the "Applies to" section where it list all the editions of SQL Server 2012. 

OK. I have scoured the Internet for information on trying to fix this and found nothing that deals with my situation. I started here, that lead me to here, that lead me to looking at netsh commands for HTTP. Understand: I have no problem what-so-ever accessing the Report Manager or Web Service using HTTP/80. My problem is strictly getting HTTPS/443 to work and open up the exact same page that HTTP/80 uses. All I get is . 

You are only allowed to change the server name or hostname of a server running SQL server. Microsoft does not support renaming the instance without a reinstall. So if you have a default instance on the server that is referenced by the hostname you can rename the "instance" in that manner. However if you are wanting to go from "hostname\instance1" to "hostname\instance2" you will have to reinstall SQL Server. 

This is dictated by your documentation of your process. If your process is written to a 3rd grade level then any adult is assumed to be able to perform that process strictly by following your documentation. 

I know there is a way to add the text "days" to that column but can't think of it off the top of my head... query: (SQLFiddle) 

You are granting to the role so the HR Administrators being a member of a higher level role should mean they do not directly inherit the . At least that is how I understand it. The particular section of the article referenced speaks on : 

Just to mention as well that Kalen also brings up the point that you will get a NULL value if the database is in SIMPLE recovery mode (autotruncate mode) or if no log backup exist. 

There are multiple methods to open SSCM in Windows 8.1, I actually only have 2012 installed currently after refreshing my laptop but previously had 2008 R2 installed and it worked the same way for me. Bring up the start menu: 

What is the easiest way I could get this exported to a CSV format? Would it be better to dump this to a table in a database more easily? I will be running this from a central server that I do have an instance running. 

In order to clean up files in Azure blob storage requires PowerShell or going through some app like Azure Explorer. So it is likely that Ola's backup script does not support it since there is no native T-SQL command or procedure to access blob storage in that manner. When you are deleting files you will need to account for any that may still have an active lease. BOL has code to handle dropping the active leases. 

This would capture I think 20% of the active sessions for that database at any given time. However if you want all events then you would have to suffer the overhead of that action. With it being a Microsoft product I would not be to concerned with what queries it is producing. If it is experiencing performance issues you should follow Microsoft guidelines for the product or consult Microsoft support. 

If I'm not mistaken the default trace contains property changes to logins which should include an account being disabled. An article that walks though the various information you can get from the default trace. EDIT OK, already confirmed not much at all is captured with manipulating logins on an instance. So unless you had something already capturing the information like SQL Server Audit (if on 2008 or higher), there is nothing natively logged by SQL Server to let you know who did it. If you happen to be logging successful logins to that instance you can determine who was logged in that had the permissions but that is the closest you will likely get.