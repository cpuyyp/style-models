Relational database theory does not include the use of the word Field. Dr. E.F. Codd, who wrote the series of papers that provide the theoretical basis for RDBMS's never used the term. You can read his seminal 1970 paper A Relational Model of Data for Large Shared Data Banks if you want to check. Terms like Domain, Table, Attribute, Key and Tuple are used. One reason for this, is that his papers were largely concerned with relational algebra, and the way a particular implementation would define a table in a database wasn't considered by Codd to be important. Vendors would flesh that out later. People also have to understand that historically, RDBMS's evolved from existing hierarchical and network databases that predate them, AND the inner workings of an RDMBS still have to be concerned with data organization and storage. In common use, and you can easily verify this by simply doing a bit of googling, Fields and columns are the same thing. PC Databases like DBase, Access and Filemaker typically use "field" instead of "column". "Attribute" is another term that can be used interchangeably. For example, here's a link to the MS Access manual on adding a "field" to a table. It's clear to see that in MS Access a "field" is equivalent to a "column". The same holds for Dbase and Filemaker Pro. Sometimes people will refer to a specific value in a specific row as being a "field" or more properly a "field value" but that does not make the use of "field" when referring to a column or column-equivalent-concept incorrect. This does tend to cause a level of confusion because people have used "field" to mean different things for many years. In relational theory -- a single atomic value is referred to as a "Datum". If someone stated that a "field" is one value in a relational database and not the same as a column, that is their opinion, since "field" is not part of relational database vernacular. They are neither right nor wrong, however, throughout the database world, field is more often used to mean column. With that said, projects and teams often have to work out an understanding of how they want to use particular terminology within the project to avoid confusion. You aren't wrong, but you also might decide to simply go along with the convention being used, or avoid using the word field altogether in favor of "column". With relational databases, "Table" and "Column" are the building blocks that exist in DDL and it's best to just use those terms and avoid "field" which isn't used, nor clearly defined. 

For mysql server monitoring you should concern these- Mysql server is running or not by command (service mysql status) and by telnet the server that is running or not. You should consider these parameters. 

Mysql server is running not terminated, and port is already used with the socket. When we restart mysql server service, Sometimes it doesn't terminate the mysql server process and remains in the queue, In that case you can kill the mysql server process externally. 

Try again but rename ib_logfile0 to ib_logfile0_old ib_logfile1 to ib_logfile1_old. These file automatically created from ibdata file when mysql server restart. Try innodb_force_recovery option- mysql 

This is a common problem if you do a mysql import and overwrite the mysql database itself, such as when you might be restoring from a mysqldump -A backup. This is a good thing: you probably want to back up all your mysql users, permissions, etc -- but it can wreak havoc with things like the debian-sys-maint user used to cleanly shutdown mysql. Although this new database will possibly change both the root password and the debian-sys-maint password, of course it won't automatically change the expected debian-sys-maint password in /etc/mysql/debian.cnf. In fact, unless you also backed up that file, you probably don't even know what that password is anymore! First things first. If the mysql root password was different between old and new servers, you can use mysqladmin to fix it: 

You can set by the liux command . It gives no. of nodes. set this value to it. For more read here You can set if: it is blog/stats/e-commerce (with ~100x shop in day), etc. if: you have a lot of customers or you need to work with money transaction like bank. so this time you should split your dataflow between several servers to have speed & safety. You can set it to 2, because it has ~75x faster write speed and it fails ONLY if hardware fails. But it have its own impact. Read this- 

MongoDB clients should add an _id field with a unique ObjectId. Using ObjectIds for the _id field provides the following additional benefits: 

here alter command for test would not replicate. because you are using not_replica database. after that insert statement would fail & replication stopped. 

Federated storage engine can help you. In mysql, you can achieve this by using federated storage engine. It allows you to access tables from different server. Once you reference the table from specific server, you can use it. You can get more details about federated storage engine. Now you can join two tables from different servers. how to use federated engine ETL tools can help you like Talend data integration Talend is open source tool which is ETL tool uses in data ware housing. It have nice UI, you can learn it in short duration. Here you can create many Mysql or database connections and use the different connections for different tables, can join whatever as you need.