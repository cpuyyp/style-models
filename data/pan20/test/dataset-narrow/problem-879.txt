You can add new AAM collections using the "map to external resource" link in the AAM page in Central Admin. You shouldn't be able to have one of these new collections point to an existing web application though, that throws errors when you try to do it. Can you maybe post a screenshot of your AAM page (with the "show all" view) so we can see what you are talking about? Also, the best source for learning about how AAM works is: $URL$ 

SharePoint will allow you to upload any type of file and have it controlled by document versioning. (Assuming it is under the upper size limit, and not in the blocked file types list.) Whether you want to or not is another question. Depending on the size of the files/etc. it may be "cheaper" to find another solution. See this article for some general storage recommendations. It was targeted at WSS (SharePoint 2007) but I think it still applies in 2010. 

You can have IIS and Apache living on the same port - if they are on different IP addresses. There is some special configuration you need to do for IIS though, as it typically binds all ports to all IPs. Here is documentation for how to configure IIS to only listen on certain ports/IPs: $URL$ 

It really just seems like your IIS installation (or at least the IIS dlls...) are corrupted. I would perform the following steps to try and get a "clean" reinstall: 

You will want to do what is called a "database attach upgrade" of your 2007 data. The basic outline of what happens is that you: 

I've got this bookmarked from a while back, but I've never tried it: $URL$ The 4th post (by Edwin) has the solution I am talking about. 

There is no "easy" solution to this problem - ACLs for local accounts are lost when moved to a new server because the SID associated with that user doesn't map to a valid user account any longer. There is a way to do it though without having to wipe out your system. I'm going to walk through what I think is the easiest way, using Powershell (with WMI), icacls and some text editing. 

For web parts, you need to make sure that you keep track of what web parts have been installed, and in a disaster scenario, you re-install them (after re-installing SharePoint, but before restoring your content). For the other things - any changes you make to the SharePoint 12 hive () or to the IIS root for your sites need to be backed up at the filesystem level. In a disaster situation you can then restore the customized files (again, probably after SharePoint install, but before content restore) and you should be good to go. Mentioning the IIS roots also reminded me - you can also dump the configuration of your web sites and application pools from IIS so that you can re-import them after a rebuild. This is far easier than having to remember any IIS-level customizations you may have done. 

After installing ARR, there will be a new category in IIS Manager called "Server Farms" - right click that and create a new farm. 

What you want to do is create a new List Template, and create all your new libraries based off of that, instead of the standard Document Library template. 

Securable should tell you whether hardware virtualization is properly enabled or not. Also, are you running the latest BIOS? There have been some Dell models that had VT-X processors, but it didn't work until the latest BIOS software was applied. 

With all that being said, there has to be a way to do this using the web.config healthMonitoring section, I just can't figure out how to say "turn off logging for all events". 

If you have an existing BLG file you would like to convert to CSV, you can use the command for this purpose. The format is: 

The end result of substitute is the same as replace, but it works a bit differently. You can't just do: 

What you are looking for is called a reverse proxy. This isn't something that is built into IIS6, so you need to get a third party module to perform this function. Managed Fusion URL Rewriter has this capability. Since you added the Windows 2008 tag on there, I'll talk about IIS7 as well. You could still use the Managed Fusion product - but a better option would be to get the Application Request Routing module and use that as a reverse proxy. Another option would be to move your IIS site to a different port as well, and use a dedicated reverse proxy server, such as nginx, in front of both your IIS site and your RestLet service. 

The files are just what they sound like - logs of errors that happen within your SQL server. When you are in SQL Management Studio, if you look at the "SQL Server Logs" it is viewing the . The files with numbers at the end are archived log files when it rotates. The files are for errors that occur in the SQL Server Full Text Filter Daemon launcher service. This is a separate service used to load filters for full text search. Again, the files with numbers are archived files after log rotation. The files are SQL Profiler traces. SQL 2008 does some default tracing to help troubleshoot issues. 

Is UAC enabled on your system? You need to run your command prompt as administrator in order for icacls restore to work. Also - I'm pretty sure the format of your restore command is incorrect. A * will cause icacls to error out because it will look for *\File.zip - what you probably want is: 

If you are setup with the Windows authentication method, that hooks up your authentication to the AD domain that your WSS server is in. Typically you will want to use Integrated/NTLM authentication so that people on computers in your domain will be automatically logged in with their machine credentials. (People not in your domain or not using IE will need to type in their username/password) Your users should not need any specific privileges on the Sharepoint server - but you may need to add Domain Users (or nt authority\all authenticated users) to the Users group on your SharePoint machine. Here is Microsoft's planning guide for WSS authentication: $URL$ 

Run the WMI Tester again to see whether you can now connect to the namespace for the Reporting Services WMI provider and continue with the debugging process. 

Did you see this blog article? Seems very similar to your issue. The mscluster namespace requires encryption, so to connect to it you need to have a PacketPrivacy authentication level on your query. 

It seems like you have a small misunderstanding about how SharePoint works. All of the content within SharePoint is actually stored within the SQL Server database, not on the file system. SharePoint/IIS does some request routing behind the scenes to serve the content when a URL is requested, mapping to some location in the database. Typically in SharePoint, is what is called a "managed path" - basically meaning that anything under that URL will be handled by SharePoint and not by IIS. In your case, underneath the path there is a site called maths. It isn't possible to upload a file to a site within SharePoint - you need to upload to a list. Even though this user may have full control on the site, there is the possibility that the list has more restricted permissions that don't give them access to add content. You need to take a look at the list where the upload is occurring and make sure the proper permissions exist on that. 

This is not a bug - it is how the managed handler pre-condition works. It makes it so that the module will only be processed by pages that have a managed handler defined for them. You can take the pre-condition off, and then it will parse everything - but then you lose the performance gains of not parsing your static content. Your best bet is probably to have all of your static content in a separate directory, and use web.config to remove the module. 

It sounds like maybe the SSRS addin for SharePoint didn't get installed. $URL$ In the AppMgmt section of Central Admin, you should have a "Manage Integration Settings" in the Reporting Services area if this was installed properly. Here are 2 URLs that discuss the installation and features available: $URL$ $URL$ 

By default, nmap only scans for "common" ports (the 1000 most common ports per protocol I believe). Since 789 is not a common port it isn't found. If you do 

I'm no licensing expert, but I'm going to say absolutely not. The MSDN use rights are pretty clear that you can only use the license for test/dev/demo, and that you (and other MSDN license holders) are the only person who can access said software. Once you put a production VM onto your Hyper-V server, it becomes a production server, and needs its own license. Even if you don't believe it becomes a production server, each person you would want to access the VM would need an MSDN license, and at that point getting a regular license is probably cheaper. 

Visual Studio 2008 isn't 100% compatible with TFS 2010. To get some level of compatibility, you need to install an update to VS2008. Also see this blog post about the subject. 

You can do this - when adding a server to the farm, click the "Advanced settings..." link, in there both the HTTP and HTTPS ports are configurable to whatever you want. In the file, the server entry would look something like this: 

IIS7 isn't out of the box 100% compatible with the Metabase structure of previous versions, you need to enable it. In the "role services" for IIS, make sure you have "IIS6 Metabase Compatibility" enabled. See the following 2 sites for more info: $URL$ $URL$ With that being said, I've found that ADSI and Metabase compatibility don't seem to be 100% reliable. A much better solution would be to retool your script to use appcmd.exe. The command would be something like: 

Unfortunately, I think WSS doesn't have an RSS feed for search results - which means it isn't usable as a Win7 Federated Search source. If your WSS environment is single-server, you could upgrade for free to Search Server 2008 Express and gain this functionality (and a lot of other cool stuff). If you have a multi-server WSS farm, then I don't think it is possible without paying to upgrade to MOSS or Search Server 2008