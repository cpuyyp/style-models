Key preserved means that 1 key value goes to 1 table. Giving counter examples may help you understand this concept better. Example1: Your view contains aggregation. Suppose you have following view structure. 

According to comments. You can connect oracle using easy connect but hr (human resources) account does not exists. Therefore try to use 

I would like to use schemas to separate database according to modules and usage patterns. I find that it makes it very easy to understand database tables therefore maintenance becomes easier. I had following schema types in my last sql server project. LT -- Lookup Tables 

Without knowing the query set that's going to hit this structure, I'll give a generalized answer: I try to use the TIMESTAMP type for this, which works well with time/date functions, and is timezone agnostic (under the hood it is storing a unix timestamp). By default, this will only be a 4 byte wide key (instead of an 8 byte bigint), so if you index other columns (which always tacks on the primary key at the end...albeit hidden), those structures can stay skinny and quick as well...and also not eat your RAM ;-). TIMESTAMP by default has a resolution of 1 second, which is overkill for your purposes, but the easy use of date functions on it makes that worth it. Main downside: TIMESTAMP is based on a 32-bit unix timestamp integer (it stores that way, but displays as a date/time), so it does eventually run out. At that time (decades from now, when RAM is cheap) you can adjust it, and the date/time display/handling nature of the type will allow you to make the change transparently to your software. If you want to use it as an integer, you can use FROM_UNIXTIME(your_integer_here) to insert, and UNIX_TIMESTAMP() in queries that need that. I'm going to guess though that the date/time format is easier to work with for you though. Also, you do not require a second UNIQUE key, as any PRIMARY key implies this already, and is included for free in the storage/RAM price of your data table (which is sorted by PK as a B-Tree...your table is an index, and can/will be used as such). 

I would like to find given schema, table and column find that if this column is calculated/computed? Wrongly I thought that INDEXES view gives me this information. But following select returns no rows. This gives only functional indexes. 

We are using 4 node Oracle 10GR2 RAC in Windows x64. 3 instances of our database crashed today and later started normally. I started them by connecting (Remote Desktop) to individual instances and executing startup command in sqlplus. I can connect to database using SYS account but when I try to connect using application user account, I get following error: 

This is an alternative solution that is similar to Rick James' answer, but with a way to avoid app walking, and enjoy a fixed number (1 or 3) of statements to UPDATE the entries in all 3 applicable levels: Create a table for each of your well-defined levels of event (I will call them , , and to keep this generic), so that has field ., and middle has field .. If your case remains simple, you may be able to enjoy MySQL's ability to update more than one table simultaneously, and require only ONE statement: 

Following link advises to find non-local background processes and kill them using following bash script. 

I am trying to clone our production database in test virtual machine. Our production database works with ASM. I would like to use plain file system in test database. I created database, services, pfile etc. I gave production database control files to test database. Right now I am trying to rename datafiles in test database. I get following error. 

$URL$ Third is Directory Server, LDAP Server like Microsoft Active Directory. Here you provide a key and directory server gives you back connection string. You use this connection string to connect to oracle. Fourth one is same as Directory server , you only use other network services. As explained in oracle documentation. "Configuring External Naming Methods External naming refers to the method of resolving a net service name, stored in a non-Oracle naming service, to a network address." According to NIS wikipedia: "Network Information Service, or NIS is a clientâ€“server directory service protocol for distributing system configuration data ...over time other modern and secure distributed directory systems, most notably LDAP, came to replace it." As you can see, External Naming is same as Directory Server, only uses a different server technology (older) than LDAP. $URL$ These are four connection methods. I do think other than where do they get connection string information, they differ. Therefore easy connect should not have less performance than local naming. 

...exactly as we expect. There is, however, now a view by the same name in its place (which refers to the new table in the other schema), and it has a corresponding .frm file, and of course, no .ibd file, as we would expect. Further, the table in the new schema works just as expected, as does the view in the old schema that aliases it. In fact, as far as we can tell, this is causing no problems...we just want to stop worrying whoever sees the log. We can even create and drop a table in its place (after moving the view and before putting it back), and still get that error. So why does MySQL expect an ibd file by that name in the old schema? How do we convince it to forget? 

You will design your data model, logical model, using these tools. After that you will export your physical model to different databases. Something like below. 

I would like to find computed column list in oracle database using Oracle Data Dictionary Views. I would like to add more information. Suppose I have following computed/calculated column in database. 

SQL Server Management Objects SMO is your answer. You can use it to accomplish this task. Here is an example to generate Create Table Scripts. 

Your caching layer sits between Model and View Controller. You should not hit database for needless requests. These requests include in my opinion. 

If I were you, I would use a view to transform the date with the DATE_FORMAT function: $URL$ $URL$ To avoid refactoring your SELECTs, rename the table out of the way, and use the original name for the view. As long as you keep the view simple like that, it will perform about as well as the physical table (negligible overhead) on anything except for anything that might enjoy an index on that date field. Because the DATE_FORMAT function make the view non-writeable, you still have to refactor your write statements to use DATE_FORMAT to go the other way. 

For a big modules, we also separated them to more schemas. For example personel module consists of more then 5 modules. 

If you are using csv , you can not do this. But if you are willing to use other tools like Microsoft SQL Server Reporting Services or Crystal Reports you may do this. 

I would like to offer also INFORMATION_SCHEMA views. These are ANSI Standard and works cross database ,for databases which support them. 

My backup is normal rman backup pieces not backup as copy. I am trying to rename nonexistent files. After this rename process , I will try to restore database from rman backup. But this backup is not piece by piece copy. 

If you want to store it as a hierarchical structure, the pattern that would best serve you is the "Closure Table" pattern, which allows for subtree operations (select/update/delete all descendants of x). A generic example (closure table and data table ) of what flagging an entry and all children at all levels below it would look like this: 

For the purposes of diagnosing performance issues, what kinds of operations might wait their turn for this mutex, and what configuration options and resources might influence contention on it? 

Here are some well written resources on how to implement that: $URL$ $URL$ $URL$ The best place to read about it is Bill Karwin's book "SQL Anti-patterns", which details it as an alternative to less savory patterns. 

If your file is created but it is empty. You may still have permission issues . Try to use some file monitor program to see what SQL Server (Agent) is doing in your machine and in your remote machine. Process Monitor is a good utility for this. You can filter file operations and see what your package is doing. You should add this information to your question so that we can help you more. Also you may try to run your package with different credentials to see if your problem is really about permission issues. A handy utility about this is ShellRunAs.