To answer your question as intended, the network card pass to the packet sniffer only valid frames. That means it has already filtered corrupted frame and this is a function of the data link layer (OSI layer 2). In fact all the physical layer functions (and some of the data link layer functions) are performed by the NIC itself and not by the operating system, so using a standard packet sniffer you can't see what happens at the physical layer. You would need specialized devices to do that. But actually the answer should be "none", because the OSI model is just that, a model. It is not used in real life. What is actually used is the TCP/IP model, in which the is a single layer that encompass all roles that are separated in two layers in the OSI model: and . Note that despite this, even experienced people well aware of the TCP/IP model still split the Network access layer in two, and refer to the IP layer as layer 3 but strictly speaking this terminology is incorrect, and IP should be referred as layer 2 But since most networking courses begin with the OSI model instead of the TCP/IP model, this would cause many confusion. 

A TXOP is a transmission opportunity granted by the Access Point to the Station. It is a given period of time during which the station can send as many frame as it wishes. A service period is related to power saving. It's the period during which the Station listen before going back to sleep. It is initiated by the Station and allow the Access Point to send traffic destined to the Station that have been buffered. In short : TXOP , QoS mechanism, AP initiated, traffic from Station to AP Service Period, Power saving mechanism, Station initiated, traffic from AP to Station 

This last case is less common, since hardware network switches are inexpensive and more efficient to do it. The most common use case I can think of is when the machine is an hypervisor and you bridge the physical network interface card (NIC) with virtual network interface (VIF) of virtual machines. Note in all this case there's more advanced use of ip/eb tables like logging, NAT, QoS, MSS Clamping etc... You must first define what you want to achieve and then select the proper tool to do it. 

The collision is handled by the Network Interface Card (NIC) in its hardware / firmware. The NIC will only pass to the operating system the valid frames. Wireshark will capture traffic sent by the NIC to the operating system, so only after collision has been handled. As such it doesn't see the collisions. As for what it looks like, my guess is a frame with some part being garbage (random). 

Yes you can uplink different brand of switches using SFP. The term stacking in this context means that several switches act as a single one. This is always a proprietary (and model dependent) feature, and can be done only with switches of the same brand (and not all of them). SFP doesn't work only with fiber: 

So it is up to the person that implement its version of an IP stack to decide which errors are reported or not. I have no idea if someone ever wrote an IPv4 stack with checksum error reporting trough ICMP but I doubt it. My understanding is that if a checksum is bad, the packet should be dropped, and that's all. Re-transmission will be managed by upper layer if needed (generally by TCP). 

There's a protocol created by Cisco for this very purpose: . You have to check if your version of IOS support it, and you need a netflow that will receive and record the information from the switch. Cisco reference some free Netwflow software on this page but there's plenty others. Many software provide both the and the functionalities, but this is two different services that address different needs. 

Wrong, CD state for , this is not an anti-collision mechanism. Collisions can occurs but are detected. Such "anti-collision" mechanism exist, it is CSMA/CA (Collision Avoidance) and it is used in WiFi for example. 

Many (really, really many) bots scan all Internet public IP all time, and try to exploit any weakness found in many way. Specifically, DNS is often used to perform DDOS attack by amplification, see dns reflection attack vs dns amplification attack for more information. 

The issue is most likely that the BR has not route to your 172.16.0.0/16 network so cannot send any response. You could NAT all traffic coming from your network in 172.16.0.0/16 to your 'external' IP address : 192.168.1.2. If your network is actually routable within the school lan without NAT, then you must ensure your rip configuration is working. (as said by Ron, first add "version 2" in rip configuration) 

the range 192.168.38.0 - 192.168.46.254 is not a /21 network. The closest /21 networks are (192.168.32.0 - 192.168.39.255) (192.168.40.0 - 192.168.47.255) Obviously you have the network configured on a vlan interface. When you set on another interface you get an error because you are actually adding the network and this conflict with which is a subnet of You cannot chose an arbitrary range of IP address and declare that this range is a network. When you work with the IP address in binary form you can see why. See this answer: How do you calculate the prefix, network, subnet, and host numbers? for more details 

The issue may be that the Internet Gateway (linksys) router does perform NAT/PAT for the 192.168.200.0/24 network but not for the the 192.168.201.0/24 network. 

This is basic routing, a function that normally routers perform by default, without any special configuration other than setting the IP addresses on the interfaces. Assuming the ISP take care of routing the 4 public IP addresses to your router, all you have to do is set the IP addresses on the servers and the router, and configure the router with whatever default route your ISP gave you. SOHO routers have NAT enabled by default, and it is not needed if you set the IP addresses on the servers, so in this case you would have to disable it. You also need to configure at a minimum some access list to filter the traffic that can reach the servers in addition to have the local firewall of each server properly configured. 

If you are on a wired interface you could try booting on a USB stick with a live linux install and perform a tcpdump on the interface to see if you have better results. 

It seems there's a loop within TMNet network (Malaysia). Different traceroute from Europe to the Paypal Dev Blog IP are perfectly normal and reach the intended destination. A traceroute made from Singapour is also normal : 

When A send a frame to C, the switch learn the mac address of A and flood the frame to all ports except 1 (since it received the frame on this port). Such, B and C both receive the frame. Since the frame contains C mac address as destination address, B knows it is not the intended recipient and drop the frame. C process the frame and reply. The switch learns C mac address and add it to its table. The only practical way for B to misbehave is to spoof the mac adress of C. In this case both B and C will use the same mac address. This scenario leads to unpredictable results, and intermittent communication failure. Both B & C will respond and the switch will likely update its table with the latest. Usually the switch will keep only one association mac address < - > port in its table, so depending on the traffic some time the frame destined to the duplicate MAC will be sent on port 2 and some time to port 3, but it will not be sent on both ports at a time. Some switches have (configurable) protection against mac spoofing, but this is very brand/model dependent. 

Your problem is that the port forwarding you configured works only for connection coming from outside. The router that connect you to the Internet has two interfaces and two IP addresses: one on the LAN and the second that connect to the Internet. The port forwarding rule must match all criteria : 

Note: by default the server has a FastEternetInterface and in this example I added a second one; but you could remove the existing interface and put two gigabit interfaces (module PT-HOST-NM-1CGE) 

First, the data you provide is not a routing table. A routing table entry has (basically) 3 components: 

In addition to Ron answer, Auto-MDIX does not negotiate speed and duplex, it auto-configures which pairs in the cable are used for Transmit and Receive. But on some switches auto-mdix is disabled if you manually set speed and duplex, which could lead to some confusion. 

Port forwarding change the destination IP address, but leave the source IP address unchanged. When your internal SSH machine reply to the original sender, it takes the source IP address of the packet it received and set this address as the destination IP address of its reply. Without a gateway it doesn't know where to send the reply and so the communication fail. 

Some access router have a specific feature to forward IPSEC packets. Others simply cannot forward ESP, in this case there's often a DMZ option (that will forward all incoming traffic to a given internal host) that could be used. 

this said, except for very small network, I would not rely on a DHCP server on this kind of device but rather use the DHCP relay feature to forward DHCP request to an external DHCP server, generally on a server I'm not fond of Microsoft, but used their DHCP for many years and never had any issue with it, while I had some trouble with Cisco equipment's DHCP servers. 

In the RIPE region (not sure for other Regional Internet Registry), ISP have to declare only the country in which an IP block is used, nothing more. (And I'm quite sure there's no check if this information is correct or not). Geolocation services maintain their own database and gather information by various ways. For example many use the GPS feature of devices, becoming increasingly common in mobile devices, including laptops. So if you open google maps, and allowed it to access the location service of your Operating System, google will now exactly where you are and can update its database with the location of your IP. Some also use neighbor WiFi networks, maintaining a database of SSID / locations and cross those data with other sources. How those services exactly works and how much reliable they are greatly vary by service, and this is not something we can answer on this SE site I think. 

Routing protocols, in general, are used to populate the routing tables and not to forward packets. Between two AS it is generally BGP that is used to exchange routes, and within an AS, it can be OSPF, but could also be IS-IS, EIGRP or any routing protocol. A given router can use several routing protocols at the same time. Lets say a router is configured to use OSPF and BGP. The router will keep in memory different routing tables: