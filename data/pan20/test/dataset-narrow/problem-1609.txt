For beginner electronics engineering, the use of clocks and all that terminology can be easily misunderstood. All it means it needs some sort of external frequency so that it can synchronise its internal logic. This can be a crystal, timer or another real time device that can generate pulses in a timely fashion. It can NOT be a Pi- Unless you use a Real Time system on it; atMega or aTiny are a good source of variable frequency generators but the cheapest are crystals. In this case the 2.4mhz to 5mhz spacing is a way of controlling the execution speed. Sometimes it must be matched so that you can calculate baud rate- for example serial connection or SPI. This is a very good data sheet with lots of graphs and data - that might not make immediate sense to you but the first thing to look for is a typical application / basic connection diagram. Later you will find asking more question that the graphs and tables will provide you with answers. 

Back light uses the most power, blanking the LCD will save a bit of power on large screens but it has to be power saving mode and not just black screen(cause that still uses power) You can try and use CEC commands with your TV. Also just use the TV's power supply cord (220v/110v) and piggyback a power supply of that rather than relying on the TV. The Pi does not have any power saving modes... because it is already very efficient. 

I think the OP wants to SSH into the Pi and read the UART from the Arduino! :) You first need to work out which UART to look on. The Pi has 2 UART's but only 1 is availble, which by default is in use by the console. You need to turn this off first and reboot! Unless you are using a USB serial port. A roboust serial manage is minicom! 

That kind of range needs directional antennas, which send a concentrated beam of data that does not interfere with other radio signals. Problem is the source and target should not be moving. Directional antennas at this range are more "legal" (mostly because nobody will complain from interference and because it is extremely difficult to lock into the beam) than using omni directional like traditional devices. It so happens a company called Mikrotik have these awesome directional antennas (Certified in most of EU and Americas) with built in "Routerware OS" with some devices that can do 10mbs up to 20km, or 200mbs within up to kilometre! SXT lite5 For $59 which is a 5Ghz, 54mbs 25milliWatt (unlicensed legal), full duplex, directional transceiver!! 

Low voltage (White Area) Very simple schematics are involved here. Basically requiring you to wire the GPIO outputs to the 12 volt system in a safe way, using transistors, to turn on the Relays. This is also low power (amps). You must not drive high loads with the GPIO, like relays directly. It will cause damage to the Pi. Treat the Pi like a fragile brain (ARM), sending signals to the muscles (Transistors/Relays) High Voltage (Yellow Area) This will be your main 12volt system used in your car. Make sure to use good, thick enough copper wire that will be powering the lights, from the start to the end. A good tip is to use slightly bigger negative wire but connect it as close as possible to the chassis (which should be all negative) The schematics 

Getting the Raspberry Pi to initialise the 3G modem dongle (and thus itself be able to see the internet) Getting the Raspberry Pi ethernet port configured to act as a DHCP server Getting the Raspberry Pi to relay internet traffic between the USB dongle and the RJ45 ethernet socket 

The no filter camera, is basically what is says. There is no Infra-red filter applied before the CMOS, so IR light can pass into the sensor, the standard camera removes this IR light from BEFORE it hits the CMOS. Capturing IR as you would like to may not work as expected. You cannot capture IR data, for example TV remote control pulses or something, the frame rate is just tooooo low! Remotes operate in khz cycles and what looks like a light to us are actually hundreds of pulses in milliseconds. If you build your own IR transmitter, the fastest speed you might be able to achieve if 30, 60 or 120 baud! (that is 1 bit per frame, given no frames are lost!) You could divide the image into 4 areas, giving you 4 times more speed but calibration will be a pain in the back! To detect if IR was shone into the sensor, there is no extra parameters, no. As far as the CMOS is concerned this is just bright light, you may be able to extract it using OpenCV? Or some custom JPEG parser or something. If you need data transmitting you should use a IR kit and hook it up to the GPIO. 

1. If you want to use the Raspbery Pi instead of a real server then No, you wont have any use for the Pi because a x86 based computer is faster and more robust than the Pi 2. It is not essential for anything. It is mostly for experimentation. You yourself might have brought it out of curiosity so go and try to build a remote garage door opener using your mobile phone over bluetooth. 3. Simple answer is No. Server is best run on a full processor computer with loads of RAM and proper interfaces like PCI-Express, real LAN port*s*. The Pi can run it but it will only serve you well and hardly cope with several users. 

The widely accepted way of driving a relay with a MCU pin is to use a transistor to "switch" GND and power the relay from a separate dedicated power supply/pin instead form the IO. 

The nice thing is that you can control the speed of the motor, which is true with model because the specification sheet says the applied voltage (GREY WIRE) controls the speed. While the circuitry is powered by (RED WIRE) its own constant voltage. You can even connect the (YELLOW WIRE) to the GPIO set to INPUT, and this will tell you the RPM of the Motor. 1 Pulse is 1 revelotuion and counter per minute. Again use a Resistor on the INPUT GPIO to make sure that voltage is not less than 3.3v and not more than 5v. (GREEN WIRE) Set the direction of the motor, please refer to the manual. For calculations on the PWM you will need to ask on Electronics Stack Exchange for the details as there are some calculations based on the all the elements. Using a relay needs very similar considerations and cannot just be triggered with the GPIO pin because relays use electromagnet coils that also generate back emf that can damage the GPIO pin. Relays also need a transistor, seperate voltage and flyback diode. You can replace the motor here with a Relay if you wish. Then just connect the relays switch PINS to the power source of the motor, preferable inbetween negative. The TIP120 can handle up to 60Volts and 5A current at 60Volts. When dropping to 12volts you get a nice 25A upper limit (OHMS LAW) Arduino based example for reference. 

This is more of a programming question and it can apply to any good object orientated programming language - Which are most modern full stack languages 

The simple answer is No. If you want to try stuff out then, for a long time you could not install background services or applications. Things are slowly changing though but still very slowly tricking in. You can have a look at this merge in GitHub on how to get service running on the Windows PIoT. I am sorry but it does not look like a simple command yet, like you would use service install on the desktop. But that merge provides a service framework and has been merged into the development branch. There is more info here about the merge but it looks like its for C++ services only. The architectural way of Windows IoT on the Pi is to write one UWP application. That application can then spawn off background processes as the front end keeps working. This is due to the design of the OS and how it sandboxes every process. 

As mentioned in a previous answer, Windows IoT is not real time operating system. But what does that REALLY mean? You only require a RISC OS like Arduino or PIC if: 

This is a common copy and paste error is an HTML encoded symbol for So you have to replace all these HTML encoded symbols with the real ones. Luckily that code only has that one occurance of that. So please replace with and recompile. In know that sometimes seeing all these mess of text showing up can be confusing but next time just take time to read each line by line and I am sure you will be able to figure out the next problem much easier. In this case it clearly says lt is undefined variable, which it is.. and its not supposed to be there. 

Write a propriety firmware for the BCM that generated a single log on code based on some top secret algorithm that can only be used within the next 10 seconds. Compile your own kernel with your propriety software and enable some Linux features that allow you to mount root from an encrypted file on the flash, that contains another encrypted partition with your software.(double protection) Your BCM firmware will generate a top secret once off auth key based on some clever algorithms or public keys and pass it to your custom linux kernal, which will load the encrypted root partition and do some more cryptographic stuff during boot to load your encrypted software drive within the encrypted image. 

It could be a weak power supply or something running on the Arch that causes it to hang. Difficult to say. You need to inspect logs and try and work it out. Maybe the Pi itself is damaged? You can use the built in watchdog to reset the Pi if it hangs though. 

You may also want to consider using nginx with rtmp-module. You have to compile it and you can find a guide I made here. You will have to skip a few part as that guide is to use the Pi Camera module. I used these keyframes and it works really well. All you have to do is package your stream as flv and direct it to localhost nginx-rtmp. It has allot of other features. in the server part you put this in 

If you want to make a true Commercial application, then the Pi , as it is in its end user form is no good to you! You will have to design your own PCB, use the processor that is on the Pi for example and embed a flash memory onto the PCB. 

I am sorry but there is no such thing as a 2A or any amp battery. There is rating symbolised as ,,. When you say 2 I assume you mean 2Ah with the 12volt battery. It does not mean you can use 2A maximum. You can draw 5Amps from the battery if you want. Some more information can help 

But really relays are for high power, 24volts up to 220volts and heavy loads that use dedicated power supplies not connected to Micro controllers. You can get rid of the relay and just use a 2N2222 / TIP127 transistor to drive the motor in one direction. Use a Diode for flyback protection across the motor. 

Luckily you don't have to write any code as there is something called PixelPi that already knows how to talk to these guys. Powering Long pieces of LED strips need allot more power than you might think. 

keep the data in a buffer (memory stream, string) flush the buffer (copy the data from the main buffer into a new buffer, then clear the main buffer to allow new data to continue coming in) Open your data in an append mode, Write the temp buffer into the file and SAVE the file. Dispose or clear the temp buffer. 

The image demonstrates the concept of using a transistor to switch the motor on and off. This circuit ONLY works with DC currents! 

Low and high voltage here are relative to the GPIO of the Pi. 3.3v is low voltage and 12volt is high voltage, since they are not compatible. Software You can use any software you like. The most popular for the Pi is Python, because it has a rich library for GPIO, Touchscreens, GUI, Webservers, etc. Since you not sure about the software you should concentrate on this before getting to the wiring part, which will be easier for you any way. 

Write a using Visual Studio Community (or Professional if your business will fork out the expense - recommended) You must work out how you want to or how you "can" connect to your PLC in the first place. It may have a IP/LAN interface? Maybe RS232? We do not know, get the technical details from the manufacture and the protocol specification. Then in C# you write your implementation. IP would be easier than UART (RS232) as it is easier to do webrequests or API requests in a single line where UART requires a bit more setting up, etc. Then you can deploy your UWA to any Windows 10 machine, like a Phone/ Tablet or in this case dedicated Raspberry Pi.