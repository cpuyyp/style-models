proxy-arp is a networking black witch I will personally burn at the stake whenever I come across her. Her magic is only needed in dark corner cases - leave it disabled, unless you really, really, need it. However, ip unreachables are a blessing when it comes to reduced-MTU links as in your case. They make sure that the router can inform a host to send smaller packets - especially for UDP applications; TCP is taken care of by ip tcp adjust-mss. Unfortunately, not all hosts will respect or understand these "packet too big" messages, but that's their problem. ip verify unicast reverse-path is good best practice, it prevents ip source address spoofing, by allowing only those source address ranges (incoming) on an interface for which a route exits in the reverse direction through that same interface. That makes it harder for your internal systems to be part of a bot army working with spoofed source adresses. 

Caution: NVI NAT can be VERY taxing on the CPU of low-end routers like the 800 series. Where my old 881 used to be able to deliver 50-60Mbit/s with classic NAT, switching over to NVI caused the throughput to drop to 20-30Mbit/s and would have the CPU glowing red when under load. That was also the case when the to-be-hairpinned translation was not actually in use, just with traffic matching the normal "interface ... overload" outbound NAT rule. 

(Disclaimer: I am not familiar with HP switches, so I wont' be able to give proper command syntax for show/display commands). For a first, let's leave all routing discussion aside. AS5500 an AS3100 are on a common subnet (172.16.1.0/24) on VLAN1, so they must be able talk to each other directly. Accessing AS3100 from "elsewhere" is for later, we first have to solve a switching problem - or confirm that we don't have one. Here's two test procedures to see if VLAN1 is actually "going through", i.o.w. if it is one single broadcast domain spannig both switches 

... and that's what the config guide suggest. I suspect the problem is on the netflow analyzer side. Please verify that PRTG actually supports netflow lite. My current understanding from what I can find at paessler.com is that netflow lite is not directly supported, and that eventually, you might need to convert netflow lite to classic netflow with some kind of itermediate service (such as $URL$ Using one of the tools at $URL$ might help with the analysis. One more thing: Instead of naming at least three related config items "toPRTG", I suggest using a config style as outlined below. It helps to track what is what, and to keep track of all the needed config bits. In short, it helps to understand the config concept. We use similar config styles in larger multi-tenant QoS configurations (that we maintain manually), so we can keep track of the per-tenant class-maps and policy maps, the ACLs to go with it etc. In general, we put a Prefix in there describing what kind of config item it is, the customer's name and the name itself. This then might look like this: PM_QUE_CUST01_WANPOLICY01 or CM_QOS_CUST04_REALTIME-TRAFFIC. So here's what I suggest for a netflow config: 

We have a scenario where a customer is having a managed L3VPN installed and would like to run OSPF internally. The issue is that the provider will not allow us to provide and manage the CE device and they will only use BGP as the CE-PE protocol. They've told us that we can run OSPF internally and form a neighbourship between our L3 switch and their managed CE. They will then redistribute the routes into BGP and in turn, advertise those routes to their PE. That doesn't seem like a valid design to me. That means at each site we'll need to run an instance of OSPF in area 0 and as far as OSPF is concerned every site will be a different autonomous system, right? Due to the BGP in the middle (between managed CE - PE) the routes will be external OSPF routes and we wont be able to connect our area 0's together. I think it will work for now but I imagine it will cause headaches in future if we try to scale or make the solution slightly more complicated. I think if we ever decided to have a backup leased line or VPN tunnel the LSA's would be type 2 and therefor a preferred path than the external routes caused by type 5 LSAs. I know OSPF as a CE-PE protocol is valid and would essentially address all the concerns above but I think that option is probably off the table. Are there any caveats/concerns with the solution above? Should we be pushing harder for the provider to run OSPF as the CE-PE protocol? 

I think you're not understanding that the DNS query and the HTTP request are different packets and thats whats confusing you. If you try to visit www.cool-site.com and you do not know its IP address then DNS happens first. The DNS process follows the whole encapsulation/decapsulation process like any other packet would. Your machine will realise it does not have an IP for www.cool-site.com. Your machine will build a DNS query and send it to the DNS servers you have specified (statically or ones it obtained via DHCP). Assuming the DNS server knows the address it will respond back to you with a DNS response containing the domain name and the IP address. Now the machine knows the IP address it can build a new packet for a HTTP request and put the IP address as the destination IP in the packet. The server knows where to respond because in the HTTP request packet there is a source and destination IP within the IP header (like all packets). The server will respond and put its own IP as the source and use the source IP in the previous packet as the destination. How exactly the packet is built in regards to grabbing the IP that was received from the DNS query and putting that in to a packets destination IP field I'm not clear on. The operating systems network stack obviously handles this but I can't give more information than that because I'm not sure on the whole process. Maybe someone can comment with some extra information. 

The ppp ipcp route default from the dialer0 interface will install a route with administrative distance 1, overriding the above one while the PPPoE session is up. 6. LAN interface, DNS and DHCP The 881 has an integrated 4-port switch which you need to treat as such. You cannot assign IP adresses to its individual interfaces, but you need a VLAN and an SVI ("interface vlan") to go along with it. In this case, we'll use 192.168.10.0 and VLAN10 as internal network. Adapt accordingly to fit your network situation. 

That is a must-have when running PPPoE, each IP packet on interface FastEthernet4 will get an additional PPPoE header of 8 bytes, so you want to reduce MTU for interface dialer 0. 

These tests should help to establish if VLAN1's broadcast domain is actually "going throgh" across both switches. My suspicion is that it is not. I spotted a difference in your config: AS5500: 

To rephrase ar_'s answer - please give the credits to him, if you are going to award them. Copy the configuration section with the "interface vlan XXX" statements into a text file. That will look somewhat like this 

Educated guess: The on AS5500 that IMO should not be there. Edge-Type ports are for the edge: PCs, printers, servers etc. Never another bridge/switch. I suspect that it has some influence on how the switches treat untagged traffic. Since VLAN1 is often being used as the default ("native") VLAN, frames from VLAN1 are usually sent without tags. What if one switch tags them, but the other doesn't, or expects them to be tagged, and drops incoming untagged frames, or maps untagged frames to another VLAN? There might also be a difference in default behaviour w/regards to tagged/untagged frames of the two different switch models - you'll have to consult documentation to find out. 

8. other clever bits to have There's some clever config bits here and there, and I'll comment them here 

You could consider "inside source NAT"-ing this particular incoming traffic into two seperate source NAT address or (better) address pools of private addresses, each implemented by firewall cluster 1, resp. 2. So not only would this traffic be destination NATted when coming in (making the server's private address reachable via a public address), but also source NATted. Then, from the core switch, route source address pool1 to firewall cluster 1 and source address pool 2 to firewall cluster 2 (possibly with static routes, but eventually, that's up to your internal routing setup). While technically feasible, there are several important caveats that come with this proposal: 

It is not possible for a switch to have a MAC address assigned to more than 1 port. When a MAC address is seen on a new port the switch simply updates its records to show the MAC is on the new port, overriding the old entry. Loops can cause the switch to do this at an excessive rate and is called a mac address flap. Usually switches will log mac address flaps to the buffer/console. If I understand you correctly then you are saying that your default gateway address is 10.0.0.1 and someone else also assigned their computer 10.0.0.1. That wouldn't confuse a switch as a switch doesn't care what IP you have, a switch works at layer 2 and deals exclusively with MAC addresses. What is more likely is that due to the duplicate IP address, some of your clients were ARPing for 10.0.0.1 and receiving the real routers MAC address and some were receiving the 10.0.0.1 clone MAC address and sending traffic there instead of the router. Any traffic going to the clone would have been dropped. Any traffic going to the router would have been forwarded (assuming its configured correctly). This could give the impression that the switch or router is dropping packets but in reality the switch is just forwarding the traffic to the destination MAC address that the clients requested. 

Looking at your question it looks like you're confusing DHCP and routing. To be clear, they both accomplish different tasks and really have nothing to do with each other. DHCP is a way to dynamically assign IPs to clients. Routing allows you to get from one network to another. To answer your question.. There are really two ways in which your computer will know there is a router on the network. Either because you have manually assigned an IP address/subnet mask with a default gateway (default gateway being the router), or because the computer has been set to request an IP via DHCP and within the DHCP offer it received from the server it contained a default gateway for the client to use. The client will not attempt any communication with a router until it has an IP address and default gateway configured (again manually or via dhcp). The computer will then look at its own IP address and subnet mask to determine if the IP address it is trying to communicate with is on its local network. If it is then it will attempt to send the data straight to the device and if it is not then it will look at its configured default gateway (router) and send it there. The router will then send the traffic to the destination because it has a route, or to another router that might know where the destination network exists. 

The Catalyst 2960-X supports what is called netflow lite, not full netflow, and for that, it needs at least the LANBASE license. See "Prerequisites" on $URL$ (publically available Cisco Doc). See the outputs of or to check the license on the given 2960-X. We have seen cases where a Lan Lite switch would accept commands for unsupported features without returning an error - and the feature would just not work. That being said, I don't see where the error in the config might be - we have 

To me, this looks perfectly normal. I don't think that these captures are identical. Looking at the TCP headers of the the first frame (TCP SYN), you can see that - although all other properties are identical - the sequence numbers are different. EDIT: Oh.. there is also MSS clamping going on - ASA rewrites the MSS field from 1460 to 1380, on both the SYN segment from the initiator and the SYN-ACK segment from the responder. I think this is ASA's TCP sequence number randomization at work. EDIT: And the ASA performs some TCP MSS manipulation, too. Other than that, I would sincerely hope that all other properties of the frame/packet are unchanged when it is incoming through one of the port channel's subifs and exiting through the other (give or take NAT rewriting things a bit here and there, but NAT is quite obviously not in use here). 

Disclaimer: I am not suggesting to add any form of redistribution of internal routing information to an eBGP peering to an ISP. Please make sure that you know exactly what you are doing (and why), if you consider doing this. To answer your concerns about the eBGP peers not being directly connected: In that case, the stability of the adjacency is your concern, not BGP route dampening. There's ways to tune or help BGP a bit to allow for faster detection of connectivity issues between peers: $URL$ $URL$ , Section "BGP Fast Peering Session Deactivation" The best option might be to talk to your ISP and ask them if BFD based BGP peering is available, or (big style) what kind of redundancy options they have on offer. 

Find A3100's and AS5500's MAC address for interface VLAN1. We would expect these MAC address to appear in a neighboring device's ARP cache after trying to talk to it. HP's equivalent of should show these MAC addresses. configure one switchport on both of the switches, into VLAN1, untagged. Configure a laptop's NIC with 172.16.1.xx and connect it to both ports in turn. Ping both AS5500's and AS3100's IP addresses from that laptop. Ensure that the laptop actually attempts this from its 172.16.1.x address (e.g. by keeping any WiFi or 3G/4G interface disabled for the test). Write down the test results, and see if some pattern of ok/not-ok appears. No matter if the pings work or not, always look at the laptop's ARP cache ("arp -a" on windows, "arp -na" on a *nix-like OSs). See if and which MAC addresses are learnt for AS5500's and AS3100's IP adresses - they should be the ones from step 1.