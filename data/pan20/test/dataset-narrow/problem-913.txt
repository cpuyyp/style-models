A subdirectory of an apache (ver. 2.2.22 on ubuntu 12.04) vhost webroot is a disk partition of its own. Accordingly, there is also . In my apache error logs I find errors that cannot be read, with a referer like (i.e. when a directory index of that dirctory is displayed to the user). 

Do they all return the same info (especially, serial number)? Finally, also check the name server entries published in 

Sometimes it seemed also that they were simply rejected as if having entered wrong credentials (which they have not, most have saved their credentials) Question 1. Can you explain what is behind this, specifically regarding the "it could not be verified": How does this verification take place if it works? After all, the redirection would not even be attempteed if it were not initiated by broker ... What we tried: Sometimes it helped to replace the name the client connects to with something else (i.e., we added a name "foo" to DNS that resolved to the same IPs and had users connect to "foo"), but this was far from consistent. Later we noticed that always the same few servers appeared as "farmmemberX" in the above error message. We experimentally removed these from the farm (at the members themselves and in DNS) and were thus able to reduce the broken eight server farm to a functional two server farm. As this would not be sufficient tor out user load, I wanted to clone one of these; in order to do so I first shut it down and later restarted it - from which moment on it was as bad as the other six servers. Apparently restarting the RDP servers was the fatal thing to do ... According to the logs, this particular server had not been restarted for about two months. So virtually any change made in the last two months could be relevant. Among these are 

UPDATE with info as requested per comments If I set security to "TLS 1.0" (instead of "negotiate") at the RDP hosts, the problem persists. If I set to "RDP" the farm works - but everybody has to enter their password twice. In the error situation, for some reason I now often simply get "No connection could be established with the given credentials" instead of the original error. This is accompanied with a login failure event 4625 with status 0xc000006d, substatus 0. Before you ask: All DCs have their clocks in good sync; no LanMan compatabilty settings have been configured in the registry. The certificates on the RDP host client settings that worked were issued by the still trustworthy internal CA (trusted by all as per GPO) and valid until at least four months in the future. For testing I cheanged these to "automatic" certificates and back, without success. The original German error message text reads 

Apache looks for all the way down along a folder path as long as tells it to do so. So my recommendation is to have (in ) for the root directory and whatever only for the directory (tree) where you need it. 

RDP to TEMPAD and install the AD role on TEMPAD On TEMPAD set a static route to host(!) 192.168.10.36 via 192.168.11.200 From within your RDP session on TEMPAD, start an RDP session to TEMPAD and install DNS on TEMPDNS. It should serve your AD zone; I'm not sure if it should rather serve a crippled AD zone with all references to the 192.168.10.* AD servers removed, see hints below. Add secondary IPs 192.168.10.1/24 and 192.168.10.2/24 on TEMPDNS and enable IP forwarding. Ask a person at the 192.168.11.* site to turn on the problem computer When the boot has completed, start an RDP session to 192.168.10.36 from within your RDP session to TEMPAD. You can now login as whoever you want. 

We are distributing wireless profiles in our Windows domain (AD servers are 2012, domain level is 2008, various client Windows versions - mostly Win7 and Win10). However, it seems we just cannot achieve the goal we want to achieve regarding saved credentials. Under "Computer configuration" - "Policies" - "Windows settings" - "Security settings" - "Wireless network policies (IEEE 802.11)", we created a "Vista and later" policy with one profile, and this has in its security pane the (seemingly only applicable) setting "Cache user information for subsequent connections to this network". 

Your main server should (usually) have a unique MX priority. Otherwise you end up with mail entering at random entry points. The backup mail servers may have equal priority among each others, and this could be useful, e.g. if you want to balance the load among them in case of main server failure. For most situations, a single backup server is fully sufficient, provided it is sufficiently independent (uplink-wise). In fact, mostly it is sufficient to rely on the mail server on the sending side to buffer mail and retry when your server is back up. But you have a lot of better control to quickly transmit the backupped mail if you have a backup mail server under your control. On the other hand, it may even be harmful in case of prolonged (say, a full day) main server failure, if the sender thinks that the mail transmission went okay and there is no need to switch to a phone call for urgent matters (as they might do after warning messages by their own mail server). Of yourse I don't have to tell you that all backup mail servers must be configured properly to actually relay your domain. 

EDIT after comment: It seems that the main blamed updates KB3002657, KB3035017 were either not installed, or had been installed days before the problem started on the relevant servers (clients, RDP servers, broker, DCs), but I'll try with unsinstalling them anyway ... 

As an ad hoc workaround (only in the regretful absence of a loadbalancer), you could accompany the server reboot with suitable configurations at one of its next hops (a switch, a router, a firewall), e.g., 

I'm trying to modify registry entries within HKCU at logoff. The corresponding script works okay when invoked manually. I was afraid there might be issues with a loopback policy kicking in, but according to rsop.msc this is not the case, i.e. the script should be executed. However, the desired effect in the registry is not there upon next login. Is there a general problem simply because the script runs "too late"? If so what can be done? What else could this be? EDIT: I should have specified what my script looks like (minimalized): 

It's KB3002567. An update that soon after its release became known as "breaking RDP" - or in fact breaking everything. Ironically, a quick research after the first encounter of our problems had already revealed this (at least the RDP problems, as that's what we had googled for), so we marked KB3002567 (and a few other suspicious ones) for uninstall on our WSUS (cf. my optimistic remark to that end in the OP) and otherwise frozen update synchronization for the time being. What we failed to notice was that the Windows server 2003 version of this update considers itself as not uninstallable. Thus while we noticed during a test update how the patch got removed successfully e.g. from a Win2008 server, we thought that the removal has occured sucessfully as well on our AD servers (Win 2003) over night (as they begged for nothing, update-wise, on the next day). Since the probelm persisted, we assumed that the update had not been the problem after all (and indeed rdp was not totally broken - we managed to workaround the problem at the expense of user comfort). The Win 2012 version on the other hand was automatically uninstallable. As a consequence, it depended on which server was used for authentication whether RDP worked or didn't work. We wrongly concluded that server reboot made the previously "installed" problem appear - when in fact the reboot just happened to switch authentication server priorities. We also wrongly concluded that our AD migration tests were the cause of problems and demoted and removed the 2012 server, then starting to look for any problems this playing with AD might have had. Since the problem had steadily increased in intensity anyway, we were not too suspicious when we noticed that failure often had turned into failure always at the same day we got rid of the 2012 AD server (though the connection is obvious in hindsight). When our search kept coming up with the same useless suggestions (check that time diff between servers is less than 5 minutes - check, it's just fractions of seconds; check that all relevant group memberships are set - this really gets boring when doing it a second time; check DNS entries - there's really little in DNS that could have gotten wrong unnoticed; check that KB3002567 is not installed - hey, our WSUS took care of that, didn't it?) we began tearing our hair out. When then another hint towards KB3002567 appeared, we finally scanned through the list of installed updates on our Win2003 AD server (heck, that's really become simpler with modern OSes) to surprisingly still find it installed. Uninstall manually, reboot, everybody happy immediately! 

(All servers involved are virtual Windows2008R2 boxes). Suddenly people started getting the following error (translated from German) and failed to connect. 

Even if you do want to run a webserver on the same box, you may want to reconfigure Apache to serve content only for configured hostnames. Of course, this would merely replace the default page with a http error (because the host name is transmitted only after the connection is already established), but may be cleaer and slightly better equipped against attacks/exploits of the webserver. 

to produce custom error messages. The third ingredient is a protected subfolder with authentication required (per in that folder): 

In Windows Active Directory (in connection with Exchange 2010), I am unsure about the semantic difference between and attributes. As far as I can tell, is one-valued whereas is multivalued and (apart from the possibility to include non-SMTP addresses) allows one value starting with as main address and several values starting with as secondary addresses. I think I recall that in former versions of Windows and/or Exchange the main was always kept in sync with the attribute. But I now noticed that these are no longer automatically kept in sync (depending on how one edits the data). So it may happen that I have a user with 

One of my users cannot work with RSS feeds. The problem was originally noticed with Outlook (where we get error 0x800C0008), but we can reproduce the problem with Internet Explorer 

(This is an old question, but still deserves a reply) Apparently what you did was this: You prepared the new name servers to authoritatively answer quesirws for your domain. Then you switched registration (i.e., changed the NS entries for at the parent DNS servers responsible for to point to the new DNS servers); at the same moment the old name servers stopped replying to queries about (or replied with NXDOMAIN or something). As a consequence, the impact - especially for your main audience - was the following: After one 1hr, any data cached at DNS resolvers at Indian ISPs aged out - but only data for your entries, such as A records for . Hence the resolvers would try to query the appropriate name servers for fresh data. However, the info which server to query had not aged out yet: That info came from the zone and had a TTL of 48hrs (so probably still up to 47hrs, let's say 24hrs on average); as this refers to the now defunct DNS servers at the old provider, failures occur as you observed. On the other hand, querying a remote resolver would succeed as it would be unlikely to have a cached copy of the parent NS records. How to do it properly? The following strategies are possible (in decreasing order of preference): a) Ensure that the old DNS servers keep serving your zone for at least 48 hours after transition (the parent TTL), but not much longer. Actually, this is the method I have used most of the time; the old server admin just has to remember to remove the zones at a later date. b) Ensure that the old DNS servers at allow recursive queries (at least for your zone and at least for 48 hours); note that servers that are "official" DNS servers for some zone typically do not allow recursive queries c) Before moving zones, change your local TTL for all records to 96hrs, say. Then wait 48hrs before doing the move. This way, resolvers should typically have a copy of your DNS records in cache that survives longer than the obsoleting NS records. This method is not perfect and becomes problematic especially if there are "cross-references" between domains or if there are records that are queried less often than the main records. d) Alternatively, before moving zones decrease the parent TTL to 1hr (or to as much downtime as you deem acceptable), wait 48hrs and do the move. Howevre, it may not be possible to change the TTL to such a low value at the parent zone.(they don't want to be queried so often) and even if so, you'd have to consider their zone update schedules