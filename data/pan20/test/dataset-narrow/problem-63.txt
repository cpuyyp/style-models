If your servers are in the 192.168.208.0/24 range and on the other side of the Brocade, you will need to make sure that the Brocade has a static route pointing to the Laptop VLAN 192.168.32.0/24 with a next-hop of 192.168.33.1 for return traffic. 

If they restrict scanning to the IP range of the wireless network (highly recommended, you shouldn't have too many issues on your LAN, even if the source of the scan is connected to it. Each scan would be at worst a TCP connection initiated to each IP in a range - bandwidth-wise this would be trivial. 

Ideally you want to use SSH Key-based authentication and move away from user-based as much as possible, but in areas where I need to use username and password logging, I tend to standardise on the following: 

When a host receives a frame, the NIC generates an interrupt for device driver and also does some filtering such as destination MAC address matches one of the interfaces or not, multicast address match etc.. The device driver handles the interrupt and allocates memory for the frame and sets the protocol for layer 2 and forwards it to the respective protocol handler. So, the NIC does some level of packet filtering to reduce the overhead of CPU but the software also do such filtering as it does not depend solely on hardware for packet filtering. In case promiscuous mode is ON for that interface, the check is ignored and all packets are accepted and traverse the network stack. 

The Virtual Circuit Identifier (VCI) is used for reliably transferring packets by L2/L3 virtual circuits and allows higher level protocols to avoid dealing with the division of data into segments, packets, or frames. The VCI is added by the intermediate routers/switches running protocols such as X.25, Frame Relay, Asynchronous Transfer Mode (ATM), GPRS, Multiprotocol Label Switching etc. Less overhead is required, since the packets are not routed individually and complete addressing information is not provided in the header of each data packet. Only a small virtual channel identifier (VCI) is required in each packet. Routing information is only transferred to the network nodes during the connection establishment phase. How it works differs protocol to protocol. Read this link to better understand how VCI changes at every hop and what if the network routers doesn't support any such protocol. At transport layer TCP and SCTP are responsible for providing virtual Circuits. 

This is expected behaviour - see reference: $URL$ Google junos auto-export for policy-based solutions 

If you move the PC from the Help Desk to the related department, it should release its VLAN 2 IP address as soon as you disconnect it (assuming it is cabled) and it should get a new lease in VLAN 5 when it is reconnected. If it is receiving an address via a Wireless LAN connection, then it may be that you have the same SSID on two different APs attached to two different VLANs, which will cause you several problems. 

While technically your access-list can specify any length subnet mask you want, most (good) ISPs will only accept a maximum length of a /24 for prefixes advertised by you. The reason for this is that the global routing table would explode in size (more than it already has) if everyone started advertising /24-/32s. 

@JFL is right. There is no generic solution for gateways as they are just forwarding the connections. But the manufacturer do provide solutions for such configurations on top of a basic router/gateway/switch. Hence different products provide different settings to achieve this and some don't even provide anything like this. Like Cisco has something @Hung Tran mentioned. Brocade provides something like this :: 

ARP is used to retrieve the MAC address of the destination host. At layer 3 it knows the destination IP but when it has to add the L2 header it does not know the mac address of the destination host. So to get the mac address it sends an ARP packet. After getting the response it will update its ARP tables for future lookups. It does not really matter whether it is a end host or router or a gateway. This is how a network stack is implemented and works. Moreover the L2 header is replaced at every hop by adding a new one containing the next hop MAC address 

Set up DHCP-Relay on switch 2 with your server (switch 1) IP address and reference each VLAN interface (eg: ) that you wish to relay for Make sure you have a dedicated scope configured on switch 1 for each VLAN you will be serving and ensure that the gateway for each matches the appropriate interface on switch 2 

I'm not sure that FEC128 is limited to just manual discovery of PWs. I've always used the FEC128 multi-home method described in the link with BGP auto-discovery and it works just fine - if I understand your question correctly. 

I think you need to consider the fact that although both interfaces are capable of different speeds, ultimately the link would only come up if it negotiated at the lowest speed supported by both ends. 

Based on your output above, this specific site is matching blocked category , so something is triggering it. Under what is configured? Check for , and . If there is nothing obvious under , this may be being applied via Group Policy instead (which may explain why it's a problem for some users and not others). In Meraki, group policy config overrides the default configuration. Check under and confirm that no Blocked Website Categories, URL patterns or Web Search filtering is applied here. 

This is a case of port forwarding to the same network. For such DMZ's setups, hairpinning is preferred or having local DNS to resolve for such internal servers. Apart from them there is an equivalent solution for it. The solution is to have DNAT rule for your LAN zone also so that the packet with destination ip 202.192.68.235 from local client can be translated to 10.0.6.35 and routed back to the same network by the router. But again the problem is that the server will try to reply directly to the client since it belongs to the same network. Now to make the server reply the client via router we need to add an SNAT rule that would make the source as router. Your SNAT rule should be very specific such that it applies only for traffic coming from local subnet and destined for 10.0.6.35. This will solve your problem for sure. To summarize you have to add a DNAT and an SNAT rule for LAN interface. 

The only way to establish a connection between two hosts when they are both behind different NATs is to either configure port-forwarding on the NAT devices, or use a third-party server hosted on a public address externally (in which case there is no direct TCP connection between hosts). 

No good ones that I can think of. Perhaps if there isn't a lot of traffic on the link to keep it alive, or it's a ridiculously expensive Satellite link, then you might wind out the threshold a bit. 

If you're on Cisco you could use static mac mapping and . This will send 3 requests from the primary interface address, and if the DHCP server doesn't respond (i.e. the MAC isn't in the pool for than subnet on the server), then it will switch the giaddr in the relay request to the secondary address. If you're not on Cisco, well, this is how DHCP relay is supposed to work. You could create a large supernet on the DHCP server that encompasses both ranges and then use static MAC mappings for the hosts you want on the second range. Personally though, rather than perpetuating bad designs with filthy hacks I would concentrate on removing legacy crap from your network ; )