Now just need to make sure I can browse the internet from the PC tomorrow and I'm all good! Even though I figured it out on my own...hope this helps someone and thanks everyone :) 

If you are running eBGP with several transit providers, what is best practice for redistributing into ospf? Would we want to redistribute the connected/static subnets into ospf? If yes, what is the benefit of doing that? If not, what is the reason for not doing it? Thanks 

Here is what I had to do to get it to work: I had to disable 802.1w on the trunk ports specifically (2/1 and 2/2) under the default vlan on both brocade switches. So spanning-tree is enabled for the actual vlan 510 and the default vlan 50 is disabled on the two ports that go to the cisco switch. Then everything started to work fine. So now I have this in the configs on the brocades: 

RFC2460 defines some extension headers, like hop-by-hop, Routing Options...etc. All these headers seem to have the next header type and header extension length in the beginning of the header. However there is one extension header called "Encapsulating Security Payload" defined in RFC4303 seems don't have this property. The next header and pad length are followed by a variable data, so how can I parse that? Thanks 

As far as I know the FF02 means multicast on the local link, but beyond that are there any correlation between them ? Any tips or references are appreciate. Thanks 

Thanks for Jens's help. After having look for RFC2463. I pre-append the following data for the pseudo header. 

Now with the config like this, connectivity is lost. When I remove either the 5/1-5/2 or the 8/21-8/22 from either switch, connectivity gets restored. The access switch down below has the following: 

I have a single router connected to 2 ISPs..each on their own interface running BGP receiving a default only. Hosts on the inside interface and being translated to ISP1 and going out that interface as that default is installed in the RIB. When ISP1 dies, all NAT traffic drops and does not go out the ISP2 interface. Is this due to the current nat translations are using the ISP1 interface and need to timeout before being able to create new nat translations using ISP2's interface? Any info on this? EDIT: ASR1002 Image: asr1002x-universalk9.03.16.02.S.155-3.S2-ext Unfortunately don't have any logs from the incident as it happened a week or so ago. I'm just trying to understand how NAT translations work when there are multiple ISPs/interfaces involved. Current nat config: 

From RFC2460 :$URL$ the length of the fragment header seems to be fixed 8 bytes. But when I test with Scapy with the default fragment header, from sniffer I can see the fragment header is for one byte? That is the data generated by Scapy seems not consistent with the specification? I'm not sure in the real world, what will this header will be designed? 

The IPv6 payload may like the following: IPv6 Header -> ExtHeader -> ... -> UpperLayer Header I use Scapy to make a packet such that: IPv6 -> Hop-by-Hop-Option -> Neighbor Solicitation [1] However from Sniffer, I don't see the Neighbor Advertisement response. So I try with this kind of packet: IPv6 -> Neighbor Solicitation [2]. Then It's work! Just wondering, the packet format I make in [1] is invalid? So the opposite station doesn't honor it?? Thanks 

I am able to ping out to any other website as well browse on the internet from within the server behind the firewall. I'm just not able to reach any website configured on an internal ip which is an ip being nat'ed. Anyone know what can be wrong? I tried searching a bit online but the solutions mentioned haven't been working. Please help point me in the right direction. Thanks 

I have a PC plugged into a random port 17 but it's not able to get a lease from this switch. The logs show this when the PC tries to renew its ip: 

If I try to ping the remote ip ending in .153, I get a response timed out, the tunnel never comes up and I get the error shown above in the config. Any help would be appreciated. Thanks 

I mean why choose the 104 bits as fix prefix, and just use 24 bits of the unicast IP address as variation. I also know that "all nodes on the link" defined as : 

Recently I study RFC 4291, and the solicitation node address is defined in that spec. I know what and the function of this solicitation node address. But just wondering why does the address design as 

So concatenate all this data, send it to the check_sum algorithm[this part is same as icmp], we can derive the correct checksum! 

I also try with Managed mode, but the program launch fail. Hope this post will help anyone who are interested in this field. 

Anyone know how I can get this to work properly and so that once the PC's get a lease, they will be able to browse the internet, etc? Thanks UPDATE I made the following changes and now the PC is able to get a lease. added a new vlan and put port 17 into it along with creating a new ve instance 

I found out what the problem was. In the transit provider's route-map, there was a match for a prefix-list that was denying prefix advertisements for certain blocks. Correcting the prefix-list fixed my issue and all is good. 

I can see the nat translations on both edge routers from the respective subnet configured in access-list 31 however the traffic is not actually passing to the outside. I am also redistributing a default route from BGP into EIGRP on both edge routers. NOTE - when I remove router2 from the equation, the traffic starts to pass via router1 perfectly fine again or if I connect ISP2 into router1, NAT'ing works as expected and passes traffic properly as well. What would be the reason for this and how can I fix so that both edge routers are NAT'ing properly to the outside? Thanks 

Referring $URL$ I try to deduce the c code for calculating the checksum for ICMPv6. But check with the checksum parse by wireshark, I find that the answer got from my code is wrong... the checksum parsed by wireshark is 0x8e73. the following is my code, that is exactly same as mentioned in RFC. NOTE : the array data is the raw data got from the ICMPv6 

After doing some research on the internet: I found some of the adapters can do TX when they are in monitor mode. This is the reference, and from this reference I bought TP-LINK TL-WN722N. $URL$ And from the github open source, I found a really interesting project. Here is the link: $URL$ This is a Python project, and it can be simulated as an AP. Follows the instructions on the git-hub, I successfully launch this fakeAP in the monitor mode. And from sniffer, I can found the beacon frame are sent from this fakeAP. The blue rectangle is the beacon frames, and the red rectangle is the SSID I specified in the program. The following is the sniffer: 

I'm working on an ASA 5510 fw running 8.2(5) and I'm having the following problem. I'm logged into a server behind the firewall and trying to ping the public ip of a website hosted on a different server behind the same firewall. The ping is failing and I'm seeing entries like so: 

I have 2 foundry devices running 802.1w which are both connected to an access switch which also runs 802.1w. The 2 foundry's are connected to each as well. I have the vlan configured on each of the devices to participate in spanning tree however when I add the tag/trunk ports to the vlan, the end devices configured on the access switch lose connectivity. As soon as I remove the tagged ports from the vlan either on switchA or switchB, the connectivity gets restored. It's not making much sense to me why it doesn't work when the tagged ports are added to the vlans. SwitchA vlan config: