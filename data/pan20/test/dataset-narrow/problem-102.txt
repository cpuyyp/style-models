Primary issue: When I look at your spanning tree output for switch 1 and switch 2 they show different versions of spanning tree protocol running for VLAN 1 and VLAN 4 on the same link connecting them together. That is not right. From the Spanning-tree output on Switch 1 you see, 

If you create a sub-interface for VLAN 1 on the router and then shut it down the router will send the CDP packets on the next lowest VLAN - they will be tagged since the native VLAN on the router is still VLAN 1. The switch will receive the CDP packets from the router but because you disabled the router's VLAN 1 sub-interface, the router will drop the incoming CDP packets since the interface it sends all untagged frames to is shut down. If you then change the native VLAN on the router from VLAN 1 to the lowest VLAN sub-interface, the CDP packets sent by the router would be expected to be untagged but this is incorrect - they will still be tagged. Whether this is a design feature or a bug in the IOS, a router will send CDP packets tagged from a sub-interface if it is configured with any VLAN that is not 1, even if you have configured the VLAN as native. The router will receive the untagged CDP packets coming from the switch though, since there is now a configured sub-interface in the up state that is set as the native VLAN. From a Security standpoint you would not want to change the native VLAN on a router to be a sub-interface used for data traffic. You could create one just for CDP but I do not see the benefit of moving CDP off of VLAN 1 on the router. 

Determine if your switch is sending tagged or untagged CDP packets to your router (did you change the native VLAN on the trunk?). Are you blocking the incoming CDP traffic on your router because you created a sub-interface in VLAN 1 and shut it down, or do not have a sub-interface with the same VLAN as the incoming tagged CDP packets. 

The Cisco switch model makes a big difference in whether or not you hit a bottleneck on the stack ring - more than the raw bandwidth numbers will show. The 3750(G) switches had a much different stack architecture (Stackwise) than the newer StackWise plus on the 3750(X) and the Stackwise-480 found on the Cisco 3850 switches. The 3750 stack will not do local switching - every Ethernet frame going from any interface to any other interface will go across the stack ring. This includes traffic going between interfaces on the same physical switch. Stackwise also does what is called source stripping, where the packet is removed from the ring only after it returns to the source switch. The 3750X with StackWise Plus and the 3850 switch with Stackwise-480 can do local switching mainly because it has centralized design for all layer 2 and layer 3 protocols. The 3750 uses distributed design for the MAC address table and SPT. There are other inherent reasons in the different designs as well. $URL$ How would this affect your theoretical bottleneck question? If you have a large amount of locally switched traffic (servers to database etc.. ) you can hit a bottleneck on your stack's ring before even getting close to your maximum upload capacity on your uplink. The paper you want to read to understand the differences between these different stacking protocols and which also discusses throughput bottlenecks is the, Cisco StackWise and StackWise Plus Technology white paper, easily found with a google search. If you search for stackwise plus white paper it will be the first Google search result. 

Cisco has a large listing of Syslog Messages and Severity level here: Syslog Messages This list includes Syslog Messages for the following: 

You can only deactivate Time-Based Keys as per the Cisco Documentation. The permanent key must be replaced with another permanent key with fewer features. 

There are a few strategies to deploying AnyConnect. The Cisco AnyConnect Secure Mobility Client Administrator Guide, Release 4.4 describes them in detail including client prerequisites and configurations. 

Note that by themselves, VLANs do not enhance security. They simply limit broadcast domains. If the world was only as big as your diagram above, sure, traffic would always be isolated within a single VLAN. In the real world, traffic needs to be routed in order to be useful. You must control traffic between the VLANs with a layer-3 aware device such as a layer-3 switch, router or firewall. 

You are receiving the error because the "password" you are entering is not a proper MD5 hash. Check to verify that you are trying to enter a complete MD5 hash and that it is not another type of hash. Cleartext, Type 4 or Type 7 passwords will not suffice. You may be trying to use a password obscured by a Vigenère cipher. The Vigenère cipher is often refered as a Type 7 password. It is associated with the and commands. Type 7 password hashes look something like this: 

R1 likely does not have a route to and R0 likely does not have a route back to . By default, a router will add connected routes into its routing table. This means that R1 will know how to get to , and . The router will not dynamically share or learn its routes with other routers without a dynamic routing protocol such RIP, OSPF, EIGRP or BGP. A router can be configured to statically install routes as well. A common example is a default route or "all zeros" route. One solution would be to run a dynamic routing protocol across R0 and R1. Another solution would be to manually configure static routes on R0 and R1. Static Routes 

In GNS3, by default, nothing will persist after reloading your project unless your Docker Container is configured to do so. Your Docker Container may not be configured to have persistent data. This behavior is described in the official GNS3 documentation. 

The simplest solution would be to add a dynamic routing protocol such as , or . Then raise the Administrative Distance of the static routes so the dynamically learned routes are preferred. These static routes with the higher administrative distance become floating static routes. 

I admit, I have never attempted this before. However, it appears you should be able to with a properly configured custom "Event List". According to the Cisco ASDM User Guide (excerpts): 

Prefix Length - The longest-matching route is preferred first. Prefix length trumps all other route attributes. Administrative Distance - In the event there are multiple routes to a destination with the same prefix length, the route learned by the protocol with the lowest administrative distance is preferred. Metric - In the event there are multiple routes learned by the same protocol with same prefix length, the route with the lowest metric is preferred. (If two or more of these routes have equal metrics, load balancing across them may occur.) 

Change the spanning-tree mode on Switch 1 to Per-Vlan rapid spanning tree mode to match what you have on Switch 2, spanning-tree mode rapid-pvst Flap the link on both sides connecting Switch 1 and Switch 2 using shut and then no shut on their respective interfaces. And if that does not fix the issue, reload Switch 1. 

When you see the spanning-tree type is P2P, it means it is running rapid per vlan spanning tree protocol or in the case of Switch 2 PVST (though the output of show spanning-tree is different from what I would expect). When you see "P2p Peer(STP)" it means that it has fallen back to common spanning-tree protocol (aka 1 STP instance for all VLANs running on VLAN 1). I think that you have mixed your configurations and your show spanning-tree output - meaning that the show output was taken after you made changes to the running config. Before doing anything I would do a "show interface status" and see if switch 1 or switch 2 has err-disabled one of the VLANs on the trunk port. This is just out of curiosity and to pinpoint the real cause of your problem. Flap the port (shut/no shut) if you see it is err-disabled on a vlan basis. I would fix this by doing each of the following steps in turn and check if it fixes the issue. 

CDP frames can be sent tagged or untagged. I think it is better for you to read directly from the linked CIsco tech note that explains the behavior pretty well and is specifically written for your scenario - a switch sending traffic to a router using sub-interfaces. $URL$ To summarize though, in order to satisfy the Stack Exchange requirement for post, Important The behavior of CDP can be very different depending on which software platform (IOS, IOS-XE, IOS-XR, NX-OS etc ..) you are running. The Cisco document linked above is for general purpose routers and switches running IOS. Summary Common behavior for both types of devices (switches and routers) is that CDP always chooses the lowest VLAN to send CDP packets. Whether it is tagged depends on configuration on either devices. Switches always use VLAN 1 to send CDP packets since VLAN 1 can not be removed from the VLAN database. If you have not changed the native VLAN for that trunk port then the CDP packet will be sent untagged. If you have changed the native VLAN on the trunk port then the switch will send the CDP packets tagged on VLAN 1. Routers will use the lowest VLAN configured on a sub-interface (that is in the Up state) to send the CDP packets with the following exception. If there is no sub-interface for VLAN 1 the router will use the primary interface to send CDP packets. It uses the main interface since it is in VLAN 1 by default and VLAN 1 is considered the native VLAN on the router. 

I see some good suggestions already that you should follow plus I have some other observations for both good practice and what I think is causing the real issue. Secondary Issues: 1. I see you are using both DTP and VTP on switch 1 and VTP on the other switches. You should hard code your trunk mode on all switch-to-switch links and turn off DTP negotiation with the no-negotiation command. Note: Only after you do manual pruning (switchport trunk allowed vlan xxx) should you stop VTP changes and pruning by changing the VTP mode to transparent. I do not see any VTP configs in your show run output so I am going to assume you are running VTP version 2. 

There is another feature of to consider: External Routes. One trick I have used to influence EIGRP Primary and Secondary paths over DMVPN is to use a dedicated EIGRP AS for the secondary path and then redistribute it into the primary AS. Redistributed routes will be injected into the EIGRP process as External Routes. Externals Routes will have an AD (Administrative Distance) of 190 by default and therefore be less preferred. This is not always optimal nor can it always be applied in all use-cases but it is something to consider. 

In the event of all things equal and the routing process supports it, equal-cost load balancing will occur. Exactly how the router handles the load-balancing depends on your configuration, version of IOS and potentially your router platform. Cisco dives into the matter with the following documents. 

By default, the router will install the route learned via EIGRP into the routing table. This is because EIGRP has a lower Administrative Distance than OSPF. It should also be noted that both learned routes will remain in their respective routing processes. Thus, the router knows about both but will only select one route when routing. Routers select routes in the following order: 

What does it look like in the routing table? The following is an example output of EIGRP speaking routers with an equal-cost route for : 

While you may not be able to tell whether queues are explicitly being congested from the reports, you are often able to tell whether tags are being properly applied and honored. 

WAN interface is a vague term but it has a couple widely used meanings. @RonMaupin has given a great description of what WAN interfaces mean to enterprises. In addition to his description, I would also add BGP as another important WAN edge protocol. However, WAN interfaces often have a slightly different meaning for SOHO and Small Business networking devices. The WAN interface is often a routed interface with a few additional features preconfigured. The features are bulleted below. The remaining ports on such a device are often switched interfaces. The purpose is to accept an ethernet handoff from a device such as a cable modem or DSL modem and provide internet access to the switched ports/interfaces. 

To oversimplify, devices running STP will broadcast BPDUs and listen for duplicate messages. If duplicate messages are heard, a loop will be detected and the STP domain will converge by blocking the appropriate ports. Many consumer-grade devices do not call out support for IEEE 802.1D or newer flavors of STP such as this common D-Link switch. Consumer-grade devices, without this mechanism, can form a loop between itself, or with another consumer-grade layer-2 device. The rest of the broadcast domain could be then subjected to the resulting crippling, broadcast traffic even though it is not a part of the actual layer-2 switching loop. There are some mechanisms (such as Storm Control) and strategies to reduce the risk and the effects of the negative traffic but they are outside the scope of this post. 

Aside from CLI show commands, you may want to look into 3rd party software with traffic visibility. I cannot give specific names as applications and vendor recommendations are off-topic. However, there are a lot of options out there that give granular visibility of the traffic flows and break them down and track traffic tags such as IP ToS. Look for applications with NetFlow support. Cisco basic NetFlow v5 will track the following information: