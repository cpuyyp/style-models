I found out you can fix the dhcp issue on the cloned image by starting the dhcp server manually to get an IP from the local DHCP server and then uninstall and install the dhcp client again with 

The way to boot from USB has changed. The latest raspbian image 2017-04-10 supports direct boot from USB and you just have to copy the downloaded image via dd or windisk32imager to your USB device. In the past you used an SD card to boot and then switched the root device in cmdline.txt to /dev/sda2. That's the way for Raspi1, Raspi2 and Raspi3 to boot from SD card but run everything else from USB stick. Raspi3 doesn't need the SD card any more. There is one important step you don't have to forget when you want to use Raspi3 to directly boot from USB: You have to enable boot from USB only once in your Raspi3. It sounds you didn't do this. You wrote you want to setup a clean system. So I suggest to execute following steps: 

Assuming pi_0 has IP 10.0.1.1 on the external network and www is the connection to the internet. Just enable routing (add net.ipv4.ip_forward=1 in /etc/sysctl.conf) on pi_0, define a static route on the router to the pi_n subnet (route add -net 192.168.1.0/24 gw 10.0.1.1) and set the default gateway to pi_0 on all pi_n (route add default gw 192.168.1.1 eth1 ). 

Download the 2017-04-10 raspbian image, copy the image via dd or windisk32imager on your SD card and modify the cmdline.txt (see your first link) echo program_usb_boot_mode=1 | sudo tee -a /boot/config.txt Boot the image from SD card which will enable the USB boot mode on your Raspi3 forever. Check with vcgencmd otp_dump | grep 17: 17:3020000a Copy the 2017-04-10 raspbian image via dd or windisk32imager on your USB stick Plug in your USB stick,remove the SD card and reboot. Your Raspi3 should now boot from the USB stick successfully :-) 

handle takes into consideration that will trigger once the Pi is rebooted. You can schedule tasks very 5 Minutes or every 12 hours or Sundays at 12:00. Here is a link which will help you with Cron Jobs on RPi If you are the programming geek type you can use schedule PyPi Module where you can schedule tasks by programming it. Note Since you mention that the Power supply may not be constant, chances are that your time on your Pi will start varying to your real time. Example, if today is Tuesday 12:00 PM and if you Pi was off for some time then the time on your Pi may vary Monday 14:00 PM in this case you can use your Network's NTP server to sync back the time or use an RTC module which maintains the time even when the Pi is switched off. Your Queries 

Are there any other ways to tackle this situation? The only possible way is limiting the current from the Sensor board to close it to but that could be the last resort for this problem. Can I use adapters that have higher current ratings? e.g. current ratings and even if I do use them will they help to overcome this problem? Clear Inferences 

Also it would be better to analyze any errors in the script by using a subshell and sending the STDERR to STDOUT. 

External USB Dongles Tests with following Drivers on the dongles for creation of ad hoc networks were conducted: | Driver Name | USB dongle | | Ralink RT5370 | LogiLink WL1045A v.2.0 | |Ralink R8188EU | LogiLink WL1045A v.1.0| In order to check if any USB dongle one uses features the above mentioned drivers perform the following command: 

Hi I tried this Patch for Raspberry Pi 2. I have a Raspberry Pi 2 Model B and I followed the README manual and My WebIOPi actually works. This will definitely work according to my assumptions. NOTE : This will work for WebIOPi-0.7.1 on a Raspberry Pi-2 Model B with 1 GB RAM 

There exists a backup tool for Raspberries called raspiBackup. If you restore this backup on a different SD card you're actually cloning your Raspberry. 

If you use Windows the boot partition will be mounted as soon as you plug in the SD card. Open any editor you are familiar with on Windows and create a file called 'ssh' and save it. That way your Raspi will enable the ssh port when booting :-) 

This question is old but I think it's worth to add another answer: There is a tool available called pishrink which shrinks an image to it's minimal size and will expand it to maximal size during boot. Just shrink your image, copy it to another sd card and you're done. 

Addendum: It's also new for me the new raspian image supports direct boot from USB. I have already some Raspi3 enabled for USB boot. I was keen to know whether the new raspbian image boots from USB and I just downloaded the new raspbian image, copied it on an USB stick, plugged it in and I was able to boot from the new image via USB immediately :-) 

The exists a nice tool called pishrink which reduces the size of a dd image as much as possible by shrinking the root partition. If you start up the restored image the first time the partition is expanded to it's maximum size again. If you run Windows just use your Linux on your Raspberry to shrink the image. 

You also can use tar to backup your root and boot partition. tar will backup only used space. To backup the root partition you can use following command: 

The exists a nice tool called pishrink which reduces the size of a dd image as much as possible by shrinking the root partition. If you start up the restored image the first time the partition is expanded to it's maximum size again. If you run Windows just use your Linux on your Raspberry to shrink the image. 

The system returns with the message that libssl-dev is already the newest version. I'm not sure how to fix this problem. I've been googling the error message... haven't found anything relevant to me yet. But I'll keep trying. In the interim thought I'd post here to see if anyone had an idea. Thanks. 

I'm trying to install the list of packages defined in step one here: $URL$ The command I'm using looks like 

Problem I'm just a Pi noobie and so I have some remedial questions. I finished imaging my SD card with wheezy. When I booted up with the SD card, it took me through a setup process and without thinking, I changed what I thought was the login password. Now on restarting the Pi, I'm being prompted for a login. But I don't know what the account name is. I've tried "root" and the new password I specified. But that doesn't work. Also tried "admin" and the new password. Am I right in assuming the default account name is root? If I wanted to reset the account, is the only way to format the SD card and redo the imaging process? Thanks. 

Although I didn't notice any errors when running everything in one step, breaking it up individually allowed me to be explicit and watch step by step. It seems to be getting further now... 

I've tried running "gksudo gparted" to confirm the name of the sd card. From the drop down list, I see that the SD card is called "/dev/sdb". When I select the SD card from the drop down to get details on it, under the Partitions section, I see two lines: line 1 - unallocated partition, unallocated file system, size 4MiB line 2 - /dev/sdb1, fat32 file system, 3.39GiB 

I am trying to follow the article listed below to make my Pi into a PBX: $URL$ I'm on the step where I'm supposed to make mod_dingaling by doing the following: 

Check whether your ssh daemon is up and running and listens on all interfaces. Execute following command as user pi on your Raspberry sudo netstat -tulpen | grep ssh 

Update 7/13: This is an important issue for me. That's why I posted the same question in this forum and consider that post as the primary post for my issue from now on. 

By accident I detected this question. raspiBackup can also be be used to restore the backup created by raspiBackup (See $URL$ So I'm wondering why you're asking how to restore the backup. Anyhow - a main design principle of raspiBackup was it also should be possible to restore everything with just plain Linux tools. raspiBackup saves the boot partition in an img. The root file system can be saved with dd, tar or rsync. So in order to manually restore the backup 1) you have to recreate the partition layout with the information available in sfdisk file 2) format the root partition 3) restore the img into the boot partition 4) restore the root partition with dd, tar or rsync Hope this helps even my answer it's quite late :-) I suggest to place all questions about raspiBackup on the website in a comment because that's monitored by me. Update 11/5/2017: One user of raspiBackup manually restored a backup and described the steps in detail. See here for details 

I have a very nasty issue with Jessie :-( Background: I wrote a tool called raspiBackup which backups and restores a Raspberry and because it works fine for me and helped me multiple times to recover from a SD card failure I decided to publish it. It's already used by a lot of people. Issue: When I restore the clone/backup of Wheezy created with tar the system comes up with an IP address. When I restore the clone/backup Jessie created with tar the system doesn't receive an IP from my local dhcp server. If I start the original image everything works fine. When I restore the clone/backup Jessie created with rsync the system works fine. Backup options used with rsync: -rlptgoDWDEHAXx Backup options used with tar: -cp --selinux --acls --xattrs I also compared the two logs /var/log/syslog from the original Jessie system saved with tar and the restored Jessie system which doesn't get an IP. Original image: