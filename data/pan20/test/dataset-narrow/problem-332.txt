To give an idea of the scale, there are currently 5,361,151 unique values in , and each one of those will ultimately generate order of 10 rows in . Now, populating involves, as I mentioned, a large distributed computation. There is a single dispatcher process for that computation. Periodically, it needs to retrieve the next block of job IDs which have not yet been processed in a particular "locale". The query I have for that right now is 

I have two computers. Computer A is dedicated to collecting data and storing it in its local database. Computer B is for analysis. A is running flat out just with the data collection, so I want to replicate the collected data onto B. The catch is, analysis will generate its own derived data which should also be stored in the database (but only on B). My understanding is that the off-the-shelf replication mechanisms require the recipient database to be read-only. Is it possible to do something like streaming replication, but which allows the recipient database to be read-write? Ideally, the schema containing the tables replicated from A would be read-only to analysis users, but separate schemas owned by those users would be read-write for them. It is okay for the replica to be hours out of date. I want to keep data collection on A writing to a local database, so that it can continue whether or not B is available. (Currently I'm on 9.3 but about to upgrade to 9.4 betas for unrelated reasons.) 

While reviewing my Oracle source database, I am now noticing that the fields that have been imported as DT_WSTR are in fact declared using the PL/SQL syntax - where the the second "CHAR" is explicitly stating the character semantics - rather than the default byte semantics. Thus, in my Oracle database, I believe I need to treat a column with database data type as a character datatype using character semantics, and I believe that means that the field can accommodate 1 character regardless of the byte length of the character set in use. Given the above, SSIS (via the Microsoft Oracle Connector by Attunity) will promote non-NCHAR/NVARCHAR data types to DT_WSTR (as opposed to DT_STR). And, following the above, I will need NCHAR and NVARCHAR SQL Server database data types when importing columns expressed using character semantics. Once I do this, I will no longer have to convert DT_WSTR data types to DT_STR in my SSIS data flows (which was becoming quite tedious). Note, I was already using NCHAR and NVARCHAR for fields declared as such on the Oracle side - expecting to provide the proper storage for these types on the SQL Server side. UPDATE: Here is the docs.oracle.com web page that shows the syntax I describe as follows: 

I believe I figured this out, but if anyone has better documentation or expertise, please do post a separate answer, and I will vote it up and accept it. What I have discovered is that Oracle PL/SQL has a means for expressing the concepts of "byte semantics" and "character semantics" in PL/SQL when declaring character data types. See the Length Semantics for Character Datatypes heading in this Oracle Documentation Web Page where it states: 

I'm starting a few new database projects and I'm attempting to create them at Data Tier Applications. There are two items I'm not able to find documentation for. I would like to set the db owner to SA and set the initial filesize and growth rate. Even if those items are outside the scope of the app, I would expect that there would some way to specify that at publish time, either in SSDT or SSMS. I can find no documentation either way. Is this the case? 

I'm trying to make a multi-statement table valued function and failing due to what I think is a limitation of functions and CTEs. The intended function defines an input parameter(@Param) and and output table(@ResultTable). It then executes a complex insert statement involving a CTE into that table variable which is (of necessity) terminated by a semicolon. I then attempt another complex update statement to that table variable involving a CTE and receive an error saying that "Must declare the scalar variable "@ResultTable". Apparently it has dropped out of scope somehow. I have used this sort of pattern in the past, so my only thought is that the CTEs seem to limit the scope in some way. Is this a known limitation? 

Import it as a string and do a derived column to convert it to a float. Whatever rows fail conversion will be re-directed to the error output and you can at least see what the problem is. Flat File connections fail completely when they encounter problems. It's generally more productive to bring them in as loosely as possible and adding structure inside SSIS. You almost certainly don't want to be using floats anyway. Use 'numeric' once they're inside the package. 

I am creating my first SSIS package to support the E of our ETL from an external Oracle database to our internal SQL Server 2012 databse. Using Visual Studio 2012 and I have installed the Microsoft Oracle Connection Manager by Attunity 2.0 I had this working, then renamed and deleted some files, and tried to build it again when I ran into this problem. When running Source Assistant, I receive the Visual Studio Error: 

Using SSIS 2012 and Microsoft SSIS Connector for Oracle by Attunity v. 2.0. When I add an Oracle Source for a particular table, it is setting the data type for an Oracle CHAR(1) field to DT_WSTR. I have read documentation and searched the web, and I would expect an Oracle CHAR(1) to be DT_STR and not DT_WSTR. Does anyone know why this is happening? Further, when I try to set the data type in my Oracle Source to DT_STR for the column, the setting doesn't seem to stick. Anyone encounter this, and do you have any suggestions as to how to work around it? 

Note: "TERM" is the name of the Data Flow task (named after the table I want to copy with SSIS. This clearly looks like registry damage to me, so I had uninstalled the Attunity copmnent and re-installed it; and I ran a repair on Visual Studio 2012 (in that order); rebooted, etc. No luck so far. Anyone ever seen this before and/or have any ideas how to get back to a working SSIS development? I am working on a development box, my Oracle Connection tests fine, and I can also connect fine to my SQL Server 2012 instance as well.