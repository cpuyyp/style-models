Since you're not changing the netmask or default gateway I'd expect this not to be a problem at all, but I don't have the means to test this right now. 

MEDs will only affect inbound traffic, so that wouldn't help you here. The fact that your ISPs do not support communities doesn't affect your outbound routing either. For outbound routing, you would need some sort of policy routing. You could achieve that by doing source based routing on R1, so traffic coming from S2 would be forced to use another ISP as nexthop. However, you'd lose redundance then. Alternatively, you could put S2 in a seperate routing instance on R1, in which routes from ISPA are not available. That way you'd still have outbound paths to the other ISPs. If this is possible in your setup and how you'd actually implement this is hard to tell without any more details (router brands and types, configurations). UPDATE: That route-map wouldn't work, since your ISPs wouldn't announce your S2 prefix to you, so that access-list will never hit. 

Many vendors provide some infrastructure for automation, for example using SNMP-set, Netconf, Ansible or Puppet. This allows you to build scripts which can pull peer configuration from a database and provision BGP sessions accordingly. Which solution works best is differs per vendor. One very cool example of this is the way Coloclue (a Dutch not for profit ISP) manages its peering sessions: they allow you to do pull requests on their github repository which contains their peering records, and once the pull request is accepted the configuration is pushed to their routers, using peer information from PeeringDB. 

PSTN is only used for dial up and DSL services. Other access technologies use cable, fiber, radio waves, etc. Typically, cellular network stations are connected using one of the latter. There's no such thing as one lowest form of communication in terms of a specific type of carrier. Each one has its advantages and disadvantages when it comes to distance, price, capacity, etc. But you can be sure that most communication between networks isn't done on PSTN, it's mostly fiber. 

DISCLAIMER: This is a really bad idea. The ASA platform is designed to be one system, with hardware redundancy. Therefore, you should ensure that the config always stays in sync, which ensures that the state tables always stay in sync, which ensures that everything works the way it is intended to. But for the sake of education, you could do something foolish. This would likely not be supported by TAC. Technically, you can modify the config on the standby unit, then do a failover to it. When a failover occurs, the newly-active unit does not bulk sync its config or its state to the formerly-active unit. (Meaning, it does not suddenly bring the formerly-active unit up to date.) It does, however, sync updates if you modify something while running on the newly-active unit. The changes you made while standby are not synced, but the changes you make while primary are synced. Moving on, if you like the result of the failover, then you can do a and on the formerly-active unit (or do a on the newly-active), which will then trigger a bulk sync and bring its config completely up to date. Alternatively, if you were not happy with the result of the failover, then you could fail back to the formerly-active unit, where the previous config was still running. Then, of course, you should do a and on the unit that you messed up to bring its config back into line with the way it used to be. Having said all this, I'm betting there are good many situations where you could cause some bad things to happen. Modifying interfaces, I bet is one scenario--if the two have different interfaces and are sending state updates to one another, something could cause some corruption, or a crash. So, this is meant to teach you how failover works, not to teach you how to rig something up with bubble gum and duct tape. You should always make changes on the active unit. If you aren't comfortable because you can't fail back, then find someone who can help you create a backout plan, or find someone who has the skill to get you successfully through the changes you need to make. 

Some VPNs push the default gateway (a /0 netmask) as two /1 networks: 0/1 and 128/1. Since a more specific route always wins, this forces traffic to be routed via the VPN instead of over the default gateway. 

As I said, there's no such thing. You can get an ASN and IPv6 space, but a large part of the internet still only has IPv4 connectivity, so having your services only available on IPv6 will probably not work as well as you'd like it to. You could possibly consider to have a service like CloudFlare or Akamai (or another CDN) to do the IPv4 hosting and connect to your services via IPv6, but I'm not aware if they do support this, and this probably only works for HTTP(S) services. 

source -> dest takes a different AS-path than dest -> source, so there's a difference in networks traversed within each AS on the path (both source -> dest and dest -> source) different routes can be chosen 

Yes, this absolutely is a problem. Don't ever mix different types of cabling. Multimode has a 50 or 62.5 micron core diameter, while single mode fiber typically has a 9 micron core. If you connect two fibers with different core diameters, you'll lose a lot of the light going through the connector, resulting in a link flapping or being down. 

For Juniper devices you can use the command, it shows an overview of all interface counters which is automatically updated: 

One of the symptoms of a duplex mismatch is late collisions. Having your NMS alert you on these collisions is a good way of finding them. At least some Cisco models/IOS versions can send SNMP traps for these collisions. 

The SSG-20 only runs ScreenOS, not JunOS. Juniper switches run JunOS, so this won't help you test your scripts and test configs. Personally, I'd look for a cheap 2nd hand low end model Juniper, but it all depends a bit on your budget. 

When the ASA attempts to send traffic out an interface where a crypto map is applied, it will always process the crypto map from top-down, looking for the first match. Therefore, it will always match sequence 11, and never sequence 16. So the behavior you describe above is normal. One correct way to do this would be to build GRE tunnels with routers, where you can run a dynamic routing protocol to determine the health of the paths. Then, you can wrap the GRE tunnels in IPSec for security. However, you said replacing the hardware is not an option. SDWAN is also another correct solution for this. But, here's an idea for you, though. If the headquarters never initiates traffic to the remote site (or can withstand an outage when the primary tunnel goes down), you could set it up where the 897 performs NAT on the traffic when it leaves the cellular interface, so that it appears to the HQ that it's a different site. The ASA would then see this "new" site as attached to crypto map sequence 16, instead of 11. This would allow the remote site to maintain connectivity during an outage, but its source addresses would be translated. Then, when the primary internet comes back up, the 897 fails back to the primary path, to the primary tunnel, and to the primary address space. It's a bandaid, but it's an option. 

First, there is no dynamic ACL going on here, and stateful inspection is not a factor, either. (But, read the last paragraph for an explanation of how FTP is special.) The firewall will perform stateful inspection regardless of the commands you have configured. Thus, return traffic will always make it back through the firewall because of this stateful behavior, which you can see in the connection table by doing a . The purpose of an statement is to invoke higher-OSI-layer examination. An example would be that the ESMTP inspection will drop connections where the SMTP client attempts to negotiate TLS. As you can see, that would be layer-7 examination to see that some payload did or did not contain something. That's what statements do. In contrast to the statement, stateful inspection is only letting return traffic of already-permitted flows to come back through the firewall on the exact same ports on which they were initiated. That's layer 4 only. Now, getting to the misconfig like the one you posted, my memory is a bit foggy from way-back when I read the documentation on this type of thing. If I remember correctly, the ASA will only process one statement for any given flow of traffic. So, since the occurs first in the , the traffic will be inspected by the FTP inspection and not the HTTP inspection. Now, because of the way FTP was designed (multiple TCP streams, dynamic ports), the ASA's FTP inspection has an extra special behavior. It will dig into the payload of the packets on TCP port 21 to look for operations that will open the FTP data channel (which will use TCP port 20). When these operations occur, the FTP payload will contain the TCP destination port number (some random number above 1024) that shall be used, and the ASA will quickly respond by adding a temporary ACL for the SYN packet of the data channel to pass through the firewall. Once the SYN gets through the firewall, stateful inspection kicks in and grants the return traffic to be permitted automatically. To reiterate, letting the SYN packet through is the function of the statement, where letting the return traffic through is a function of stateful inspection. One final comment: you can actually permit FTP through your ASA firewall without using the statement (despite this port 20 behavior) by simply building an ACL that allows traffic between the client and the server on port 21, and between the client and server in both direction on TCP port 20. You would effectively be accomplishing what the statement is intended to do. But that would be horrendously frowned upon by security folks. In contrast to that, you can not run your firewall without stateful inspection because (1) there is no way to turn it off that I know of, and (2) you would be removing all the security from inside your firewall. 

You can replace the T1 connections with site-to-site IPSEC VPN connections to the central location. This should not have to affect your current IP scheme. I'm not sure if the 2801's you currently have support IPSEC (may depend on the image you're running) and if they're capable performance wise. Depending on the number of nodes connecting to the central location you may need something heavier on the central location. 

As Ron said, anyone can write a proposal. I have a hard time taking proposals seriously from someone who suggests interconnecting satellites with optical fiber, though. Also, I can't imagine this actual proposal gaining any momentum, especially due to this note: 

No, that's incorrect. You're using netmask , so that are two different s. Just because you can summarize them to a doesn't make it a . If you want this to work, you'll need to change the netmask on all devices to , or place a router which is connected to both s and routes packets between them. 

As @YLearn already wrote ICMP ratelimiting on the router with packetloss might well be the cause, because replying to ICMP requests is done in CPU while forwarding of packets is usually done in the ASICs. So this does not need to be a problem at all. A very good guide on interpreting traceroute (and MTR) output was written by Richard Steenbergen a few years ago. He did a nice presentation on it at NANOG. 

The first IP address in a prefix is usually called the network address. In most setups, the first assignable address is the gateway, though any IP address within a prefix could be configured as gateway. So assuming is in a /24 network, would be the network address and the gateway. 

This depends on your switch configuration. If ports are pure layer 2 (switching), it won't affect traffic, but if the switch also provides routing functions (layer 3) it could affect traffic. 

@NickG - The solutions can be varied but as Ron Trunk and Bobstro mentionned, a secured vpn will work. See this cisco centric link below for setting up a vpn. Note:- You could do it with harware from many other providers, even build your linux router to perform the same level of security/encryption :-) $URL$ 

Totally agree with Daniel Dib's response towards scalability and other good points. One of the main issues we experienced towards implementing a layered access ->distribution/core solution is spanning-tree. Lets say you implement an access-> distribution/core solution and you have many buildings/floors/departments with many access switches. What we have seen is when someone introduces (accidentally) a spanning-tree loop the cpu on your core goes through the roof (nearly). ALL of the users cannot use their computers, internet, file servers, etc... and the whole infrastructure suffers. To alleviate this issue, I would recommend to implement an access/distribution -> core solution for your zones/buildings. Keep your vlans and the spanning-tree root roles for these vlans on the distribution switches. Lets say you have 4 distribution switches connected to your core(s) and a routing protocol taking care of your internal routing between the distribution and the core switches, should one of the distribution switches suffer from a spanning tree loop, only that zone is affected and your other three zones/buildings continue to function unaffected. That makes troubleshooting somewhat easier :-) 

You should remove the 3750G (not much flash size for future IOS upgrades) as your core and replace it with two 3750X (or better) stacked together. Also implement stack-power should one of the power supplies fail. Make the core your spanning-tree root if not already. All of your distribution switches should directly dual-connect to the core 3750x stack to provide redundancy. Use etherchannels :-) Dual-connect your access switches to the two distribution switches (with etherchannels if you can), that way should one of the distribution switches fail and they do, the network will suffer from a very minimal outage while spanning tree recalculates. Your servers connectivity could be improved by connecting them to a dedicated datacentre switch. Some of the Dell powerconnect switches are very popular and more affordable in some instances. They should also be in their own private vlan. Don't forget to add a good network UPS to your individual switches and servers, should power fail, you would have time to save your data and perform graceful shutdowns if required. There are quite a few more suggestions to add to your design such as QoS for VoiP, etc , but I guess it is a starting point to provide redundancy and uptime to your clients :-) 

Ask your ISPs for a default route: Each router receives a quad-zero route via BGP. Traffic from the internet comes in to both routers, but traffic to the internet uses one provider only. The other router is a backup. This way requires no memory upgrade in a 2821 router, but it's letting a lot of bandwidth go idle. You will have asymetric flows with this method, but it's nothing to worry about. Ask your ISPs for partial routes plus default: Each router receives the routes that each ISP directly manages, plus a quad-zero route. Traffic from the internet comes in to both routers, and traffic to the internet will use some bandwidth on the second link, but the majority on the first link, depending on how well-connected your two providers are. This way requires no memory upgrade, but you'll need to be careful that you don't cause your routers to reboot if they run out of memory. Ask you ISPs for full internet routes: Traffic from the internet comes in to both routers, and traffic to the internet uses both routers, but maybe not equally. That's okay, though, because it will be best-path, not half-and-half. Basically, traffic will take the path that is best, not the path that keeps your circuits equal. This way will require a memory upgrade for a 2821 router. If you don't get the memory upgrade, your router will reboot continually, each time it establishes BGP and gets the full internet routing table, and runs out of memory. 

I think there's something wrong in the router configuration because this should probably work. When the client PC has no IP address at all, it broadcasts, and the router is able to unicast the request over to the DHCP server using its LAN interface, right? So obviously the DHCP server is able to reply back to the router's LAN interface. So why should it be any different for the PC to do the same thing when lease renewal time comes? The router should NAT it through and the reply from the DHCP server should come back through the NAT. If it doesn't, then I think you have something wrong on the router. You should check that UDP is permitted back through the router. And if the router has any kind of firewall on it, check that it is following UDP connections, to allow them to return back through the firewall. Other ways to solve this problem are: 

No, it's the other way around. TCP creates a virtual circuit, it is not using one: IP is connectionless. Doing error corection and flow control would be possible in the application using UDP, but what would be the point? If you require those, it would make more sense to use a protocol which already provides it, like TCP. 

Unless you're talking about the AS-numbers defined in RFC6696 meant for private use (64512 - 65534), all AS-numbers are assigned by RIRs to their LIRs. 

100.64.0.0/10 is a special IP-range defined in RFC6598, commonly known as 'shared address space'. The typical use of this is that ISP's which are running out of IPv4 space assign customers an IP address from this range and use carrier grade NAT to provide access to the public internet. The most important reason they use this specific range is that it does not overlap with private IP ranges assigned in RFC1918, so application layer protocol inspection will be able to distinguish the ISP's NAT from the client's NAT. So the problem here is that your NAT is placed behind the ISP's NAT. That's why you see another IP when you check your address on a website. You will have to contact your ISP if you need to run publicly accessable services, because at this moment you do not have your own public IP address. 

IANA is responsible for the assignment of IP-blocks and AS-numbers to regional internet registries (RIRs). There are 5 RIR's: 

Since you're not mentioning what kind of hardware you're using, I can only give a general way of approaching this: Try finding out the MAC addresses of the hosts using the duplicate IP address. You can sometimes find this in log entries of the host which address has been 'stolen' or in router logs. If this doesn't work you can try looking in ARP tables of various machines in your network and compare the output for the problematic IP address. Now, you should have two different MAC addresses claiming to belong to the same IP address. You do a vendor lookup on a site like $URL$ This can help you identify the brand of the two hosts, which may help you to narrow down your search. If you have managed switches, you can do lookups on these switches to find out on which port these MAC addresses are being used by looking at the forwarding tables. This should help you find the port to which the problematic host is connected.