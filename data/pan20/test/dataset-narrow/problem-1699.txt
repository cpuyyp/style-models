The base price of any Raspberry Pi contains the fee for H.264 encoding and decoding.1 MPEG-2 is a different codec , whose license fee is not included in the base price. Note that the Pi 3 might be fast enough for software decoding MPEG-2 at no cost. This is legal in France and other European countries. Sources : Official Blog Announcment 

OpenCV does not use GPU acceleration on the Raspberry Pi platform. You can set GPU memory as low as 16 MB (you will lose 3D and video acceleration globally and the camera won't work). 

You should isolate your Pi from this circuit. It is likely that mains current is involved which leads to the go-to solution of 

Older versions of QEMU did not emulate the Raspberry Pi but a "Versatile PB" board. Therefore a custom "Versatile" kernel is running inside QEMU , the userland of Raspberry Pi images works somewhat fine on top of it (YMMV) - as the whole point of the Linux kernel is to provide this very abstraction. See here on how to really emulate the Raspberry Pi 2 with QEMU built from source. 

TL;DR : You don't have to do anything , since you are not doing commercial business. If your offer is explicitly non-commercial you can simply point people at raspbian.org / raspberrypi.org and say "just use apt-get source to get the source code for packages". No need to host anything yourself , no need to include a written offer for source code. This is the special exception in paragraph 3c) of the GPLv2. Please note that the proprietary software in official Raspbian images like Mathematica and Oracle JVM is most likely not redistributable. Remove it before creating your own images. 

To prevent such problems from ever arising again , always always use full-disk encryption from day one on SSDs , SD cards and pendrives. Since you have no idea what the hardware manufacturers are doing i suggest using open-source software (LUKS , VeraCrypt) for that. 

There are several ways to do this. Free but professional configuration managment tools like Puppet , Fabric , Ansible or Chef might fit the bill if you plan to orchestrate a very big fleet of Pis inside your Enterprise. Or use tools which literally execute a command via SSH on multiple machines : 

One could modify rpi-update to detect this , but one would need to use an mechanism to place/write files from inside QEMU on the host system. 

There has been only one Raspberry Pi 3. That is the Rasperry Pi 3 Model B. As of September 2017 the Raspberry Pi 3 Model A doesn't exist. 

The Raspberry Pi supports 1080p@30 fps if the source is encoded with h.264. All other resolutions , framerates and codecs are not always guaranteed to be usable. For example , only the Pi3 with Kodi supports h.265 , but not in 4K at all. 

The problem is not that you've got a dynamic IP but NAT . You need to use reverse SSH tunneling , OpenVPN in client mode or some SaaS service like Weaved , yaler or ngrok. 

"You will need to configure your wireless adaptor later in Linux but for now it is not necessary" means that you don't need to configure your wireless connection again on a Linux distro after NOOBS installs it. NOOBS will automatically transfer the WiFi settings into the Linux install. Needless to say , in most cases a wired connection will auto-configure itself faster and will take precedence over WiFi if available. This will enable you to download things without entering any WiFi keys at all. 

Both the third-party Python picamera API and the official raspivid command-line program support this. picamera calls it "circular stream" and the flag for raspivid is . You really should study the excellent picamera documentation in-depth since it discusses easy and complex applications of circular buffers. One wonders how people not using Python cope, seeing that their Raspberry camera libraries are almost abysmal in comparison. 

This powers on explicitly with "DMT mode 35" which is 60 HZ at 1280x1024 pixels. There is also if you've got enough. For more information try both and looking here for a tabular listing of modes. 

The best example of audio data manipulating GPIO pins is the LightshowPi project. Experience in Python, especially NumPy is tantamount for the success of such a project. Audio input and output is done with the pyalsaaudio module. TL,DR: Learn the mathematics behind the Fast Fourier Transform, learn NumPy. 

The Raspberry Pi 3 cannot act as USB device. The Micro-USB port on the Pi3 is also impossible to reconfigure for data transfer since the lanes are simply not connected at all. The easiest way is to turn your Phone into a hotspot and have the Pi join that WiFi network. Or turn your Pi3 into a hotspot and have your Andriod phone connect to it instead. This does not need an real internet connection on either device ! 

You cannot mix "direct register access" with code using GPIO libraries. You have to select one method and stick to it fom beginning do end, no matter how painful it is. A good example of direct register access, from the author of pigpio: $URL$ I hope you now understand why pigpio and WiringPi exist in the first place. There is a lot of boilerplate code hidden by them. 

No Raspberry Pi can correctly measure its input voltage without at least one additional component. $URL$ 

You need a tool like fbcp or raspi2fb which copies one framebuffer to another. The option is only relevant for the official display. 

With the PiCam , the GPU does lots of "heavy lifting" in terms of camera support - including realtime h.264 encoding @ full HD. This alleviates many problems seen with USB webcams which are solely managed by the Linux running on the ARM processor(s). Linux and software on top on it run better with the PiCam thanks to the work done by the GPU. 

In bare metal , file access doesn't work automatically. You need to implement a SD card reader driver and a FAT32 driver before file access works even remotely correctly. This is the whole point of bare metal after all. The C libary simply makes the assumption those things are present , as if bare metal were a "hosted" implementation of C. Copy or write an SD card reader driver and a FAT32 driver and connect all parts. This will be a great learning experience and illustrates perfectly how many services an OS like Raspbian Linux provides to a "hosted" C enviroment. 

You will need a way to get around NAT , be it OpenVPN , reverse SSH tunneling , ngrok , Weaved , Azure etc. - you will need an extra server ! 

The Raspberry Pi 3B+ contains the MaxLinear (previously Exar) MxL7704 power management chip (PMIC) with I2C interface for "on-line" reconfiguration of power sequencing and internal voltages.1 This is the first time a Raspberry Pi contains a software programmable power management chip. Which driver configures power management with this chip ? 

Clients in many languages , platforms etc exist , including webinterfaces. You might want to look into this list of clients for a range of PHP-based webinterfaces. 

Raspbian is based on Debian and you can mostly use Debian documentation for it. Look here. If that is not enough, the Debian Administrators Handbook is considered one of the best resources out there. Its free online , but you can still buy it on paper, too. The easiest way is probably the inbuilt help, called "manpages" in the UNIX world. Use to search for the keyword. Use 

The Raspberry Pi is not a simple microcontroller. It runs an Operating System like Raspbian GNU/Linux which takes care of this - you don't need dedicated libraries for file I/O on USB drives. Raspbian even has a desktop like Windows. Read up on basic Linux commands here Read up on file I/O with C on Linux here 

Both Python version 2.7 and version 3 have been pre-installed on Raspbian for quite some time. A whole raft of Python GPIO libraries is preinstalled too ! You cannot run 64-bit software on 32-bit Operating Systems. All releases of Raspbian run the Pi3 in 32-bit mode only. Furthermore , a download page advertising 64-bit downloads is very likely offering x86_64 binaries which are useless for ARM computers like the Pi.