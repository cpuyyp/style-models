5) Install Quagga pimd on RouterB, in order to run this IGMPv3 join tool: RouterB: 6) Use Quagga pimd commands on RouterA to verify multicast. For instance: RouterA: RouterA: 7) If things aren't working as expected, try pimd troubleshooting commands: 

The non-NAT router is missing a route for the address 130.130.130.130. Try injecting the required route as static route and then redistribute it into OSPF of NAT router: 

Can EX4200 provide traffic counters thru SNMP for specific VLAN id on a trunk port? If so, please point out directions. 

The command does NOT insert prefixes into BGP route table. That command is used to FILTER prefixes when the router announces or learns prefixes from BGP peers. A common Cisco idiom for locally injecting prefixes into BGP is combining the BGP "network" statement with static routes to Null0: 

The first address A of the range has a sequence of H x 0's bits as least significant bits. The last address B of the range shares all the same (32-H) bits from A, AND has H x 1's for the least significant bits. 

It might be an error, and the frame will be discarded. It may be an 'access' port from a service provider running 'provider bridging', then the frame will receive double tagging. It can get even more complex vlan translations. So it all depends on the full network setup. 

I think RFC 1583 is good reading material, and it seems to answer your question (section A.3, emphasis mine): 

Is it possible to do this without VLANs? It can be done without VLANs. The simplest way might be to connect the Wifi router directly to the Cloud Core router/firewall instead of to the HP switch. This way, the firewall functionality in the CCR can prevent 192.168.2.0 from reaching 192.168.1.0. A quick and dirty solution that might meet your requirements is configuring your wifi router as any home wifi router, NATting the wireless subnet onto your network. No vlans, and the rest of the network cannot contact the wireless subnet. I would advise against this because NAT is not necessary inside your network, but it is a quick fix. 

As a side note, it is not about who answers first. If you give your computer an address in the same subnet, the traffic will go straight to the machine, no routers involved. Even if you would use routing, entering a route to 143.166.0.0/16 on some internal router(s) in your network, they will prefer this route over their (default?) route to the internet. This happens because the "longest prefix match" is preferred, ie. the most specific route is chosen. Your correct about the net result, the 143.166.0.0/16 part of the internet will be unreachable for you or your network should you install the route in your internal routers. /16 seems a bit large for this issue, the smaller the subnet you route to, the smaller the chance of getting bitten. 

$URL$ Therefore, according my output (MSS 1240, peer MSS 9152, min MSS 1240, max MSS 1240), the ASR9K is limiting its outgoing TCP segments to 'MSS 1240'. 

Due to its limitations (small hop count, slow convergence, possibly large periodic updates), RIPv2 has always been deemed inferior to alternatives like OSPF and IS-IS. However, over the years, people used to argue that both configuration simplicity and low impact on CPU would remain somewhat useful for corner-case applications. Does this still hold true? Nowdays, CPUs are faster, links are speedier, the other complex IGP alternatives are widely known. Can anyone please point specific use cases for considering RIPv2 in modern networking engineering? 

No, not exactly. There is not a regular masking operation taking place. There is no software querying the CAM/TCAM at forwarding time. While usual memory is designed to be queried by a 'memory address' (pointer), CAM/TCAM is a kind of memory circuit (hardware) designed to lookup by content. It does in hardware what a hash table does in software: an associative array. The point is: TCAM can be programmed with a network prefix entry. For instance, you can insert a /24 prefix into TCAM by marking last 8 bits as "DON'T CARE". With plain binary CAM, you can't insert IP prefix, you can only insert full IP address (or MAC addresses) as lookup key. 

You can use all loopback addresses from 127.0.0.1 upto 127.255.255.254 however you like. According to RFC 3330, they are all "looped back inside the host". Some operating systems respond to all loopback addresses out of the box, on others you have to explicitly define extra addresses on the loopback interface. For most testing, 127.0.0.1/32 is sufficient, but sometimes multiple IPs can be useful or necessary. Examples include: 

The problem is that the remote routers are announcing themselves with PIM Hello messages from their own IP addresses and my router registers these addresses as PIM neighbours. The gateway in the routing table however contains the HSRP virtual address. When the router wants to join the multicast group, it looks for the route to the Rendezvous Point which has the HSRP virtual address as the next hop. Because this next-hop HSRP address is not one of the known PIM neighbours, the PIM-SM RFC specifies no Join should be sent. Changing the static route to use an actual IP address of one of the HSRP routers makes the multicast work, but of course this makes the HSRP useless. I have not tested VRRP because the other side did not want to change the network. VRRP would probably not have this problem since it does not use a virtual router IP, but uses the real IP address of the master router. 

4) Use the result as ifIndex and throw the packet at its interface. Example: For IP 1.0.0.5, write the packet to output interface Fa2 (ifIndex=3). 

The server usually identifies the client by its MAC address. However, it might use the field 'client identifier' option, if present. See also: 

Are you sure both switches are forwarding IP packets? Usually routers have 'ip routing' enabled. Check all your devices for both 'ip routing' and 'ip cef': 

Make sure your HTTP client is sending the same request for both cases. Request line format: Exemple for request line: In example above, Request-URI is If your client puts an IP addresses in the place of the hostname , the web server might issue a different result. See also: $URL$ 

This is a configuration sketch to get you started. Host A will send multicast source network 192.168.0.0/24 to Host B by using BGP. 

If you are sending packets toward IP addresses of the device, it will need to handle those packets in the CPU. Consider enabling CoPP: $URL$ 

ECMP takes place when multiple output (equal-cost) paths are available for forwarding packets to the same network destination. The hash function must map information from the incoming packet to the output interface. For example, let me make up an illustrative overly simple hashing function for this: 1) Picture every output interface with an ifIndex like this: 

This is normal behavior for a layer 3 switch, management traffic can be sent to any active Switch Virtual Interface (SVI). If you only want to allow management traffic from a specific vlan/subnet, you could set up ACLs. A layer 2 switch can be assigned a management IP address, attached to one vlan, called the management vlan. It will only be reachable inside this vlan. In the case of the SF300, I believe you have to define a management ACL instead of a normal IP ACL if you want to filter management traffic into the switch. Use the command, and then apply the ACL using . 

TCP Syn-segments are always sent uncompressed. After each host has received a SYN-segment, they know the other side's IP address. They can then compress the following segments' headers, because the IP address is remembered and re-entered in the header by the decompressor. 

Q1: The modem does not see the MAC addresses of the devices connected to the router. When a packet is routed from a device to the modem, the router will create a new ethernet frame to forward the packet to the modem, using its own MAC as the source address. Q2: If the router is doing only routing, the modem will see the IP addresses of the devices since source and destination IP addresses in the packet remain unchanged. But if your router is performing network address translation (NAT), it will replace the source IP address on the outgoing packets to the router with a different address, hiding the IP addresses of the devices (the original source addresses) from the modem. The fact that the modem can see IP addresses does not mean it looks at them or uses them in any way, that depends on the type of modem and what other features are in the device called a modem. To be sure on Q2, you would have to look at the specs of your modem and router and possibly check their configuration or default behaviour. 

SyncE is one method for providing high accuracy clocking for TDM over packet protocols. Another mechanism is "IEEE 1588-2008 Precision Time Protocol". 

If you are running a Cisco switch, you can try to read the CISCO-VTP-MIB with an SNMP tool. For example: 

If you configure the 1921 LNS to request authentication from a RADIUS server, yes, it is possible, since you can use RADIUS to attach a specific address for every user. I do not know whether it is possible with local user authentication on the Cisco router itself. 

While VLAN is a tool often used to reduce the size of the broadcast domain, its major underlying goal was to partition a physical LAN device (switch, bridge) into multiple logical portions (VLANs). Think of a single physical device offering Ethernet LAN services for multiple departments within an organization. Every department would get a piece of that single physical device -- that is, some ports restricted into a VLAN. Thus one would not need to buy dedicated LAN hardware for every department. 

I have multiple q-in-q S-VLANs assigned to the trunk port ge-0/0/0. How can I read SNMP traffic counters for a specific VLAN id (S-VLAN) on that trunk port? Hardware is Juniper EX4200-24F. For reference, the VLAN configuration is shown below. For instance, I need to read, thru SNMP, traffic counters for S-VLAN id=4 for packets received/sent on port ge-0/0/0. 

You could try if the frames can be blocked using a MAC ACL on interfaces and/or on vlans on the access switches. By applying the blocks selectively and checking if the error messages on the 4500 disappear or not, you can home in on the source of the traffic. Moving cables around to see if the port mentioned in the error message on the 4500 follows could also help, but might prove tricky in a production environment. 

without the remark about automatic VLAN id assignnment. I only have EX devices so I cannot verify this. 

SA is the 3GPP Technical Specification Group on Service and System Aspects. There are subgroups on different topics: 

For IPv4, IP-packets sent to the duplicate address will be sent to the MAC address currently in the ARP cache. Flapping will only occur if both hosts send ARP replies to the sender, flapping the ARP entry. If no ARP replies are received, connectivity will be fine with one of the owners of the duplicate IP. So the last host to answer (or have answered) an ARP request will "win". This competition will be held for every new host that wants to communicate with the duplicate IP. You could rig the competition by regularly sending gratuitous ARPs.