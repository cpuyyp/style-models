Workstation C's cable causes errors = frame drops at gigabit speed or with all twisted pairs in use. Check the workstation's error counter at full speed under load. You can check either side for 1000BASE-T as pairs are used bidirectionally. There is a congestion or buffering problem on the way to workstation C. Check routers and switches in between for errors/congestion. There is a setup problem (jumbo frames, MTU mismatch or misdetection). 

While Little's law tells you the average queue length for given average arrival and spent times, it doesn't tell you the maximum queue length. To estimate a reasonable buffer size, you'd need the variance of arrival rates and spent times. With this you can calculate the probability of service for a packet and the opposite, packet loss. If you want to make sure no packet can be lost, you need the maximum arrival rate and spent time to calculate a worst-case queue length, so no packet is ever lost. What is your requirement? 

VLANs are a way of partitioning a given network into distinct layer 2 segments as if you'd be using separate switches, so you don't have your whole network bunched together. The advantage of VLANs over separate switches is that you can run inter-switch connections as VLAN trunks (using tagged frames) instead of running dedicated links for each VLAN/segment, especially on long, expensive links. Additionally, the virtualization enables you to very easily provide a switch port into any segment anywhere in your network. The spanning tree protocol takes care of removing bridge loops from your network when you've got multiple connections between switches - by accident or by choice. The original STP is very aged, today most installations use RSTP, MSTP or RPVST, with the basic concept remaining the same. Essentially, STP blocks redundant links and avoids loops. Link aggregation groups can aggregate multiple physical links into a single logical link to increase potential bandwidth (instead of blocking all links but one with STP). Each of these concepts provides a solution for a networking problem and probably every seriously sized network uses them in combination. 

The very short answer: don't configure anything. Auto negotiation (or the lack thereof as Ron's detailed) works only when it's left alone. Manual settings can very easily cause problems either right away when done incorrectly or later on when hardware is upgraded. Usually, there will be no visible error message when the link is configured incorrectly. Speed mismatches simply don't link at all. Duplex mismatches are mean - the link comes up and appears to work but it only does so at an extremely slow effective rate. There are error counters on the NIC and in managed switches to indicate the problem but it's not obvious. So, don't configure manually. If you've got ancient equipment causing faulty autonegotiation (early Cisco hardware in particular), replace it. 

Switches learn their MAC table from the frames that run through them. Usually, IP's ARP (or NDP with IPv6) makes sure that all switches learn all MACs they need to know. When 1 sends a frame to 2 S1 already knows that 2 is located on the port to S3 and sends the frame that way. The root switch is only important for (M/R)STP - since you've got no redundant links all links are forwarding and there's no STP blocking. STP protects you if e.g. S4 and S5 are connected by accident. Once you do have redundant links, the choice of root switch will be important as (roughly) all switches will block frames to redundant ports facing away from the root bridge and traffic will flow more (not entirely) in the general direction of the root bridge. 

As Ron has pointed out, RSPAN or similar captures traffic into a VLAN that can be routed from one switch to the other and then to the laptop. This is the clean solution. You use the interconnect port as monitor port from the first switch (risking high data rates and frame drops on the interconnect) and connect the laptop to the second switch's monitor port. You use a third, small switch that connects to both monitor ports and combines them. Both monitor ports need to be configured to drop all incoming traffic (per ACL or egress-only mode). The interconnect ports are used as monitor ports and a third switch is connected in between, mirroring one of its interconnect ports to the monitor port with the laptop (assuming mirroring captures both directions). 

I just stumbled across $URL$ which details the architecture: the RF signal is in fact amplitude modulated onto the fiber. 

Port forwarding is required when a NAT router 'hides' a service with a private IP address from public Internet. You'll need port forwarding on the NAT router (TP-L), the one with the WAN interface. Provided the routing works and the protocols have no NAT issues, just forward to 192.168.1.100 directly and it'll work. Cascading the port forwarding through both routers is possible but only necessary when the secondary router (Planet) is using NAT as well. 

Check $URL$ - frames that are deferred can't be sent out the destination port right away and get queued. Excess deferred frames are those dropped when the output queue is overloaded. There are several possible causes: 

An IP(?) packet of 250 bytes translates to 23 Î¼s link time on Fast Ethernet (=maximum additional latency with gapped packets). Half that somewhat matches the jitter you see, so it's to be expected. For more precision you'll need dedicated or faster links. QoS wouldn't improve this as a frame isn't terminated in the middle of a transmission for the sake of a higher prioritized frame. QoS helps with a (near) saturated link in that it can limit the additional latency to that of a frame's transmission time, independent of the queue length. 

In a nutshell, an Ethernet switch forwards frames based on their destination MAC address. For that it learns source addresses and associated ports. It also drops damaged frames that fail FCS. For this basic functionality, switches don't exchange information on their own, they just forward frames. Each one does its job independently. Managed switches usually can do a lot more - they have a variety of additional functions (spanning tree, VLANs, ACLs, L3 switching/routing, ...). 

Given the NAS is hardenend and isn't affected by hacking, you could map/open the required port/s on the firewall. Without hardening, setting up access to the NAS doesn't only endanger the NAS and its data but also the entire network. Provide transparent access through a VPN tunnel. VPN allows remote access without exposing your network devices to hacking from the Internet. You might want to set up VPN rules to restrict remote users to the devices in question. 

This very much sounds like the slaves are wiped and their configuration is copied from the master switch. You can select which switch becomes master when configuring the stack. I'd strongly suggest that you read and understand the appropriate parts of the manual before attempting to activate stacking, especially when done outside a network lab. 

The "port" you are apparently talking about is a logical port (potentially) connected to another port somewhere else (also called a socket). There are 65535 ports for each logical address (for TCP and UDP each), so you're not easily running out of them. Port triggering is something different (in respect to the logical ports) that might or might not solve problems related to network address translation. It's not an easy topic for beginners. The physical interface on a network card, switch, router, ... is also called a "port". Since it is multiplexed by a multitude of network layers, protocols and logical addresses and ports, it can provide practically unlimited logical connections at any given time. Theoretically, a single gigabit Ethernet interface can receive and send data from/to more than a million different endpoints in every second. 

You can peer with other ISPs to become an active part of the Internet - that starts as soon as you have at least two peerings and forward data between them. This will usually cost you money when you're small and earn money when you're large. Another way is to connect to a larger Internet exchange (IX) where you simultaneously peer with a large number of other ISPs. The Internet has no "central point", it consists of small and large, interconnected networks.