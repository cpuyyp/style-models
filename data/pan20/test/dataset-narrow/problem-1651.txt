There NO way to hibernate the Raspberry Pi. It is either running or not. You can which leaves the Graphics Core running, but you need to restart. 

The normal Arduino serial programming interface uses a bootloader on the Arduino. You could easily use the Pi serial to do similar, and use another pin to reset the ATmega328P. This, of course, assumes you are using a chip with a bootloader. The Arduino Mini requires an external serial for programming; See $URL$ Most people use a USB-serial interface to do the programming, but the Pi could be used. 

The Pi will run until internal temperature reaches 85℃ at which point it will throttle itself back by reducing clock rate. 

At the risk of being accused of being anti NOOBS, which is poorly documented, it is supposed to be an easy installation method. It assumes a normal SD Card; I don't know what it really expects and has probably not been tested with 64GB. I suggest you install Raspbian - this doesn't need the card to be formatted, and creates an image. I have not tried a 64GB, but see no reason why it wouldn't work. To address the other part of your question, I use 16GB cards. When I need extra space I use an external 1TB HD, which I have formatted as . You could use any other form of storage, a solid state drive or USB stick. You won't get spectacular speed, because all Pi I/O goes through the same controller. 

It is reasonably safe if you are sensible. The MOST IMPORTANT thing is NOT to connect anything >3.3V to a pin. Make sure you don't connect the 5V! In general you should avoid making connections with the Pi running (at least until you get more experience). You should try running a LED (through a resistor - say 470Ω). Connecting push buttons is pretty safe (using a 1KΩ series resistor is a good idea). If you look at The MagPi magazine $URL$ you will find lots of examples. 

That should be OK. I have used similar power supply and they seem reasonably well regulated. These power supplies are really designed to be built in to devices, and you should really use some kind of protection. The mains power connector is covered by an insulator, but this would not meet normal insulation standards for a stand alone unit. 

The SD card has an internal flag which indicates it is RO, but this is not enforced - it is up to software to honour this (which most OS do). Your best option is to download the formatter from the SD Foundation. See:- $URL$ 

You are trying to restore to which is the boot partition of the SD and only 70MB are being transferred. You should also unmount the SD card first. You would probably be better using 

As @joan stated the first 26 pins on the A+ header have the same functionality as the first 26 pins on the standard B & B+, and except for the pins 3 & 5 (I²C) and pin 13 are the same as A. It is unlikely the minor difference will be significant. Much software automatically detects the difference. It certainly won't damage either the Pi or the display. NOTE The physical layout of the pins differs, which may affect the position of the display if directly mounted on the Pi. NOTE2 You can't use a 26 pin IDC cable and header for mechanical reasons. 

Any mechanical switch will have contact bounce. You need to either handle this in hardware or software. The add_event_detect() allows for bounce on press, but if you hold the button down you will get bounce on release which will cause a multiple trigger. The traditional solution is to use a latch (2 interconnected NOR gates) and a changeover (2 pole) switch. Depending on your application this may be warranted or you may be able to adopt a software solution to detect falling edge, or just use a capacitor to slow down the falling edge. It is usually better to use a pullup resistor and button to ground, which you can combine with a capacitor to slow the rising edge without affecting the falling edge. 

The circuit you propose will actually REDUCE the current; if you want to use an emitter-follower omit the resistor in the collector. I have other reservations about this circuit; there is no active pull-down, so it will degrade speed, as there is nothing to discharge line capacitance. Finally I doubt the screen actually needs any current. 

I very much doubt you have an interface - there are other obvious errors. If you absolutely MUST set a static address How to set up Static IP Address explains how to do it. I still fail to understand why so many Pi users WANT to set a static IP address, particularly when they seem to have little understanding of networking. 

Apart from the voltage mismatch (RS232 is up to ±15V, although most devices which claim to be RS232 use much lower voltage unipolar signals), the polarities are different. Even if you haven't already damaged the Pi it won't work. There are RS232 <--> TTL devices, many of which have a 3.3V option. 

No one has said "Raspberry Pi … will not run on reliably on anything below 4.6vdc"; in fact the Pi itself will run until the voltage falls below the drop out voltage of the regulator. It should work reliably down to 4.2V, and I have done so in testing. Actual components vary, what works on one Pi may not on another. I once worked with a major telecommunications manufacturer, which used 80286 processors to perform most tasks - but they individually tested each chip to select those which could be pushed beyond normal safe parameters. The regulators are step-down converters; they will work on lower voltages BUT will NOT boost the voltage, and regulation will drop off as the input voltage falls. The USB and HDMI use 5V, and may not work, again this depends on the external devices; many do not need power or work at low voltages. I think a single Li battery is marginal, as at maximum it too low, and will drop with time. See Raspberry Pi Power Limitations for detail, although you seem to have quoted from this. You can run your car without oil for quite a while, but I would't recommend it! Buy one of the cheap boost regulators which produce 5V from a LI battery. 

If you have recently purchased a raspberry pi 2 and installed Raspbian it probably has a different WiFi setup using . See $URL$ Forget any older tutorials and just use the new GUI WiFi setup. These can be made to work, but require manual configuration. 

If you install on the Pi you can use it from OS X. You can connect using on the Mac. It is also possible to connect from the sidebar in although I find this annoying. This lets you access the shared items in or any other file utility. There is some configuration on the Pi (which you can find in the if you install ), but by default it mounts your home directory. If you try this and have questions search this site for or ask in detail. 

The Raspbian Update released on 13th May 2016 includes the editor, although I already had this installed. Unfortunately text files etc still open by default in . The "Open With" menu doesn't include and I can't seem to find any way to include or make it the default. 

The only way you will know is to try it. Frankly, I wouldn't do this - you are effectively connecting 2 different switch mode power supplies together. You don't say how much current the SSD needs, so it is not possible to give a definitive answer. If the Pi has an adequate power supply it SHOULD work with just a single USB connection (the Pi has no power control for individual USB ports - you can draw 1.2A from a single port). If there are problems (and the Pi USB does have problems with high current devices) you would be better using a powered hub. 

The following may be more use if you want an indication of state, although it requires additional circuitry. 

It us EXTREMELY unlikely that there will be drivers for the ARM6 processor on the Pi! All the drivers you need for most WiFi devices are already built into the kernel. Not all WiFi devices/drivers support AdHoc modes. I suggest you get the WiFi working as normal FIRST, then try your project. 

You have not specified what you are actually attempting to achieve or what OS so your "question" is indeterminate. It is certainly POSSIBLE to bridge interfaces, but not as described. Access Point may help. 

The simple answer is you Can't - it used to be possible with 3rd party add-on, but since Apple introduced SIP all the external programs fail. Your best bet is to use a live Linux CD or similar. You can boot the Pi into the root shell and fix/change password See $URL$ or $URL$ I should add that there is NO REASON to edit 

You can certainly read multiple bytes using . The comments about FIFO are misleading, even though they are important to ensure high speed troughput, are inaccessable. The kernel drivers almost certainly provide buffering, but again this is inaccessable. (In the 1970s I wrote my own drivers which used a 256 character circular buffer.) The following code fragment is an example of how you could write such a buffered interface (into a user supplied buffer). This ia actually an add-on to a library routine (AFAIK installed by default on the Raspbian) which I use to provide an equivalent to . Similar code could be used with any library. 

The Foundation recommends "Beginners should start with NOOBS". This is marginally easier to setup (if you have all the prerequisites) and requires no additional program, but then problems start. NOOBS seems to have problems with networking and is difficult to update. To make matters worse the experienced users on this site do not use NOOBS, and have installed Raspbian (or other distribution) directly and are unable to help with problems NOOBS users have. The vast bulk of the tutorials on the Web assume you are running Raspbian and describe files which do not exist on NOOBS (or are in different locations which are inaccessible on Windows or OS X). Indeed the tutorial you referenced specifically states "These instructions are only applicable to manually installed installations (i.e. those which are imaged directly using SDimager rather than using NOOBS." If you install Raspbian (or your chosen distribution) directly you will get more help. 

NOTE If you are doing this at the command prompt you need to disable serial console, otherwise the console output will confuse things. You can do this in or editing 

There are no such things as "identical Micro SD cards", they often have minor differences in size, and can change as they wear. The linked answer by goldilocks will let you manage images, but is a bit fiddly. The EASY was to do this is to use the program on Raspbian to copy a working image to a SD Card. This is actually faster than because it only copies fies (although the Pi may limit the throughput). 

If you don't use it I don't know why you care. Rather than a specific answer you can use a command like the following to find installed packages, which will generally give you a version. 

is the address and size from the command above (or another unused address on the same network), is the address of your router (or gateway). is the DNS address(es) from /etc/resolv.conf. (see ) There is a good article on at $URL$ The is an alternative to static IP Network Interfaces method Configure a static network adddress on your Pi in 

To change password login to the Pi and use the menu in GUI or from the command line. Alternatively you could use the command. It is not impossible to change password on another Linux system, but this has nothing to do with . 

The Pi will keep the time it was shutdown and restore on restart. It will thus gradually get out of date. If you don't want to connect to the internet you will need a . I recommend the as it runs on 3.3V and has software support on the Pi, although the is very similar but runs on 5V, and is not quite as accurate. It is also possible to set the time from another computer, connected via Ethernet. If you are interested I will post one method of doing this. 

Connecting unknown electronic devices to the Pi (or anything else) is fraught with difficulty. There is NO WAY the Pi can "short out the pin". You may be able to drive a transistor or MOSFET to simulate a button press. This requires at the minimum a common ground connection. The only SAFE way is with an opto-isolator or relay.