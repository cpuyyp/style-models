Original Answer As a rule of thumb, a "LAN" is a broadcast domain. (It may consist of more than one.) Then again, as a rule of thumb, a rule of thumb applies 3/8ths of the time, so this doesn't really give much to go on. This was understandably rather poorly received, so I've expanded below. Updated Answer I've never really liked the essentially recursive answer of "a LAN is a network of devices in the same area." Granted, it's a rather subjective term, so here are a few other options to illustrate what one may be. Note they may not apply in all situations, there may be exceptions... or they may ALL apply to your situation: Layer 2 Network If devices are in the same Layer 2 Network, they can be described as being on a LAN. Broadcast Domain Devices in a broadcast domain are in a LAN (or multiple LANs). This normally applies to VLANs (Virtual LANs), which can be used to segment a LAN... or can be used to link physically distant devices into essentially the same LAN. Yes, this stretches the definition of "local!" Non-Routable IP Address A set of devices on the same non-routable IP address subnet who can talk to each other (without NAT or other workarounds) are most likely on the same LAN as well. What are non-routable IP addresses? Wikipedia explains it well enough: $URL$ Essentially, these ranges are set aside for "local" use and are not to be forwarded out to the internet. Sidebar These non-routable ranges appear to have been rather arbitrarily chosen--eg, there's nothing special in electricity that makes 10.0.0.0/8 range not route, but someone realized some ranges should be set aside and made a judgement call about which ones. I could be wrong (which isn't rare by a long shot), but Jodies.de lets us see the binary of these ranges ( $URL$ ). I don't see anything terribly remarkable about the addresses. They just seem arbitrary. See for yourself: Address: 10.0.0.0 00001010 .00000000.00000000.00000000 Netmask: 255.0.0.0 = 8 11111111 .00000000.00000000.00000000 Address: 172.16.0.0 10101100.0001 0000.00000000.00000000 Netmask: 255.240.0.0 = 12 11111111.1111 0000.00000000.00000000 Address: 192.168.0.0 11000000.10101000 .00000000.00000000 Netmask: 255.255.0.0 = 16 11111111.11111111 .00000000.00000000 Enough digression! VPN Tunnels Additionally, a VPN tunnel (be it just from your PC to your company or a site-to-site/LAN-to-LAN tunnel) lets a remote machine behave as though it were on the LAN. If it walks like a duck, and it talks like a duck, and it tastes like a duck... Conclusion "LAN" and "WAN" are rather ambiguously defined. They are hardly the only delineations, either--I've been trained on a model that went from LAN to optional CAN (Campus Area Network) and/or to MAN (Metropolitan Area Network) to WAN. You may define your LAN as everything behind your home internet modem, but your ISP could consider every subscriber on your block to be in a LAN... and they could both be right simultaneously! The terms can subjective to a degree, but these guidelines (and all the others posted) should help you determine if something is a member of a LAN, a WAN, or both. 

After all, its for CCNA-level study. So the short answer is: No you cannot. You could use GNS3 or Cisco VIRL to experiment with that topic. 

Now, SW2 will be the winner of the election process, and it wins due to the lower extended system id. Hence the answer to your question is: yes, it could possibly affect root bridge election. The lowest possible VLAN number is 1, and the default MST instance is 0, resulting in the MST switch always winning root election with default settings. Also please have a look at Benjamins comment about spanning interoperability. I am currently not sure about the behavior (on BPDU sending level) when MSTP and PVSTP+ have to work together. I will add detailed information later, I have to try that in lab and inspect the BPDUs. If you think about that for a minute, that makes perfect sense. MST + RPVSTP interoperability requires the root bridge to be within the MST domain. Sure you can manually tweak the priority, in which case you messed that up yourself. By default however, the switch in the MST domain will be selected as root bridge. TL;DR and Summary: If all switches are running (R)PVSTP or all switches are running MSTP, then no, it will not affect root bridge election. In a mixed environment, it certainly can. One note, though: this discussion is certainly true for Cisco switches (more general, switches supporting per VLAN spanning tree), but not necessarily for other switches. 

So I'm looking at the "show perfmon" output from my ASA (5550, 9.0 software), and am confused by the "VALID CONNS RATE in TCP INTERCEPT" output: 

One reason--and I'm sure there are many, many more--is because you can have the same VCI on multiple different VPIs. The VPI is 8 (OK, 8-12) bits, while the VCI is 16 bits. VPI 0 has VCI 35... but VPI 1 also has VCI 35, as does VPI 2. Guess what? VPI 3 also has a VCI 35. These VCIs don't necessarily interact. This is probably more for the PVC (Permanent Virtual Circuit) implementation, common in ISP networks. It's a bit like asking why you have a third AND a fourth octet in an IP address, or why you need a street AND city name in a postal address. ;) 

I'm finding statements about SNMP holding-time like "traps whose holding time expires are deleted." While that COULD be written less usefully, it would take significant effort. I'm assuming that it doesn't work exactly as described, else setting any holding time would delete all traps the moment that time passes. I'm not seeing how this--as described--does anything but keep any and all traps from ever being sent. So what does holding time actually do, and how does it do it? 

I'm not a POE expert but I don't think this is possible. A PoE switch or router negotiates the power with the device on the other end of the cable. To connect two cameras to the same cable, you would need some kind of switch, especially if you still need IP connectivity, which would be this device in the PoE switch's perspective. The cheapest solution might be another switch and two PoE injectors. 

According to my knowledge, both of them are internal routes (received from an iBGP peer) and both are not synchronized. Hence they should not be considered as candidate for best path and R1 should not advertise that path any further. However, as seen before, it has still selected path #2 as best and advertises the path further to other RR-clients, for example to R4: 

The page will then provide you with IOS versions with this specific attributes that support your MIB. 

Beware that you can never change the AD to be lower than or equal to 0, hence routing protocols cannot compete with directly connected routes using the administrative distance. If you need a routing protocol to override directly connected routes you should ask yourself why you need the direct connection. Technically however you could advertise more specific routes. 

Benjamin Dales answer is certainly correct for switches running standards based spanning tree. For switches using per VLAN STP however: yes, it can very well make a difference. Granted, under rather specific circumstances. As you said, the bridge-id is basically made up of three parts: , where the MAC address is just appended. The lowest bridge IDs wins the root bridge election. That being said, it is obvious that the priority must be the same on all routers in order for the extended system ID to actually make a difference. Suppose a network just consisting of two switches. SW1 has a MAC address of 1 (just going to short that up here, suppose those were actually 48bit MAC addresses), SW2 has the MAC address 2. Both use the default priority (32768). When running only PVSTP (no matter if rapid or not), the VLAN ID of that instance is used as extended system ID. In that case (for the sake of that example we're running in VLAN 1), the bridge IDs would be 

Think of UDP as sending a letter regular postage, and TCP as sending it with tracking numbers and notifications on delivery. Keep in mind UDP and TCP are just delivery methods, they don't give a damn what's in the packet or what the application receiving it does with the packet. DNS is a stupid example to show someone the difference between TCP and UDP. SNMP (and traps in particular) is better. Let me try below. Note, examples are simplified slightly. When a router sends an SNMP trap (an alert such as "Hey, I've just rebooted, thought you should know") to the SNMP server via UDP it does just that: it sends the packet to the server and that's it. If the server is programmed to send something back, UDP doesn't care. UDP delivered its packet, now it's going to the pub for a pint. So what would happen with TCP? Well, the router world send the packet containing the trap message to the server. After a certain timeout period, it would then send the packet again... And again... And again... Until the server finally responds with an ACKNowledgement packet. And that's ALL TCP cares about. It doesn't care about the data packet that the server may (or may not) need to send back. TCP will deliver its packet and return with an ACKnowledgement, or die trying (more or less). You may want to review the OSI model, keeping in mind that each layer encapsulates the one above it. That is, each layer wraps the stuff it received from the layer above and carries it with professional disinterest as to the contents. 

The feature you are looking for is on the same page you already have provided. On the bottom of the page there is a large box with the title . You can select your MIB in question there and click submit, which will lead you to another page where only the IOS/IOS-XE versions are listed which support your MIB. On this page you can narrow down the search by multiple factors, including: 

The answer is simply "no". As Ricky already told, the 5505 has an integrated switch built-in, hence you can create VLAN interfaces (which are then routed interfaces actually visible to the firewall). The larger ASA devices (honestly, I think all other Cisco firewalls except for the your old 5505) do not have such a switch built-in. While you can configure sub-interfaces and use different VLANs on the same port (802.1q trunking), you cannot assign one VLAN on multiple ports. This is what a switch does, but the ASA cannot do that. For a more detailed advice we would need more details about your network, such as why you need to have multiple ports with the same VLAN and what is connected to which interface. From what I see in your configuration, it seems that you simply connect multiple clients to the firewall. If this is the case: use any VLAN capable switch, connect it to your new ASA (either via one physical interface using 802.1q or multiple physical interfaces) and let both your ASA and the switch do what they were designed for.