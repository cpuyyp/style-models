No. This is not an appropriate task for VNC. As Aaron stated you should use an appropriate tool for this. rsync and scp are commonly used and easy to schedule. If your are synchronizing configuration you should look at tools like puppy or cfengine. 

You don't necessarily need to have the computers establish a VPN connection on a timed basis. BackupPC will to backups on laptops and such whenever they are reachable. Partially, completed backups will be finished next time it connects. Initial backups require transferring all the files being backed up. These will be the longest backups. Once that is done all subsequent backups will only require the differences from the last backup to be transferred. About 1% of the files will be transferred to validate the contents on the server. You can use the alias to provide an alternate address to contact the fixed PCs at remote locations. You can also override the commands used to determine if a PC is reachable on a client by client basis. You can also run commands before and after a backup. This should give you lots of flexibility to handle remote PCs with fixed. Ideally, you want the laptops to be reachable from time to time. However, if you can script a post to the web interface, the laptops should be able to trigger their own backups whenever they connect. It may be better to install VPN software on the laptops and let BackupPC pickup the laptops when they are available. BackupPC will email the user specified in the host's user column if the backup gets too old. 

You can use to monitor packets on either end. The tool can be used to capture headers or full packets. The man page includes examples on how to filter packets so you only capture the traffic you are interested in. Your packet size seems a little strange. If you aren't using jumbo frames, your packets are likely to be fragmented for transmission on the network. This may be the cause of your issue. Spitting the frames into parts of 1472 bytes or less would be more appropriate for an ethernet connection. Internet connection may have an even smaller MTU and a parts of 1464 bytes or less may be be more appropriate. You may want to do MTU discovery on the connection to prevent fragmentation. This would allow you to avoid or limit packet fragmentation. 

Try as a starting point. This will pick up connections which haven't hit the access logs, as well as connections which have recently be closed. Try to get counts by recent connections. Check the IP address I used. EDIT: Changing your accesslog configuration to record response time (%D or %T) instead of ident name (%l) will allow you to collect data on which URL patterns are slowest. Doing so when the whole site is slow may not provide useful statistics. Use top to ensure you are using a significant amount of swap space. If you have a memory leak then limiting MaxRequestsPerChild to 100 or 100 may help until you find and fix the problem. 

A DNAT (Destination Network Address Translation) solution can do what you need. This can be done by any system (host or router) the traffic passes through on the way to the target system. Typically NAT is done by routers, but the capability is built into some operating systems such as Linux. I am not awara of any DNAT capabilities in Windows XP. NAT using names is normally not done as it fails if DNS is not available when the tables are being created. It may be possible to multi-home the server with the old address. This works best if the existing routing to the server supports both addresses. Some things I would check include: 

Your latest revision indicates that outgoing traffic on port 25 is being blocked. Your firewall may also block traffic ISPs often do this for domains that should not be sending email to the internet. It is difficult to validate your configuration when you don't provide your domain. You can get an idea of where you are being blocked using a tcptraceroute program to see where you get blocked. In the mean time try sending via your ISPs email relay. Original Response: Normally, you would configure your local network (likely something like 192.168.1.0/24) as trusted. If the host at 50.244.27.204 is truly one of your servers you might want to trust it. Given that this is an internet routeable address you do risk becoming a limited open relay if this is not your server. The usually method for allowing access from hosts not on the local network is to use the Submission port (587) to accept authenticated requests. You should configure authentication to require a TLS encrypted connection started with STARTTLS. You will see this kind of message from untrusted address, as there are bots out there that will try to use your serve as an open relay. 

I would expect the server has memory problems. This will result in the container having to wait for data to come from disk rather than buffers. If you have access to the server, try running on it rather than running it in the container. Memory management for virtual servers is dependent on the host server. The first thing I notices was no buffers, cache, or swap in your data. These are all important to performance. 

The quick answer in a corporate environment is No. DHCP is used for hosts which are expected to be clients not servers. DHCP addresses are not usually listed in DNS. Servers are given static addresses and appropriate DNS names. The long answer is maybe. The corporate DNS servers may be configured to allow DHCP clients to register their address. If so, and if the client actually registers its name it should be reachable by name. DHCP is now mostly used for the private DNS ranges 10.0.0.0/8 192.168.0.0/16 and 172.16.0.0/12. These are not reachable across the Internet. Unless your corporate network includes the remote site, it is unlikely be reachable. 

In the unusual case that your host has multiple Internet facing addresses and your mail server randomly binds to them when sending, you might want to configure that host as you suggest. This may cause problems for remote servers sending you mail if your server fails as they may try each address in succession. (I have seen a lot of posts from users having problems getting applications to send from the non-primary address on an interface.) rDNS rules are of concern when you are sending, so I would verify that the only the primary address is being used and configure DNS accordingly. You may be able to choose another public address and configure your server to bind to it. I would verify that configuration. You can verify the address you are sending from by sending a message to ipconfirm@postmaster.aol.com as described on the AOL troubleshooting page. If you have multiple addresses for an A record, then you could have a PTR record back to that A record for each of those addresses. This would be unusual and I would NOT recommend doing so. All of the lookups I have done for A records with multiple IP addresses have PTR records back to a unique domain name. Having each PTR record return a unique domain makes it much easier to determine which host is malfunctioning should it be necessary. The few cases I have seen the same domain from multiple servers appear to be moves of the domain to a new IP address. The one domain I know of that uses a singe domain name for multiple servers is . They use a single name as the name in the HELO command. Its A record returns two addresses, but they have a farms of servers with PTR records to unique names other than . All of their severs that have sent me mail pass rDNS validation on their IP addresses. Likewise, is is legal but not common to have a PTR record return multiple domains. Not all providers will support this. Of the hundreds of mail servers I have in my email database, very few have more than one PTR record. The majority of those don't have a valid rDNS lookup for any of the domains. It is best to have separate domain (host) names for each IP address with pointer records pointing back to that unique domain name. Any A records with multiple addresses would be different from any of the host names and are generally used to load balance web servers and other stateless services. The configurations I have seen for load balancing SMTP servers use multiple MX records with the same prioritity. Overload and server failure can be handled with multiple MX records with different priorities. For an example try following the addresses for or a similar server to their PTR records and back. You might also want to look at the mail servers for any of the large freemail services like gmail, hotmail, or yahoo. It is common to have PTR record for addresses not hosting an Internet mail server which do not have a corresponding A record. ISPs often use this technique. If the PTR record of an SMTP server points to an A record which does not point back to the PTR record, something is broken. My research shows servers which pass rDNS and have a valid SPF record for the hostname or HELO name are more than 90% likely to deliver ham rather than SPAM. Few of the failures to deliver are Spam related. Systems which fail to pass rDNS are highly likely to be sending spam. Those that don't send spam are most likely to be sending to a mailing lists or otherwise sending automated email.