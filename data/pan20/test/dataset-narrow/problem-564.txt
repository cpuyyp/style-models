Unique window name is required because there will no be two windows if two clients are opened from the same PC. CPU usage is very low, on my PC cpu usage is 4% when server have connection, and on every other connection which uses the same params, there is no update in cpu usage. Basic server usage: 

This will check for user to connect and if same camera url is passed as parameter, class will handle passing captured images to users that request from that camera. 

Let's say that you would want to add a new difficulty to your game. Where would you change your code to do that? 

If you don't have anything to do in else, just skip that part. is enough, you don't need else. You'd better remove this, or else... 

Is it really necessary to create an object of each tile? In many 2d map-based games, the tiles are not objects, but each tile is only an in a 2d array. I don't know Unity, but I feel that it should be possible to render a 2d map in a better way than creating a for each tile. If possible, I would make your code something more like this: 

Camctrl have a task to execute command. It accepts last part of IP address, as well as params (one command is string, multiple are list). file: lib/Gui.py 

I recently started to work with python and came to idea to automate process of looking for new jobs. There is nice website and I managed to get content, because they use angular to render webpage and using just gives no results, because page is rendered using javascript. Below code is functional, but a bit slow, it take about 10-15 seconds to get rendered page. Full process include going through all job ads, get title,description,link, etc, and check local database to see whether this ad already exists. If not, new mail is sent through mailgun. Any suggestion is welcomed. 

What about actions that can target more than one card? What about actions that can target more than one card in multiple different "targetSets"? Consider for example the Magic: The Gathering card Glimpse the Sun God: 

You don't need to use , use instead. The difference is that is a primitive type, which means that among other things it cannot be set to . 

As for your question about the , you are right that it is not a good idea to use that there. You can solve this by wrapping the exception in another. 

File Gui.py have a task to create appindicator and menus. Inside function are two different lists, because one camera have issues with auto-focus, so it must zoom out, then zoom in a bit and zoom out again, and then focus is correct. Main scrip, to run everything is 

Worked with same IP cameras for some time, and noticed that camera use much processing power because of multiple connections. Writing streaming server looked as nice solution so I decided to write my own. This code is posted to my github page 

Overriding methods in an interface. These lines in your interface can be removed entirely, they don't provide anything extra since extends . 

Efficiency The best performance gain I can recommend would be to consider caching the value that is calculated in the first loop, as I have a feeling that value will not change very often (if it will change at all). Choose Treasure Item - skewed randomness Now that you have a class, you can return the directly, instead of returning its key. Also, your is wrong. Imagine that you have the weights which adds up to 9, then you are randomizing a number from 0 to 9 (inclusive), and then iterating and adding to again and comparing with , now let's see the distribution: 

This is started as a simple project, because I don't like software I'm using. Not that they are not good, but I wanted some custom stuff, so this little project started. This part of project is for live viewing while archiving is done with opencv (not shown here, I managed to get this work). I am very new to python, but I managed to build this GUI. My question for you is: Is there anything I can improve? I am satisfied with CPU and memory usage (15 cameras in view are using about 100 MiB of memory). First approach is made using opencv, but with this I lower the resource used. There is known bug on line 174, when one image is shown, picture not fit the view until 'right-click' ( action) is called by user. So solution for this will be helpful. 

You are right that returning an object where is a function would not work, but it would work to return the result of a call to a function! You can also restructure things a bit to reduce duplicated code. By having a starting string or a starting object, and optionally adding to that string or object if some conditions are fulfilled. This is untested code, but I think it should do the same as your original. 

Multi-threaded concepts are complicated at times. If you really want to learn multi-threading, it is important to get it right. Some things can be extremely difficult to get right. I can highly recommend reading Java Concurrency in Practice. Overall It is not that often I see "multi-threaded code" without a single keyword, or a single use of an atomic variable or concurrent data structure. I suggest you read up on all three of those to better understand what you will have to deal with sooner or later. I think that you are adding a lot of overhead with the way you are constructing your tasks, that it will remove any benefits you get by running it multi-threaded. Creating all the lists that you use simply takes more time than actually running the code. It is also important to consider that you are using , this is a call, which means that only a single thread can only run it a time. This tends to be a big concurrency bottle-neck in a lot of multi-threaded code. As your task(s) seems to only be to use , I think your code would be better of as single-threaded. Oops, missed some! In your current code, it does not run the method for the last x items in the list. There already, it is broken. If you have 1024 items and use a "block" value of 100, 24 items will be missed. (Hint: What is the value of your variable after your for-loop to start the tasks is finished?) Singleton mindset This code: 

My task is to create custom script to control PTZ (pan-tilt-zoom) cameras. We have an application for video surveillance but problem is that some functions are missing, like speed zoom out. Also, some cameras loses focus etc. My idea is to create appindicator to control cameras from there. Below is python script, and it's working, so my question here is, can I change this code a bit for a better performance or to improve something? I am not so familiar with python, so this is more like a test project for now. I am using API to control cameras from script. file: lib/Camctrl.py 

Use Strings.xml also in the method. You're using it at other places, but you should use it everywhere possible (Except for stuff) 

Your question is: Is it good to use a Singleton here? My answer is: If you can avoid using a singleton, do it! And you answer this yourself: "Of course I can avoid using a singleton if (...)". Passing a object to the constructor or some other method is more preferable than using a singleton-pattern. This is part of the principle Tell, don't ask. The method in your "singleton" defies the Singleton pattern, which states that it