I'm surprised Windows IoT isn't on this list at this time. Also, there's Ubuntu Mate and Core. OSMC and LibreElec also exist if you consider these as OSes. Refer to $URL$ 

The other guys might have made things a bit hard to understand. Based on what you said, here are some points: 

Depending on how you build your cluster, you can individually to each of the nodes from the head node, or even directly from your PC into each node. In short, your cluster can still act like individual Pis. They can still do individual jobs. Do whatever you want with them. The cluster-ness will only kick in when you need it (e.g. when you run a cluster-based distributed calculation thing, or when you fold proteins). Otherwise, they will simply act as a networked group of Pis. Depending on how you build your cluster 

is occasionally down, even on IPv4, due to regular maintenance or some other reason. As of now, it's up. If your connection is failing right now, I would advise you to check your network equipment or if your ISP/network equipment supports IPv6. You can also check here. 

Before jumping to any conclusions, try connecting from another network like your friend's WiFi connection. 

I bet your DNS resolvers aren't configured. This is a common issue in Linux. Add nameservers in the file by adding the lines below: 

For example, you could monitor column 4 so that every time it changes, you'll light up an LED to indicate a read operation just happened. I'll leave it to your imagination to come up with something out of this. 

If everything is good, your LAN chip may really be fried. If not, try to find a way to fix it (Take note that the Pi may become a fire hazard). Safety first. If you smell smoke, remove and decommission the pi and get a new one. 

Sometimes (but not rarely), goes out of service. If you really can't wait, I suggest replacing it or adding another mirror. You can completely replace your file with the one below. I think the file is self-explanatory. Make sure to run after you update the source list. 

We can't really tell since anyone (including me) might have already built a 5000-node cluster and simply did not publish their work. The largest one that's made aware to the public is, in fact, the GCHQ cluster. Update: This(link) is bigger. I might have a 10,000 node Pi 3 cluster in my secret Pacific ocean underwater lair. Muhahahahahha! 

These will change the owner and group of the files in those directories to . The files will once again get owned by root if you edit it as root (usually by using ). If that's the case, simply re-run the commands above. If this is accessible online or if you decide to publish it publicly, you may want to set the permissions to so random people can't hack modify your public files. If you're using it privately, it's probably okay to leave it as-is. 

No, you cannot use MxTunnel on the pi since I checked MxTunnel out and they provide a pre-compiled binary (which I'm sure is for x86 or x64, not ARM). Probably the most convenient option (in my opinion) would be SFTP which is FTP with an S on it (which means secure). It's quite easy to set up using and a few port forwards. Using Filezilla to access your files surely won't hurt except for the fact that you need that software to access your home files. 

This is an illustration of what overcharging will do. Thankfully, I caught it expanding before it exploded. 

I've tried blocking my Pi's traffic as a test case. It seems that waits a little too long when the connection is frozen. I could be wrong though. Anyways, try adding a timeout to your script. 

I can't really diagnose it with your given info. Some configuration details and error messages (if any) would be helpful. 

Epiphany can do it according to the Raspberry Pi foundation's blog: $URL$ They didn't mention any specific OS, so I'd go for Raspbian. Installation instructions are on the blog post. 

Compiling binaries is a hassle. I prefer and reserve compilation as a last resort. Add this line to your 

Good question. NOOBS is a (re)installation tool. You can use it to install an OS or nuke/reinstall an OS without wiping or re-imaging the entire SD card. NOOBS is NOT a bootloader. Berryboot, on the other hand, is a bootloader. Yeah, it can be used to install an OS, but it's much more special than that. The primary use of Berryboot, unlike NOOBS, is for multiboot. It acts as a menu to select an OS to boot if you have multiple OSes. 

Check if port 80 is blocked. Or, check if your server is even listening to port 80. should do it for port 80 inputs. 

Get a smaller capacity power bank that can handle the Pi for a few seconds/minutes (this will act as a buffer). 

Not quite. You would overwrite the partition tables when you re-image it and replace said tables with the ones from the image. After your imaging program is done, it would release the file handle to the image file, but since the partition where the file is stored technically doesn't exist anymore, your program can't read it again. In theory, it would work but only once. Also, the file needs to be at the end of the storage space so it doesn't get immediately overwritten. Or at least that's how I think Linux deals with files. The last time I tried this (I did a few months ago), the Pi just hanged. Based on this experiment, you really need another computer to re-image the SD card. An alternative would be to go the NOOBS method and store boot files on a separate partition then either booting to NOOBS or to an OS if installed. NOOBS somewhat already does what you said, but instead of re-imaging the entire SD, it only replaces the OS partitions. This link tells how NOOBS works. 

Yes, it may still be trustworthy. I would't worry about it. Just check your accessories if they draw too much power. If, for example, you have 4 external HDDs attached, you may want to get a powered hub. 

Most transceivers are proprietary, so I'm not really sure if CubeSat modules (link) are compatible with a Pi. They might help you out if you buy one. I suggest using another platform other than a Pi. I'm not sure if it's fit for orbiting at that height unprotected. Also, its components aren't really rated for radiation. ECC memory would also be a plus. If you insist, you can probably use PiTX (link) and a radio amplifier setup. Receiving signals are also another matter since PiTX only transmits. 

Like a comment mentioned, it's either your system or your environment. Or, you simply got a bad stick. Here's a checklist on what to look for: 

By design, you cannot. Or, at least, you're not supposed to. But, here's The Thingâ„¢. The Windows 10 IoT Device Portal actually has an address that outputs a JSON version of what you would see on the actual device portal . It's . In case you need to access it locally (on the device itself, within a Universal App), just replace IP address with . Sample output (RPi2, latest Windows 10 IoT, Realtek WiFi adapter attached): 

No Raspberry Pi has consumer-grade video inputs. But there are, in fact, solutions that offer high encoding quality and low latency. However, they're a bit pricey. Depending on who you talk to, some may say they're worth it. 

Okay, I think architecture is getting in the way here. If you exactly followed the instructions on the site, undo all of them. I'm sure they're for x86/x64 (your everyday PCs). The Pi is using ARM (comparable to mobile phones). Best bet would be to reinstall Raspbian. After that, simply run 

Radio isn't reliable. It can and will get lost if you only send it once. I recommend sending it multiple times and implement a debouncing logic on the receiving side. Sending sample code: 

only infects Windows. Your pi should be safe. Are you sure that the pi was the one who opened that port? Might be that one of your PCs are infected. 

For simulating keypresses, I've personally tried python-uinput. Link should contain everything you need (installation, usage, examples). Basically, it creates a virtual keyboard that you can virtually press. 

Have a look at . It shows a lot of details per partition. Monitor for changes and light up an LED connected to the GPIO. You could even whip up a script and monitor multiple individual partitions. You could use separate LEDs for reads, writes, and activity down to the sector level. Basically, you can monitor any storage device on the Pi. In short, it's magical. Here's what the fields mean (from leftmost): 

Make sure your router's port forward is pointed to your PC (192.168.0.5) and not the Pi (192.168.137.2). This is because packets cannot magically skip a router when jumping between subnets. Therefore, your PC has to act as a router. I assume you have a subnet mask of . Now that your primary router knows where to forward traffic, your PC should now be receiving packets on port 22. The problem is that your PC doesn't know what to do with them, so treating your PC as a router, you somehow have to "port forward" 192.168.137.2 port 22 on your PC. 

I also have an outrageous setup, but with way bigger batteries and is in a server setup. Your idea will work, as stated by joan. What I would do differently is I'd get a power bank instead. Attach said power bank to power so it's always charging. Then, attach the Pi to the power bank's output. Make sure the power bank supports charging and outputting at the same time. Some power banks disable output when charging. With a big enough bank and a proper setup, your pi can happily run for hours days at a time. Here are some numbers: 

Then you're going to want to masquerade your local network's traffic (still following the example above): 

Note that may need to try a few times before it's successful, so may appear multiple times even though the connection details are right. *I know methods that don't need to connect to the hotspot, but they're advanced and are usually reserved for WiFi hackers 

If my assumptions are correct (based on your screenshots, user and brand): You can't use on a floppy disk. 

The first thing youâ€™d want to do is perform a RetroPie Binary Update. To do that type the following in the terminal: 

I think you just hit an authentication problem with X. You need to authorize your cookie. First off, get your cookie by running 

Stay away from sunlight. Work at night if possible. A lot of IR sensors are uber sensitive to sunlight (especially the ones from eBay). Also check for stray sources of IR Sources include: 

Why not upgrade the SD card instead of moving everything to a flash drive? By using the USB drive, you're adding another point of failure, not to mention it's way more complicated than just writing Raspbian to an SD card. Second, a better SD card can be equal or better* than a USB drive. Moving the OS from SD to a USB drive has more risks than rewards. That's all I can say, since your question failed to include diagnostic info (e.g. logs). If you need more storage, attach an external hard drive and use it alongside the SD card. Use the SD card. *Overclocked SD slot + UHS card. 40MB/s maximum read speed 

In theory, this approach should work. Try writing to A process' directory handles the file descriptors the process is concerned about. File descriptor 0 is . 1 is and 2 is . 

I've read online that the Pi 3's WiFi/Bluetooth chip (BCM43438) can also receive FM radio. Why can't I use it to receive FM signals? 

Your Pi is now ready to power external devices. Just connect one end of a connection (Wire end A on the diagram) and attach the other end (wire end B) to either the NO or NC pin. 

True. You need at least 2 physical disks. Pointless. The point of a RAID 1 array is to have two identical copies of the same data over two disks so if one fails, the data is fine unless you're really unlucky and both die at the same time. Plain stupid (no offense :D). When the drive fails, it will take out all your data. No point in doing a RAID-1 then. Also, you essentially halved your storage capacity since, as mentioned, you need to have two exact copies of the same data. It will also be slow since it needs to write data twice. I'm aware you're aware of the capacity halving issue but there's also the speed factor. Cumbersome. You need to hack the kernel to make it recognize your drive partitions as two drives. Utterly pointless. I'll say it again. The point of a RAID-1 array is to have two copies in two drives (2 drives) so if one fails, the other has a copy. If you use only one disk, the essence of RAID-1 itself is undermined. You're better off using all of the disk's capacity. The only benefit I can think of is that if there's a disk head crash, the other partition not covered by the damage will hold a perfect copy of the data. The problem is that you need to send it to a data recovery company since, as mentioned, the disk head literally crashed and scraped the platters. In short, you won't avoid losses. In shorter short, it's possible, it's superbly practical, and you should totally do it (sarcastic tone). 

Your TV might be connected to the Pi in DVI mode, hence the missing audio. Try adding and in your file. 

I think those are the only ones that need testing. For everything else, I don't think they need testing. You'll know when the SD card is bad when you see corrupt files. For USB, just plug in something and see if it works. Ethernet won't work without USB, so there's a hint. For HDMI, sound, and composite, just use them and check if it works. Also, does the CPU really need a diagnostics run? 

It should be okay to install Jessie on the Pi 1. It's compatible now. Besides, you won't break the Pi if you installed something incompatible. So relax and flash away. 

Errors with the carrier is usually caused by the physical layer of the network (Layer 1 of the OSI model). Check/change your cable. Blow on your RJ-45 sockets. Check your router/switch/pi ethernet ports for problems. 

Make sure both of you are logged in as the same user. When you do that, what the other party types will be visible on both connections. 

Sounds like a low-level package, or possibly the kernel, is borked because of the update. If there's nothing important on the Pi, I suggest downloading a fresh copy of Raspbian and reinstalling everything. It's the easiest way out. The harder way out would be to find the damage then do an offline re-install of the defective package. I'd presume it was not hardware damage since you were doing software stuff at the time. Make sure to double-check the SD card (reformat then disk check) before using it again.