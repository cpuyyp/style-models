Basically, to encrypt, I read the file, encrypt it and create a new file with the extension , so that it's obvious (to me) it's been encrypted. I'm not looking for a super secure application, I'm tutoring and when I leave my laptop alone I wouldn't want students to check their future exams or stuff like that. So it's more of a small project for my own fun, that protects files from non IT people. I think I've covered every cases (Permission denied, file doesn't exist, wrong password etc). I think the code could look better, but I'm mostly interested in knowing if I missed some bug I'm not aware of (As I said, I tested the application to the best of my knowledge) or if there are some Python basics that I missed. 

Overall, I'd say you did a very good job for a beginner. I look forward to the third review iteration :) 

Using this technique you don't need to spit the string and do substrings. Obviously, there're more involved :p But I think it would be faster. 

This way each of your is independant. Next problem, there is no relation between your and your . This is bad. A works in a (in your example, we'll keep it simple), but in your code, we don't see this relation. To keep it simple, we'll say that a with a . What does it mean? It means that the method should receive a parameter. 

This could be extracted in a method but beforehand, we need to create a small data type for your anonymous type because methods cannot return anonymous types. 

As a part of my (future) MVVM framework, I need to be able to detect changes on an object. To do this, I used the , a C# object that implements Aspect Oriented Programming to "intercept" calls to an object's method. In my scenario, I'll use the proxy to intercept calls to a 's setter to launch an event, . 

Adding to @SimonAndre's answer, you could use a reversed for loop to go through your array to remove items you don't want. It remains an O(n^2) operation because of the method. So this approach isn't any better, but it's a different way to do it. 

The big problem I see here is your method name. I'd expect to parse my object to a but that's not exactly what happens, right? Your method tries to parse the input and returns a default value if this doesn't work. Your method name should reflect that sentence. I'd call it or something like that. It kind of follows the trend. Now, there's another problem. Your intention seems to be to cast an to a , but you actually parse the of the object. The point is, as a user of your method, I'd expect this to return the default value : 

I didn't check your algorithm, but I think the code could use some object-orientation! You shouldn't have a method in the class that holds your algorithm. Use a class, code your there, and keep your clean. 

Yeah, you probably should throw something.. meaningful! Once again, add some information in there. Think about the poor soul that would need to debug this later. I don't think it's a bad thing to throw exceptions in two separate places, but it's a bad thing to throw meaningless exceptions (I hope the message is clear ahah) 

The remark is useless. Don't forget that your code is meant to be read by people who know how to program. Programmers know that is for reference (for classes at least) and is meant to be custom. Therefore we know that if the return type is for a method named , it will be if objects are equals and otherwise. Also, note that I brought back on a single line the . You should do this most of the time. The header comments will mostly be read using Visual Studio's intellisense. Which means it'll be easy to read even if it looks unreadable in your code. 

Notice I could have create a function, but that's not good as it's confusing. Also, this function doesn't need to be in the scope, it could very well be reused anywhere else. Next, we want to disable the and turn it red. I wouldn't write a function only to disable it. But, writing a function to disable an element for a time span seems like a good plan : 

Lacks comments, or explanations, or refactoring, I don't know. I don't understand what is this piece of code supposed to achieve. I suppose I would understand with an example, but in my opinion this is just a flag that this should be explained better (either with code or comments). Finally, that means . Are you doing this just to avoid writing ? If so, you shouldn't. That's pointless. is a cool tool but you shouldn't force it. It's just really weird in this case. Apart from these little details, I think your implementation is quite solid! 

Use , reflection should never be used unless you really need to. I'm not a fan of returning a not executed as you do in your method, you should consider executing the query and returning the , otherwise you expose yourself to potential bugs (If the client of the method messes up with the query) and it is harder to debug after since you might not know when is your query executed. You should consider commenting your code, one day you will be happy you did it! I'm not sure why your generic repository is named , maybe it's because it has a meaning I don't understand in english but you might want to rename it in a more generic way (Say... since it is an implementation of your interface for an SqlLite data access). 

I don't really like the nested classes, it makes the code hard to understand since, reading it quickly, I have a hard time telling which code is in which class. Also, in C# you have auto properties, meaning you can replace 

There's also a small problem with your code. When asked if I want to play again, if I enter an invalid command, I'd just restart the game. 

There's already the implementation. This could lead to some confusion. I'm pretty sure that exposing only the implementation would be enough! If you're worried about needing to cast your and not knowing the type, I'd need to ask you : When would you need to cast your from outside the (Which knows the type of , thanks to )? The message could be clearer. After all, explaining that isn't that much of a long message and it's much clearer than . I'm not sure you're using the best design pattern to deal with your problem. After all, and share absolutely nothing. is dependant of . Since isn't created via the factory, we'll start by removing it from here. After all, why would a need a as a parameter? Argument #1 : If the class or the doesn't need a class, it means the is an implementation detail. Interfaces/abstract classes shouldn't show implementation details. To show my point, here's an example. Imagine one day you have two child classes of . One which uses a and one that uses . Will you add to your ? Would you add parameters like this for all the child classes? The class would end up being a mess. Argument #2 : If is a property because you didn't want it to be a parameter of the method, what would happen if you created a problem that didn't need a ? The method would throw . But is it really invalid? No. The child class didn't want to use , and shouldn't need to use it, as it isn't a parameter of the method. So now that you see why the property isn't the best move, let's see the solutions : Either you completely remove the property from the class, because it is an implementation detail; or you add the as a parameter for the public method. If you think will be used for every problem created, it should be a parameter of the method, otherwise it should be left out from the base class. Right now, I think should be a parameter of your method , let's check all that out. First, we create an : (Note : I think would be a better name than just , it's less confusing! And for the following examples, I will apply the review I made above) 

This is a partial review about some things I saw reading through your code fast. The setter of your property shouldn't be public, because I could set it to one million when there's only one element in the queue. You should specify the accessibility modifier for your member field, I guess it is , and I think you should put it at the top of your class, it is easier to read this way. I don't think you should expose methods and as they aren't part of a but more of its implementation. Exposing these methods imply that you use an behind and the users of your class shouldn't know about this. Also, in your method, you grow your array every time your array is half filled, it is overkill. You should expand it only when the current array is full, otherwise you will always have half your array wasted. 

Since we don't want a separator at the end of the code, we need to do , and we need to see how many separators will be neccessary, hence the . 

Now, your logic is separated in multiple methods, which is better but not perfect. If you want to push this even farther (for testability for example), you'd need to implement an , let's say (I can't tell more because there's a little lack of context). So now we'd have : 

Notice I've changed and for and . It's clearer! One could argue that and should be in the same method, and have slightly different parameters to decide which to show, but I think it's best to keep them separated. After all, maybe you'll end up asking for a feet/foot height as "5'1''" instead of inches. That way your methods can change their logic without impacting the other one. 

Now, this test might fail, if so, it's because your class doesn't override the and methods. It probably should as they both define the identity of your object. Let's get back to my last example. What is different from your test? 

I'll leave the implementation out of the review as the question gets long already, but I'll add a link to the GitHub repo at the end. 

Maybe I'm missing something, but you never use your variable, you should remove it as it's an unnecessary call to the DB. Also, since you use , you should check at some point if it's . If it shouldn't be Ç¹ullFirst`. 

First, I'd like to say that you're pretty well informed for a self-taught programmer. Still, there are some things to work on. 

If you want it to be , you'll need to read on the pattern again, because something is wrong. Finally, your API as a big security flaw. You're using an to update your database. What does that mean? It means that if I send http get requests or use Cross-site scripting to inject an request on vulnerable websites to your website, you've been hacked. Your data will be corrupted because nothing would stop anyone from sending thousands of thousands of requests to your site. You need to use HttpPost and to setup security measures on your website so this doesn't happen. Overall, you need to check how to use the and read a little bit on web security! :) 

If you plan/need to fix this, you should keep the key as an instead of a and in your if, find a way to "concat" your with something like this : 

Field members are supposed to be , which means should be . Why? To easily differentiate them from the properties. You could make your fields , this way they can't be modifier afer they've been initialized in your constructor. (You could still Add/Remove/etc.. from the list, but the reference cannot be changed). Now, if I look at your code, I see that these lists are never used as lists. I mean that you never use methods/properties that are specific to the , only extension methods defined for . You know what that means? It means you should declare a instead of a in your fields. If you think you might want to alter these lists later, you should declare a .