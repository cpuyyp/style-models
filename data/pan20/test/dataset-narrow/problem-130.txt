This applies the access list to Interface Gi 0/0 in the inbound direction, which means that the traffic is filtered when it enters the router using the specified interface. 

You are running DMVPN on a VRF enabled device. Both your public interface (used as tunnel source) and your tunnel endpoint is VRF enabled. To have the tunnel endpoint in a VRF, you need to enable VRF forwarding on the tunnel interface, which you have done. To have the tunnel source in a VRF (called frontdoor VRF), you need two things: 

It is advertised from R1 (150.1.1.1 / 155.1.146.1). At R4, the route is considered as not synchronized and accordingly there is no best path. But why is it advertised by R1 in the first place? Why does R1 select a best path when both available paths are not synchronized? 

Packet Tracer is a tool for basic network simulation (actually specifically designed for CCNA preparation). And simulation is the key word in this sentence: It only simulates an IOS router, and it lacks a fairly broad set of features, including but not limited to: 

I don't think its possible to configure the phone's second port as trunk port. You can configure a separate voice VLAN for the phone, but the phone's access port will be an access port. Apart from that, even if it was possible, how do you want to achieve VLAN configuration on an unmanaged switch? You want to separate the VLANs 11 and 12, which indicates you need the VLAN information in the packet header. As the unmanaged switch is not VLAN-aware, it won't remove the VLAN information and send the tagged frames to the host and printer connected to the switch. And I'd guess thats not true for all unmanaged switches, some of them may just drop VLAN tagged packets. All in all I'd strongly suggest to rethink your network design. To help you further this direction, we need more information about the circumstances. Why not connect the phone and printer directly to the managed switch? 

The first two rows are in/out of the network facing interface, and the third + fourth row is the customer facing interface. There are no other interfaces and all traffic is supposed to the router via the first interface. Correct routes are in place, OSPF and LDP is up. Unfortunately I am a "Cisco guy", I do not now too much on Juniper devices. However, as far as I can tell, the router should be forwarding all the traffic. I have one suspicions, though: Roughly 19,278% of the packets in the PCAP file is UDP, while the rest is TCP, making up roughly 10,979% of the total traffic volume. This translates to roughly 15,15Mbps being UDP traffic, which nearly matches the not-dropped packet volume. As the traffic is recorded and later replayed, the packets do not make up correct TCP sessions. Does the router perform some kind of TCP SYN checking? If this is the case, this also would break asynchronous communication. I have found this article, but my device does not understand the "set security flow *" commands. Further I have found and tried the steps from this article, but traffic is still dropped. Here is the configuration of the device. So why is the traffic dropped? 

In Cisco IOS I would just swap both parameters of the aaa authorization command line, but that does not work on ASA, LOCAL has to be last one. How can I achieve a local fallback user, which can be used to login and work on the CLI even when TACACS server is reachable? 

Finally I found the issue, which was quite a stupid moment... The problem was the MTU of the link combined with many 1514byte packets in the PCAP with the DF bit set. The PCAP file was recorded at a normal Ethernet connection. In this particular time frame, there were several large packets with 1514 bytes each and the Do Not Fragment (DF) bit set. During the troubleshooting process, I replaced the MX80 with a Cisco ASR10002-f router, and used which in turn shows a high counter for . After knowing this I modified the PCAP and truncated the packet in sizes below 1500, and the problem was gone. 

Technically you could simply use AS-Path prepending, als described for example here. This allows you to prepend the customers AS without the need to fire up another BGP instance. The moral part of the question is to be answered by you. Except for transferring the prefix I do not see another method other than inserting the customers AS in any way. 

The suffix basically requires the prefix length to be 25 or higher (ge = greater than or equal). In other words, the entry could be rephrased to: permit any network which is inside the network 10.9.1.0/24 and has a prefix length of 25 or higher. This would include 10.9.1.0/25, 10.9.1.0/26 as you have indicated (up to /32 as the attribute is omitted) but not 10.9.1.0/24. It would however also include things like 10.9.1.128/25 or 10.9.1.200/30, as all those networks are within the 10.9.1.0/24 network having a subnet mask greater than or equal to 25. Another example would be . This would exactly match the following two prefixes: 10.9.1.0/25 and 10.9.1.128/25 As the logic now is: permit any networks within the 10.9.1.0/24 range which prefix length is greater than or equal 25 and lower than or equal 25, in other words, exactly 25. 

In this example, the first route learned by OSPF will be placed in the routing table. As the second one is more specific (25 bit prefix instead of 24) it is also added to the routing table. Note that while the second route is included in the first one, they are not equal due to the different prefix length. The third and fourth routes are identical, but the AD of directly connected routes is always 0 and hence this route is preferred. So basically you can influence routing decision in at least three ways: 

Note that each access-list has an implicit deny ip any any at the end, which means that every traffic not permitted explicitly before will be dropped. To change that behaviour, you can put the following line at the end of the access-list: 

You say you are already running virtualized OSes on the host, which are running in different VLANs. Hence I guess you already have the switch configured to perform dot1q trunking (Cisco terminology), otherwise you would not be able to have different VLANs. Regarding the main host, you can configure Hyper-V either to use a tagged VLAN or send the management traffic untagged. Compare this answer at Microsoft Technet. If you configure the management VLAN to be tagged, there is no need to configure an untagged port at your Switch. Otherwise, you need to configure one untagged VLAN (HP), or native VLAN (Cisco terminology). You can set any existing VLAN to be sent untagged. In summary, the management packets are tagged anyway. Either to already tag them at the host, or the switch performs the tagging, as soon as the untagged packet coming in at native VLAN proceeds to another trunk, there this management VLAN needs to be tagged. 

Configuring BGP to pair using loopback interface and use some unterlying routing (for example static routing or another internal routing protocol) to provide to equal paths to the opposite side, which will effectively turn on load-balancing Using the BGP multipathing feature, which is however a little more complex. One has to consider whether load-balancing should be performed with an iBGP (internal) or eBGP (external) peer or possibly both. To be candidates for multipathing, the routes must be equal in the following attributes: 

I have a cisco ASA I want to connect to a TACACS server for command level authorization (write and read-only access). This actually works quite good. Further, I have a local fallback user configured with privilege level 15. I can login with this user, but I can issue no command, the ASA sends the request to the TACACS server which for sure does not know the username. ASA configuration: 

You can find detailed information on BGP multipathing by searching for this keyword or having a look at this Cisco document. Intradomain Routing Most of the internal routing protocols support easier load-balancing. As soon as the one metric being used is equal, multiple equal costs routes can be installed into the routing table. OSPF for example by default uses up to four equal cost routes. Other routing protocols such as EIGRP can even do unequal cost multipathing. Refer to the definition of the actual routing protocol to find out their default behaviour. Final sentence To make on thing clear: it is up to the routing protocol whether equal paths can be used or not. In any case, if there are equal paths, both paths are installed into the local forwarding table on the router and other, not ruouting protocol specific, mechanisms such as CEF on Cisco routers are used for the actual load-balancing. 

We have a Cisco ISE 2.0 in our lab doing some 802.1X testing. To have synchonized times, we use an NTP server in the same subnet as the ISE to sync all the components (stratum 3, based on Bluecat appliances). All switches, firewalls and other components use it as timezone and it works. I configured the same NTP server on my Cisco ISE, but even after multiple restarts it does not use it as NTP source. 

Background information I have a Cisco 2911 router and a Cisco ASAv connected using a IKEv2 based IPSec tunnel. The tunnel initially comes up fine as soon as there is some traffic from the routers end. The router is mobile, hence it has changing outside addresses and is always the initiator. On ASA side, the VPN peer is hence not configured, a dynamic crypto-map is used. There are two SAs defined for the IPSec connection, the left IP is the router's side, the right IPs are ASA. 

According to your first question, the answer is not as easy as you might think. When there are multiple routing protocols configured, all of them will run and form adjacencies to their next hop routers and exchange routing information. Most if not each routing protocol has a routing protocol specific information database, containing routes exchanged by this routing protocol. On cisco gear you can view them for example with or . Now, the router has to decide which routes are placed in his actual routing information base (also called RIB or routing table). Here, the most important factor is the "precision" of a route. That is: the higher the prefix length is, the more exact is the route and the more preferred. Only if there are two identical routes, that is same subnet address and same subnet mask or prefix length, the administrative distance comes into play. Suppose the following example (note that ADs are default values from Cisco): 

It actually depends on the NX-OS version running on the switch (and hence the switch model). Starting with version 6.0(2)N2(1), the command has been added to the nexus world. Compare the release notes of this version. As far as I know, previous versions do not support this or any similar command. However you won't be able to run NX-OS 6 or later on the 5010 or 5020 platform, it requires the 55xx platform. 

192.168.10.0/24 is a network behind the router, while xx.xx.66.0/24 is the network behind the ASA and 192.168.255.0/24 is the IP pool for AnyConnect clients connecting to the ASA. To fire up the tunnel as soon as the router starts and has an IP address assigned on is outside interface (Gi 0/0), the router has an NTP server configured which is in the xx.xx.66.0/24 network. This actually works fine, the IKEv2 SA is up and working, the first child SA is also up and running. Problem statement The second SA (192.168.10.0/24 <=> 192.168.255.0/24) however only works when I first initiate the SA from the routers end by sending some packets (for example with , where the .10 is completely random). Then the SA is up and I can connect to the router from the AnyConnect pool. This however is not the idea of this concept, as the tunnel should be established such that the support engineers connected to the ASA via AnyConnect can access the router and troubleshoot any issues. Looking at the debug output from , and does not show any hint that the ASA at least tries to build the tunnel. Configurations Here are the relevant parts of both configurations. If you are missing anything, please let me know. Cisco 2911 Router, Running IOS 15.4(3)M3 w/ security license 

The track object and SLA is actually working fine and the route-map is registered with the track object: 

For a research project I need low timescale interface utilization measurement on a Cisco Nexus 5000 devices and some fabric extenders. Background: The switch is used to "simulate" an optical network, and traffic is forced pass this switch. I can then simulate fiber cuts by simply shutting down the interface. To measure results, I need to measure interface utilization in a rather timescale. Sub-second would be ideal, but is not necessary. Getting utilization in 1 second intervals is however the goal. My first idea was to use IFMIB and query the Interface the Byte Counter. Doing this on a regular interval allows me to calculate the average utilization in the last timeframe. I however observed that counters do not get updated in realtime, but instead each 10 seconds or so, which definitely is not fine-grained enough. Further, if the switch even has little load, the SNMP responses may get in irregular time intervals, which distorts the results. Another idea was to query the device via Netconf / XML, however the agent is too slow. Second interval polling is not possible here. My final idea is to use ERSPAN and capture the different VLAN traffic and send it to a management station. There, the VLAN tag can be used to distinguish the Interface, and I need to write some utility which actually counts the packet sizes. In my opinion this may allow second level measurements, but represents some overhead on the other hand (additional machine, and I don't know if Nexus will forward ~7GB/s ERSPAN traffic). Do you have any other idea how to measure bandwidth on an interface? 

Intersting to see that the router shows two SAs, despite one of them being down, while the ASA shows only once. Bringing up the SA I can bring up the SA from the router: