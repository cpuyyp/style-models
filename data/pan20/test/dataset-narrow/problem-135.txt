There are some poorly designed or constructed devices. We experienced this with some devices that had pins shorted in a way that requested PoE from the switch, but the devices could not handle PoE, and they blew up when connected to a PoE switch interface. This was a design defect in the devices, and we needed to disable PoE on the switch interfaces where those devices were connected. 

That makes sure that all stations have heard the jamming signal, and no station will transmit while the jamming signal is still traversing the link. A host immediately next to the host doing the jamming will hear the signal before other hosts on the link, and it will stop hearing the jamming signal while it is still traversing the link. 

The controller just bridges the the Wi-Fi traffic; you get DHCP from a DHCP server, either on the LAN or on a different LAN with the aid of a helper address in the router port for the LAN. You normally want to trunk multiple VLANs to a WLC: one for management, and one or more for Wi-Fi clients. These VLANs use one or more DHCP servers for any DHCP clients. You have twice asked this question in other ways. The answer remains the same, your WLC has nothing to do with DHCP. You need a DHCP controller for the VLAN of the Wi-Fi clients. I don't believe you have the grasp of networking necessary to accomplish this, and I strongly suggest you hire a contractor with the expertise to do this. 

You are not assigning 70% of the bandwidth because you are using the keyword. You are not reserving or dedicating the bandwidth you assign. If a class is not using all its bandwidth, other classes can use it, too. The default class gets to use any unreserved bandwidth that is not used. It could use up to 100% of the bandwidth, as can any of the classes, if it is not reserved. The command doesn't exclusively reserve bandwidth. Cisco has a paper describing how this works: 

You are allowed to splice fiber cabling, but you must consider the effect on your link attenuation and loss budget. Also, simply using parts that are rated at a category doesn't necessarily mean that you end up with a rated link. Installation is the biggest failure in cabling. You must use a proper tester (quite expensive, but can normally be rented, if you know what you are doing) to run the link through the test suite for the particular category. Any failures must be fixed. Even experienced installers can have trouble getting Category 6 or 6a to pass the test suite. You can permanently ruin a cable by exceeding the minimum bend radius or maximum pulling tension when installing, and I have seen simple things like having the Blue wire on top of the Blue/White at the termination prevent the link from passing the test suite. 

It sounds like the Wi-Fi wasn't set up properly in the first place. You probably want to do it correctly, or you will continually run into problems. This involves performing a wireless site survey to identify proper WAP placement. After you get the survey, you need to install the WAPs, probably with a wireless controller to get seamless roaming. This will involve cabling for the WAPs (wireless is not completely wireless). After implementation, you should perform another wireless site survey in order to be able to tweak the WAP placements and radio strengths. This is how companies do successful Wi-Fi design and implementation. Also, you don't own the airwaves and cannot control other wireless implementations which may happen close by and cause interference. The use of monitoring WAPs can help identify sources of interference which didn't exist before, and you may need to modify the AP placements and radio power over time to adjust for changing wireless conditions. 

I can't reproduce this in my lab, using 12.4(24). Same topology, RCore area 0 loopback, R1 with lo0 and interface in area 1, R2 with lo0 and interface in area 2 (both NSSA), redistributed route gets picked up for ECMP on Rcore: 

Possibilities I can think of: Depending on how the route is making it into OSPF, and what OSPF route-type is used, cost to ASBR router may/may not be factored into the route selection process (for ECMP to work, both route cost, and cost to ASBR have to match). Seeing the metric on the actual LSA for both may help. I was able to reproduce this on IOS by mimic'ing your configuration -- placing the anycast on an interface, and placing the interface into an area. If you do need ECMP, consider redistributing the route into OSPF, as that does appear to work. 

I would strongly recommend moving to an OSPF/iBGP design for something of this scale, with the core switches acting as BGP route reflectors. BGP has so many more administrative handles for tinkering with routes over OSPF, allowing better scale and filtering. If you scale to the point that you have more networks than your ToR switches can program into CAM (unlikely if each is a different stub), you run into issues. Each additional zone is more CPU load on your ABRs (core switches) as well. Have one OSPF area 0, with all loopbacks and router-to-router links in it. Then setup iBGP sessions between your cores and ToR, advertising default-only to ToR, and redistribute connected/static routes on ToR into BGP. 

Is "mpls bgp forwarding" configured on the interface facing your transit provider? Same on their interface facing you? edit: Just reviewed your config, and you do have it -- would check with your peer to see if they have it configured as well 

That is a valid wildcard mask. It will match any IP with the format 10.(160-191).1.(0-255). Whether or not this is intended, or good design, is unknown. Wildcard masks are just "do-we-care" bitwise masks used when looking at an IP -- a value of 0 means "do-care", and 1 means "don't-care". In this case, 0.31.0.255 translates to: 00000000 00011111 00000000 1111111 So the IP listed in the ACL (10.160.1.0) will have a binary value of 00001010 10100000 00000001 00000000 Testing an IP (10.190.1.200): 

The carets represent the wildcard mask, showing which bits MUST match. Since they do, 10.190.1.200 would match this ACL statement. 

If a AS has a single peering point with another customer ASN, learning 500 prefixes from that customer, and that session goes down, it could trigger a mass withdrawl. 

If you are not tied to CallManager, Asterisk is an open-source solution to provide SIP telephony, and can automatically email voicemails to users. 

It's treated as a fresh session up when the peers restart. TCP handshake, capability re-negotiation, address family advertisement, and then NLRI exchange. If the hold down timer expires, the peer is marked as dead, the session goes into the IDLE state, and follows its own rules for transitioning from IDLE to Active (actively attempting to establish a TCP connection). Note that a peer in the IDLE state can still accept an inbound TCP handshake from the other router. Exact time needed for a specific route to be available again is dependent on the total # of NLRIs to be exchanged between the two routers. If you're exchanging full tables (500K+ NLRI), depending on processor size on both routers, it could take upwards of 5 minutes. If you only have 20 routes to announce, they'll process the NLRI real quick like.