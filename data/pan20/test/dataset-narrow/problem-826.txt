You're using SQL login, right? Not Windows authentication. SPN is used for Windows authentication (Kerberos) when both the client and server are members of the domain. I think there's another problem that prevents you from connecting to your SQL server. Might be routing issue,firewall, port configuration for SQL service or antivirus. Try disabling the Windows Firewall on SQL server and connecting again to see if it's related to firewall. Same goes for antivirus. For port configuration, you can verify it using SQL Server Configuration Manager and running command to see if port is . 

You can block DHCP traffic on Windows 7 with its local Windows Firewall and add PXE options on your other DHCP server if it's possible. So, everyone gets IP address and PXE information from a single server. 

That's not a requirement. The article mentions it as a best practice because it's important to have the same patch level across all of your nodes to avoid incompatibilities and surprises. If your WSUS servers are synced, it shouldn't be a problem. 

Did you try downloading and using SSMS 2014 to see if you can connect? This problem used to come up when using different versions of SSIS and SSMS. 

These are the privileges. You already know what permissions are. If you think about it , there isn't a distinct line between them tho. "Allow log on locally" is a privilege , but, when you add a user there, you're just giving them permission to log on to that computer. Again, you can say that permissions are given on resources, but, "computer" is also a resource in my example above. Instead of trying to understand what they are called, you should learn the list of privileges from the web page I linked above. That is the whole list and that will help you solve your problems. 

There's no PDC or BDC after Windows NT4 . Every DC can make changes in AD data. Latest change wins. So, yes, you can make the update on any DC and it will be replicated to all of them in the same domain. If you change the same attribute on 2 different DCs at the same time, latest change will overwrite. 

You can use Activity Log from the new portal. It's under Management Services - Operation Logs in the old portal. 

Now you know your snap-in's ID, you need to use it in GPO. There are couple of ways to do that. You can edit the administrative template file () you used before and add a new policy section with Hyper-V snap-in's ID, or, you can use admx file to see what is modified in registry when you change that Group Policy setting and deploy correct settings with GP preferences. Instead, I just changed one of the settings using gpedit.msc , opened in notepad to see what it changed, opened regedit and added the new key with snap-in's ID and value. After testing to see if it worked, you can export it and deploy it using GP preferences. 

And that worked fine. Once. I then reconnected using username and password, this time I checked the box to remember these credentials. Worked fine. Now I again want to connect as another user. So I would like to disconnect from \\DS412 and reconnect using different credentials. I tried using NET USE, but it no longer lists the \\DS412. Entering NET USE \\DS412\IPC$ /DELETE again results in The network connection could not be found. Restarting the computer does not help. The \\DS412 does not automatically show up under Network in Explorer, but if I do enter \\DS412 in the Explorer bar, it immediately reconnects using my old credentials without prompting. Note that I am not mapping this UNC path to any drive letter. I have found this advice, but as you can see it does not help. I have found suggestions to use regedit, but I do not find the exact keys suggested, and I would really prefer not to hack the registry. This should be doable using command line commands? I am running Windows 7. 

We are a team of less than ten persons that need to quickly set up a git repository that supports active directory based authentication. The simplest solution seems to be to use a file share with a git repository and reaching it using a unc path, e.g. 

I connected to my NAS using windows explorer, by entering \\DS412 in windows explorer. It prompted me for a username and password. I entered them and then the DS412 showed up under Network in Explorer. Worked fine. The share was listed by NET USE and I used this command to disconnect: 

We have been working for years with TeamCity and for several weeks with git as version control system. I have set up integration with TeamCity and that has been working fine. We have four different projects that use git Recently some of the projects have stopped working intermittently. The build fails to start. Messages like this is shown in red. (with varying agents): 

However, we are a bit worried about robustness. Are there no issues with concurrency when several people use the same git repository and there is no actual server component running? Clients are running windows 7, server is Windows Server 2008R2. Using msysgit 1.8.1.2 (I am well aware that there are many other git server solutions, but, especially given the requirement of AD authentication, they are not as simple to set up) 

Strangely there are other projects that have very similar configuration that work just fine. They use the same build agents. We use Atlassian Stash as Git server. I have looked at all the logs there, and nothing at all happens when I force a run in team city. So, it would seem that TeamCity does not even reach the Git server. If I test the VCS connection in TeamCity it works. I have tested restarting Stash. It did not help. We are working with feature branches. But I have tested turning those off and it did not help. Today the builds have actually worked a couple of times, but the problem returns. We are using TeamCity Enterprise 7.1.4 (build 24331) and Atlassian Stash v2.1.2. Both the build agents and Stash run on windows servers. Any idea on what is wrong and how to solve it? I have posted this question on the jetbrains developer forum, but gotten no answers.