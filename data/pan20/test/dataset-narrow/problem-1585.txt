I see you're using Matlab. Go in and make sure the support package you're using is the latest available. I'd recommend going directly to Mathwork's support community rather than here as it doesn't appear there are many familiar with Matlab and Simulink, and it could well be a bug that the support package maintainer needs to fix. For others wondering what Simulink is. It's a high end control system and programming environment used in aerospace and other markets requiring modeled and tested systems that can generate safety certified code. JPL, and NASA are heavy users as well as the defense industry among others. It's very expensive outside of student and crippled home editions, about $20k USD to do what he's doing with a commercial license, so unless you're heavily into math, engineering, or high-integrity control systems it's unlikely that you'll encounter it, but you probably frequently rely on things that run the code it's generated or helped design. 

I can't guarantee it will work, but do a to get the latest kernel and modules and try it again. It's been hit an miss on some other distros and the most reliable solution is to back up what you want to keep somewhere, wipe the card, and reload with the latest image. 

Programs developed in Linux are normally added to /usr/local/bin while software included in the distro is put in /usr/bin or /usr/sbin. The difference is sbin normally requires root privileges. Type at the terminal to see your system path and you'll see /usr/local/bin there showing it's one of the places the shell will look when you type in a program name. When multiple users are developing on the same system it's not uncommon to add a /home/username/bin to their own path. I normally add my scripts folder to my own path to have them quick at hand. For example to add my own scripts directory to my path it would be if you want everyone to have access then put it in /usr/local/bin with the appropriate permissions. 

The short answer is no. As others have said, there are no DC connections from the Ethernet jack. However if you are ready to make up your own cable, I believe it can be done. First you'll need a PoE (power over Ethernet) device - because your regular Ethernet switch or modem most likely won't be sending 5v over the Ethernet cable. I have set up PoE for an Arduino, but since PoE shields are available for the Arduino, that's not too hard. I used a PoE device from Freetronics, that cost me about $30 NZ. It has a DC input, which i connected to a wall wart. Then connect a regular Ethernet cable from the router/switch to the PoE device. Also a cable with all cores connected to the other side of the PoE device. The other end of this cable goes to an Ethernet plug, but this only uses the regular 6 wires. The other cores will take power from the PoE device and these would have to be routed into the Pi. You might be able to route them to the Pi's GPIO and so power the Pi through GPIO or you may be better off grafting a micro USB plug on the wires and using that to power the Pi. The PoE device takes a power input and routes this through the Ethernet cable. It also passes the Ethernet data straight through from the switch/router. 

Firstly, I must say that I have not tried this, but I have an app on github that includes code to get data from the BMP085. It's part of a weather station receiver app that I put together - largely using other people's work. Kevin Sangalee (who has done a lot of work on weather stations) had written a file bmp085.c which I included in my app. I don't have this component so the code is just ifdef'ed out on my app. You might get some help from the code, which is in C. You can find my git repo at $URL$ 

The difference between including the option or not, is slight, and is irrelevant in this case, as you can't poweroff the Pi anyway, not without manually removing the USB power. 

If you do not have to authenticate, add the following lines to the following files: For general browsing, in add 

There are many different types ranging from $1 to $5, depending if you want a single display, a dual display, as pictured, or up to a quad display that also shows power (Watts) and charge (Coulombs) 

Looking at WiFi country code resets, it seems that the Wi-Fi Country Code menu to which you refer, by default, the version of Jessie that you have, displays Andorra, even if the actual country code is set to something different, which indeed sounds like a bug. However, if you look at the actual config file, what country code is listed? 

I'm not sure if this is a trick question, but the answer is "Yes". Here is a lazy google based answer: 

Whilst your question has nothing to do with the Pi, I will quickly point out what you are looking for. I, rather extensively, looked into this a while back, and blogged about a number of XBee modules than can do this, see Using XBee 868 as R/C. However, there are a few caveats, the main one being that as the power used is very high, there is only a 10% duty cycle. This, effectively, means that after 6 minutes the XBee will shut down, and not work again, until 54 minutes later. This is due to some legal reason (FCC/ETSI rules?) There are ways around this, by having some external circuitry that can reset the XBee to make it think that it is starting afresh. Also, there was an issue related to the quality of the video, as bandwidth was not sufficient. In addition, 900 MHz devices are for the US, whilst 866 MHz are for the rest of the world (apart from a few other places where civilian use of the 900 MHz bandwidth is permitted), due to conflicting bandwidth with GSM/3G mobile networks. See XBee Pro 866/900 MHz, or similar, but you will only have a 10% duty cycle. See XBee Guide. NOTE This post is a work in progress and I am trying to find all of the links that I found a year ago. 

I'd backup the suggestions so far. The most likely point of failure would be the SD card. My own experience is that the SD card is fairly fragile. I had a power outage for just a second (New Zealand's electricity network is not that great even in the main cities!) and though the Pi would be able to restart after a power outage, in my case the SD cards failed dramatically. I had two Pis crash and get corrupted SD cards - I had to re-install the OS. My 3rd was able to pick itself up and reboot OK. Of the two that failed one had such a badly corrupted card that I was not able to put a operating system on it, it ended in the bin. For a permanent fixture, you should consider that the power is likely to go off and come on without warning. Make sure your app will start automatically on boot. Also look at avoiding writing to the SD card - which will wear the card out (albeit very slowly). I'd imagine that an art installation wouldn't need to write to files or anything, but if it did then look at having your files in /tmp, which should be in RAM not on the SD card. You might consider ways of including a backup power supply. Perhaps solar cells or LiPo batteries. Another approach would be to think about redundancy. Would your project be able to use two Pis, one that would cut in if the other failed? It could greatly complicate your project but for mission critical applications, that's a standard approach. Sorry I've not included any actual figures as you have looked for, but maybe there's some information here that could help you think round the problem. 

As a security researcher that normally breaks secure systems that's quite an interesting question. You basically want DRM on a system that someone is in physical possession of. You have to let your client read the data and by the nature of doing so give them a vector to copy it. For the vast majority of end users you can glue in a Yubikey with a decryption password for the SD card. That gives you an avenue for updates. As for potting or using epoxy on the RAM, if someone of that skill is trying to copy your data you're not going to stop them with a bit of epoxy or glue. You can put it in an armored box completely potted except for heat pipes for the chips and someone will still defeat those measures if they're determined. So for the practical advice, use the Yubikey to boot that's glued in and have a lawyer draw up a nice NDA with provisions for reverse engineering and removing data outside of it's defined use. There's nothing like legal liability that will stop many companies in their tracks. If someone is going to covertly do it and they have the skill to extract data from chips and data busses, they'll do it anyway. The lowest hanging fruit is just to expose and tap the serial data on the USB bus to snag the key. The other is to just scrape the webserver with scripts. I'd host the device in my control and use 2 factor authentication with a token I give them to gain access over the net. Then at least you can monitor logs for activity that indicates web scraping. 

It's currently not supported, but there are people discussing implementing it. You'll have to use an external USB supported device. 

Try typing . The man pages give you a complete list of the options that a command can take, and an explanation of what they do. In the case of : 

Use . This should give you the data that you require and enable you to determine which FD points to which device. 

If that still says Andorra, then you may be better off setting the correct code in this file manually and ignoring the GUI menu, for the time being. I would also ensure that you have the latest update, as the issue that you have found may already be fixed: 

However, the SHELL will use the first binary that it finds (when searching through the paths in the PATH environment variable, so if you put /usr/local/bin at the start, like so 

The GIT repositories on kernel.org contain the source files. Taking one at random, i.e., a/src/gatt-database.c b/src/gatt-database.c, you can see that it is written in C. 

then it will execute binaries, of the same name, which are in in preference to those in , for example. If you modify your (or .) and then save it, re-source it with , and then type , to confirm that your path has been changed. If I understand correctly, as both of the binaries that you want to use are in , then this should fix your problem. NOTE: The fact that they are links to other locations does not matter, in this case, as neither of them point to , or any other directory in your path. 

Looking at WiFi country code resets, it seems that the Wi-Fi Country Code menu to which you refer, by default, the version of Jessie that you have, displays Andorra, even if the actual country code is set to something different, which indeed sounds like a bug. However, if you look at the actual config file, what country code is listed? 

Not quite answering your question, but I find it easier to assign fixed IP addresses to my RPis. In my router I configure the DHCP settings so they allocate in a range (say 100-255) then I assign fixed IP addresses in the range below 100 for some on my machines. Assuming I want to assign the IP address 192.168.0.42 and myrouter (gateway) is 192.168.0.1, my /etc/network/interfaces file looks like: # loopback auto lo iface lo inet loopback # My config, Static IP auto eth0 iface eth0 inet static address 192.168.0.42 gateway 192.168.0.1 netmask 255.255.255.0 # Network address "family" network 192.168.0.0 broadcast 192.168.0.255 

You may have already checked, but make sure you have your LEDs the right way round. Short wire = negative, or if you've trimmed the wire to be the same length, there's also a flat edge to the LED on the negative side. Next thing, be sure you have connected the jumpers to the right connectors. I've wasted time looking for software errors when I actually just missed the breadboard connector by one row. You could try swapping, say your connectors for pins 13 and 16 to make sure the On/Off parts of your circuit are wired properly. 

I have a script named upload_picture in one of my folders and I invoke this when a picture is ready to be saved. My etc/motion/motion.conf file has a line almost identical to yours. Mine reads: on_picture_save /home/derek/webcam/upload_picture my upload_picture script is quite simple. It sleeps 10 then uses wput to FTP the image to a web-site I don't have an on_motion_detected setting, but looking here It seems the format is the same for the two options. So I'd check that your script is actually being called. And I'd do that by including an echo "Running" > /tmp/foo line to the script. Also make sure whatever account is running motion has access to run the script, and probably that it has a shebang at the top (#!/bin/sh). When you change motion/conf you would probably want to restart motion and the link I copied explains that. Another thing you could try is at the end of the on_motion_detected line put >/tmp/motion.log 2>&1 which will record output from your script to a log file 

If you have to authenticate, add the following lines to the following files: For general browsing, in add 

Surely any OS would do, so long as it supports Java (i.e. it has a JRE), you can specify which binaries execute upon startup and it supports OpenCV - which is all of the common Pi OSes. As you will only be running this app, you don't need an OS with every service installed, nor would you require a desktop environment, just a minimal setup. You should google for "lightweight linux for Pi" to see the full range of options, as it is difficult to give you a single answer without it being an opinion. Nevertheless, some of your options would include: 

As I have already commented, I may be running into this issue shortly, as I am planning on using a Razberry, a RPi dongle for use with Z-Wave home automation devices. The partial answer to your question, and I am paraphrasing it heavily, "Is lib8 on my machine, and if not how do I get it on there?", may be found in a small, typo riddled, article from the Razberry support pages, Will Z-Way run on my specific platform?/How to check is v8 runs on my platform?[sic] 

If that still says Andorra, then you may be better off setting the correct code in this file manually and ignoring the GUI menu, for the time being. I would also ensure that you have the latest update, as the issue that you have found may already be fixed: 

The source code is written in C. Look at the BlueZ download site, and follow the links to the source code on github 

I have one of the newer Raspberry Pi 2 B, and wish to install Pidora. I have downloaded Pidora-2014-R3 (the [latest?] version available from the front page of the Pidora site) and copied it on to a microSD card, and inserted it into the microSD slot on the RPi. When I power up the Pi, the green LED lights momentarily, but then goes out and the RPi does not boot. I have followed the installation instructions from Pidora as well as the two guides from Raspberry Pi Documentation: Installing Operating System Images on Mac OS - and Installing Operating System Images using Windows. I have tried both copying Pidora on to the microSD cad from both a MacBook Pro, using the various command line methods, and a Windows 7 laptop, using the Fedora ARM Installer. The microSD card is fine as I have checked it with h2testw and also, if I copy Wheezy onto it then it boots sans problème. I have also formatted it correctly, using SDFormatter. Why will Pidora not boot on a RPi 2?