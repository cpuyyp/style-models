This caught me out today as I've never utilised MMC in this way. To get back to the console, you can use the "Window" menu item at the top. You'll also notice that the MMC Snap-In is a Window within a Window - you can use the controls to minimise the one you're 'stuck' in to get back to the base console. 

The profile gets created locally using the default profile of the machine that you're logging on to. It's not until log off that it becomes a roaming profile as such. C:\Users\Default is still there, and it will still be used when the profile is first created. 

You should make your Domain Controller your primary DNS and DHCP server. Then, instead of using your router as these things, simply use it as the default gateway instead. 

No, it doesn't and yes you do. If you don't, the settings will remain in the GPO but won't be changeable. 

Do you mean using Citrix XenApp to publish the RDP Client? If so, then yes, there are a couple of reasonable reasons you may wish to do this: 

Start again and RAID1 your 3TB disks. Performance will suffer in that you can't split between spindles, but you really do not want your VMDK's on non-RAID disks. If you do as you suggest, then your 2x 400GB disks will be fault tolerant, but the system that serves that data will not be. So you're not going to prevent any downtime - and as we all know, RAID isn't there as a substitute to backing up... 

You can disable and hide the C: with Group Policy but be warned that it's not 100% fool proof. Ensure your write permissions are good and that you're users aren't administrators, but if you're letting someone connect to a machine you shouldn't have anything directly sensitive on that machine. Citrix best practice would be to Silo sensitive apps and data into their own group of servers, limiting access as required. 

Congratulations on giving us no information whatsoever, such as your server operating systems, your client operating systems, your domain functional level or the amount of time that this device will be off site. The good news is that, yes, it's possible. By default the user device will cache the credentials of recently logged on users and allow them to log on even when there is no connection to the domain controller. Start reading here to discover if this is a solution for your cirumstances: $URL$ 

Your emails are going to get marked as spam regardless of how you send them, if the recipients mark them as spam: GMail, &c, will learn from this, and mark other emails from you as spam. Make sure that people want to receive the emails you send. What perfomance you need will depend pretty heavily on what the social networking software will need, as well as on the number of users and what they do. As a rule, say, PHP sites are less resource intensive than Ruby sites. 

If you're familiar adminning desktop systems with the same OS as your VPS, then you'll be spared the biggest shock that comes with VPS. VPS is to shared hosting what (remote) adminning a system is to having a user account on that system. Things you have to worry about with VPS that you didn't have to with shared hosting: 

If you approve all messages that appear on your website, then don't use a captcha. There are comment filtering services out there that can analyse comments in a manner similar to mail spam filters (all links to the client API page, organised from simplest API to most complex): 

If you do want a host physically resident in the EU, use a European VPS. Go for something based in Amsterdam: that's where the AMS-IX International Peer Connection point, which means it is pretty central for most of the European internet, has as good connectivity to the US as you'll get, and has a huge number of VPS providers. Cf. The ICANN IP hubs map. 

My own experience is that very little comment spam is intelligent, in the sense of getting around filters, in the way that email spam is. 

If you're using linux, 'iptables' allows you great freedom in choosing a policy for throttling new connections from IP addresses or IP address ranges. Try: 

I've used PointHQ: they don't really support being a secondary in their free version. Namecheap I didn't manage to use. ClouDNS don't let you set SOA records in their free version. So for this task I recommend Xname, which is painless if you are happy with BIND configuration. 

Disclosure: I work with Citrix a lot, so I am biased Citrix XenApp won't help improve performance of the applications as such - i.e., it won't increase the speed at which Office loads or whatever, that's not its job. However, it will almostly certainly improve the user experience overall by ensuring a consistent connection, improving mouse and keyboard response etc. In other words, what happens on the server stays the same - it's the ICA / HDX protocol which gives you the improvements. I'll be honest and say I've not worked much with raw Terminal Services in 2008, and I know it's much improved from before, but I'd always edge towards Citrix where budgets allows. Just remember that it does sit straight on top of Terminal Services, so it's always going to cost you extra. Citrix really starts to shine over low bandwidth connections in particular (After all, that's its heritage), and they also have products such as Branch Repeater and Netscaler which are specifically designed for WAN acceleration. You can get many Citrix products on evaluation if you sign up to Citrix.com, so I'd recommend you start there. While there's a lot of tweaking you can do with Citrix, the base install is reasonably straight forward if you follow the instructions. If you could provide some more details on what you're going to be using it for, I'll happily give you my opinion. 

WireShark sits too low in the network stack to have any information on which processes sent or received traffic. The trick is to know something about what you're looking for - it shouldn't take that long to isolate traffic by Source IP, Destination IP, Source Port or Destination Port. 

This isn't really a XenServer specific question. XenServer comes with XenCenter which is its GUI management tool, but how you connect to your server is completely situation dependent. XenCenter connects directly to XenServer using its management IP, but you certainly wouldn't want a public facing IP. A VPN would be ideal for this, but again, it all depends on what facilities you have at your data center. 

You are trying to conserve power: eagerly swapping out will generally increase the amount of disk spinning, since some propertion of swapping out will not be needed; The swap might improve the zippiness of a process whose performance you might not care about, at the expense of a process whose latency is an issue. 

It's not my fault: my VPS providers have overlooked something. What might that be? 81.171.111.1 means I'm happy listening in on ARP requests that I shouldn't be: how do I change this? In any case, what does this mean? I'm looking in completely the wrong place for information on what my image is doing. Where should I be looking? 

Namecheap - $URL$ Xname - $URL$ (more than 25 domains is considered "abusive" without donation; see their conditions) ClouDNS - $URL$ (max 6 domains free) 

Machine: Xen-3.0 image running stable Debian Linux 2.6.18, pretty vanilla. My VPS provider asks me to deal with some trouble my image is causing, namely handling IP addresses it is not supposed to: 

This scans the first $1+$2 lines twice, so is much worse than Dennis' answer. But you don't need to remember all those sed letters to use it.... 

Look at twill, which gives you a command-line interface. It doesn't support Javascript, but it does support cookies and forms. The Mozilla project has a more complex offering, XULrunner, which is supposed to support the whole XUL runtime, but I don't know how well this works in practice. My gut feeling is that the semantics of javascript are hard to model satisfactorily with a browser-in-the-middle. 

We see that there is one interaction scree process, 2298, which has /dev/ttyp3 open. Process 2299 also has this tty open, but process 1979 does not access any tty. So you can infer from this output which child processes are talking to which interaction processes. 

You can tell which screen processes are linked to s by looking at the output of : if a screen client process is connected to the screen interaction processes, then they will share tty devices. So for instance, with: 

There are numerous reasons, but the simplest is that this will break any routing, because a host will have no way of knowing that they're going to an address on a different network. So, basically, no. An IP address needs to be unique, regardless of subnet. In other words, if I'm on 192.168.1.1 255.255.0.0 And I try to access 192.168.1.2, then it's going to assume it's on the same subnet. On a fundamental level, subnets are there to separate broadcast domains and improve efficiency. They're not for sharing IP addresses. 

You can't, because there's nothing to say an application has to register with .NET or anything. It just uses it - the application doesn't even need to be installed. Besides which - having multiple version of .NET is absolutely fine. 

Assuming you have outbound internet access with no proxy, then you could disable "Automatically Detect Settings" and take a copy of the following reg key: DefaultConnectionSettings in HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\Connections\ Then configure as required for production and take another export. You can then switch them using a script at the appropiate times. Bear in mind that most Proxy related configurations are stored in various keys HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ This includes the actual proxy itself, and exceptions etc 

This is a classic case of trying to solve a people problem with a technical solution. Is it possible? Not as standard, no. Is there a workaround? Almost certainly, you could run a script or service to monitor the folder and rename things. Should you? In my opinion, no. Any attempt to come up with some hacky solution will only lead to excruciating pain down the line, probably won't ever work properly anyway, and you'll then become responsible for the entire naming scheme. Conclusion: It'a a management problem. The offenders need to be told to work properly and adhere to policy, just like any other workplace rules. That said, it seems like you need a proper document management system. Some of them are very powerful, though they still require the user to use it properly! 

I agree with Tom that this is only an attempt to subvert your comment system. I get hundreds of these, and similar, each day, and I don't bother trying to filter them on the server, because: 

If the alternative is irregularly applying updates, you don't actively follow security updates, and you are running a vanilla stable Lenny, then auto-updating probably increase the security of your machine, since you will update known security holes faster. 

Use rsync if you can. Rsync allows you to generate diff files that show what has changed, what exists on the target but not in the source, etc. It will make this kind of task much easier. There are several repackagings of rsync for Windows. 

Not explicitly, as far as I can tell! At least, nothing under /etc or /var/tmp mentions these IP addresses. But says something I can't make sense of: 

You can tell iptables to only allow each IP address to connect once to port 110. There are a couple of disadvantages to that: 

The only thing that happens to them is that they are emailed to me; the server does nothing else with them. I can approve comments offline, using Steve Kemp's chronicle. I prefer to have a lean set of filters on my server, to deal only with things that are dangerous. Nearly all are trivial to spot using mail filtering software, and that seems the right place to deal with comment spam. I prefer reviewing spam using mail rather than server logs. 

Data swapped out of RAM will exist both in RAM and on the swap disk until the RAM is claimed for another purpose, so are rather like mmap'ed files. As I understand it, if a process then decides to use this data before it is reclaimed, it therefore does not have to be swapped in again. Swapping is usually good, but there are two main reasons why you might not want it: 

That stops a client accessing more than one mailbox; That might stop badly written clients who don't close old connections from making new connections, if they won't clear up their mess. I'm guessing this means that maybe you don't want what you think you want.