The often heard reason for wireless controllers is central management and accounting -- and the ability to inspect the traffic (read: enforce policy.) Ubiquity does something close to that with their UniFi system, but it's not a controller but more a management engine. If all you need are a fleet of "zombie" APs -- all clones that no one need mess with, then there's no reason to go with a controller based system. This is made even more true by the cost difference. 

Obvious answer: (a) no route, (b) ACL The router (actually "firewall" -- Secure Services Gateway) has no route for 172.16.13.0/24? But that should also prevent access through the router to the other LANs. Which leaves only an explicit or built-in ACL blocking access to the router. (Check the config, logs, etc.) 

The two route statements are not necessary. If you need something to trigger the dialer, the route would be , but it should be triggered as long as g0/0 is up/up. 

Not unless you want address overlaps. While everything is connected, 's from each server should verify the validity of the address it's handing out, but as soon as the networks are isolated, each server is very likely to be handing out the same address. And the clients using the "remote" DHCP server will likely lose their address (as they'll have to bind to the other server.) TL;DR; You're asking for a mess. 

The multicast address you're looking for is 224.0.0.18 [mac: 01005e.000012]. That is the control channel for all VRRP nodes. [edit] Unless KEMP changed the code, CARP (UCARP) originates traffic using the VRRP unicast MAC [00005e.0001xx] -- that's where a switch would naturally learn it. If you don't have a querier on the network (presumably in every segment), then your switches will eventually forget what groups are where -- hosts don't send periodic memberships unless asked. [edit: Depending on configuration, a switch could drop unknown multicast, vs. flooding.] That can be a dedicated querier (it sends the packet, it doesn't care about any answers), or more commonly the multicast router within your infrastructure. In this simple case, a querier is all that's required as the VRRP messages are forbidden from crossing segments anyway. I'm not familiar with Dell switches, so I don't know what cli commands you need. [UPDATE] 

No. ADSL uses different upstream and downstream frequency ranges. As such, a modem is designed to transmit only in a narrow, low frequency range for which is has no receive capability. (The much older, SDSL, does work head-to-head.) 

Bug? I'm assuming you do not have the tcp-intercept feature enabled, so it's using nonsense numbers and/or attempting to divide by zero. [See Also: TCP intercept Feature on the ASA device] (PS: I'm not a fan of Cisco's blog documentation.) 

(I'm sure there's more, but that all I can think of!) The command reference generally tells in which versions it's valid. The only reason I've updated any over the last ~5 years is security bug fixes. 

To answer the fundamental question "What is needed for IPv6 to work?" Before anything else, you need an internet provider who can (and does) provide IPv6 connectivity. In the US, that's still very much a bad joke on consumers -- esp. for business ISPs. Then your network has to support IPv6: router, computers, game consoles, etc. I am unaware of any "home networking" gear capable of "NAT64" -- a proxy between the two networks. In fact, many small business routers lack that capability. 

Sorry, no. ROMMON can be told to ignore any NVRAM config, but there's no documented method to override the NVRAM startup-config. (Note: I'm aware of a US DoD contractor that does this, but they have customized hardware.) In a virtualized environment (GNS3, Cisco's virtual labs, etc.), it's easy to replace NVRAM entirely, or replace NVRAM contents. And this is how many (most?) modern labs are setup -- it's how Cisco's own test labs work. 

(haven't used MLPPP since the days before VoIP. in fact I'm looking at an archived config from 2003) The only thing I can add: 

And as was said in the other question, 802.1x is a layer-2 protocol. It is unaware of any layer-3 protocol(s). Changing your MAC can have several outcomes depending on the particular setup, ranging from nothing at all to permanent disabling of the port until an admin clears it. In all likelihood it would trigger reauthentication and be blocked until authenticated. IP addressing happens above 802.1x. As such, it has no say in the matter. Address management and security must be managed by other means. 

Say Host A wants to talk to Host B, yet they're in different networks and neither has a route to the other (no specific route or default route.) This generates an immediate error ("Destination Network Unreachable"), with zero network traffic. If you're doing Proxy ARP, then you do have a default route; the destination is an interface instead of an address. (or your netmask is 0.0.0.0, but I don't think anybody allows that) In this case, an ARP is sent to the all-one's broadcast address (255.255.255.255) and then awaits an answer from anyone on the wire. Presumably, a router on the wire will answer and forward traffic in the correct direction. If not, the request times out and error is generated. 

Cisco Catalyst 6500 Series Supervisor Engine 2 / MSFC2 Latest CatOS ROMMON: 7.1.1 Latest IOS ROMMON: 12.2.17r(S5) Latest IOS: 12.2.18-SXF17b All require a valid smartnet contract to access. (even for EOL crap.) 

Ethernet specifications state four pairs, even if only two are used. The category rating system is a set of signal specifications, independent of the number of pairs. (there are 25, 100, etc. -- even 500 -- pair CAT3 trunk cables.) As long as there are four pairs, a VoIP phone can be powered and connected over a CAT3 ethernet cable. 

Multicast is a special case of broadcast. It is a one-to-many mechanism. The sender sends a single packet and the network copies it everywhere it needs to go. To a switch or WiFi access-point, it's handled just like broadcast traffic[1], 'tho multicast filtering may apply. To a router that isn't configured for multicast routing (which is basically every router, ever), it's random broadcast noise. For this to work, the various routers between you and your targets would have to be configured for multicast routing. This is unlikely. While it is, in theory, possible within a single ISP network, across the internet would be unmanageable. (not to mention immediately abused) [1] This is why Uverse uses a dedicated AP for their wireless set-top boxes. Those APs run special software that handles the multicast video stream(s) like unicast. Wifi broadcasts go out at a basic rate (a minimum every associated client can handle) that's just far too slow. 

Enable the http server on the router. (, which you have) Download the CME GUI files from Cisco that matches the version of IOS on the router. (CCO account and service contract required) Go to $URL$ ip]/telephony_service.html 

A layer-2 switch can have only one management address assigned to it (on a single VLAN.) You can have as many VLANs as you like, but only one interface vlan# can be no shutdown at a time. A layer-3 switch can have secondary addresses on any routed interfaces. Routed interfaces are usually limited to VLANs, however, some switches do allow switched interface to be converted to non-switch mode () Additionally, if the switch has a dedicated, out-of-band management interface, it can have an address as well. That's the only non-routed interface that supports layer-3 functions. 

It may be seen, today, as a poor design, but it's a perfectly valid configuration. The nodes in one subnet are mostly unaware of those in the other subnet. (yes, they can see each others broadcast traffic, but it isn't a problem.) This is no different from running other layer-3 protocols within the same broadcast domain. 

Can you assign the same IP (v4) address to more than one node in the same LAN? No. It's no different for v6. The address has to be unique per broadcast domain. (even if v6 has no "broadcast" -- it uses the more specific multicast) Link-local addresses have a scope of only that link. So, they don't have to be unique across multiple interfaces on the same device. They do have to be unique "on the wire". So how do you differentiate between fe80::1 on interface 1 vs interface 2? fe80::1%1 vs fe80::1%2 'tho that can be OS specific. 

They are functionally identical -- all-hosts subnet broadcast. In the early days, long long ago, the all-zero's address ("Network") was used for broadcast traffic. That was later changed to the all-one's address ("Broadcast"), and that's what we use today. [NOTE] This is not the same thing as "subnet-zero" (or the all-one subnet) which is the the top and bottom subnets from a larger mask. eg. 192.168.1.0/24 broken into /28's: subnet-zero is 192.168.1.0/28 and all-ones subnet is 192.168.1.240/28 "Network Address" and "Broadcast Address" are the first and last address of a subnet. 

Across an IPSec tunnel, the MTU had to be reduced. Until I ask for something bigger than a "1500" packet, the cache entry remains mtu 1500. 

== Reset Connection It has nothing to do with establishing a TCP connection. It's used to close a connection, either due to error or as a means to (rapidly) bypass the normal FIN closing sequence. Most likely you are seeing a RST after the connection is already closed and the firewall no longer has any state for it. (172.16 suggests NAT. Without a NAT translation, the FW has no idea where to send the packet, thus it's dropped.) However, the firewall my have an explicit rule to drop all RST packets as a "security" feature. (eg: TCP Reset Attack) 

The feature set of the ASA changes so very rarely, it's not something Cisco has ever put any effort into creating. The few changes that have occurred are between major revisions, eg. 

Not all machines will answer a broadcast ping. (all broadcast -- 255.255.255.255, or subnet broadcast -- eg. x.x.x.255) Some see it as a "security feature", because one could spoof the origin to flood any host on the network. 

The address goes on BVI1, not fa0. It's a bridge, not router. I don't know why Cisco even allows you to enter such a configuration. You cannot unbridge the interfaces either; you can enter the commands, it just won't work. 

Perhaps your PC systems need to be configured to send EAPOL-Start messages explicitly. (most systems don't by default.) (Note: that document is, of course, w.r.t. Cisco's switches.) 

(having worked with this for a decade now) Hands down, the biggest functional difference between a tap and a span... a passive tap will never, ever drop a frame, under any circumstances -- it electrically duplicates the frame, errors and all. Active taps (regenerative, or aggregate) can drop frames, eg. if the bidirectional traffic exceeds the link speed of the monitor port. (a 1G link cannot carry TX+RX 1G (2G) of traffic) Switch SPAN ports will drop traffic. The SPAN is the lowest priority to the switch -- it will sacrifice the SPAN traffic in favor of maintaining live traffic. A slightly loaded switch may never show this, but I've had dozens of customer calls from all over the world complaining that we dropped traffic, when it was in fact their switch SPAN that didn't send it to us. However, SPANs are cheap and plentiful. Almost every managed switch supports setting up a monitor session. And they are usually trivial to setup and/or reconfigure. Taps, on the other hand, are exceedingly expensive and rare. Taps require unplugging network cables, which has a lot of resistance from just about everyone. And they cause a hit when they lose power. (momentary, not "unplugged == broken link". even dirt simple ones will maintain link when off.) 

The only thing Eddie left out is what happens when the table is empty, or otherwise has no destination port for a given MAC. In that case, the packet is unicast flood to all ports; it doesn't know where the frame belongs, so it's sent everywhere. 

It looks like, "No". There's nothing specific in TACACS+ to transport a certificate exchange, however an ASCII data payload could suffice. (the RFC is a decade old) The real question is if ACS has any method to handle it? And that also appears to be "no". The only mention I can find to PKI or certificate based authentication is for EAP-TLS, which is not what you want. Update I found a single reference in IOS-XR documents: 

It doesn't work because it's a broadcast (multicast) technology. (see also: Bonjour) Crossing a broadcast domain (i.e. VLAN) requires a proxy. I'm not a Mac person, but I've seen such a proxy setup before -- so iDevices could get to a printer where wireless and wired were different lans. I don't remember the program that was used, but it was not free. 

If you mean an HTTP redirect, browsers detect this and give up after so many redirects. If you are referring to a packet level, this is called "ping-pong", and it's the reason TTL (time-to-live) exists in almost all routed protocols. 

Generally discouraged for ethernet, but not unheard of. I'd use the usual telco gel blocks (eg. Platinum Tools Telcom Gel-filled Splicing Connectors) or the "dolphin" crimps (Dolphin B Connectors with Sealant) If it's somewhere that a 66-block could be placed, that would also be doable. 

I think he's referring to "zero downtime" if you're connected to multiple switches. If you're only connected to Switch A, and I reload that switch for a software update, you're obviously going to lose connectivity. However, with multi-chassis-LACP, you have multiple connections to the "fabric", so a reload of a single switch will not cause a drop. This is not unique to Arista. Many vendors have this capability. 

If you enter a hostname, it will be resolved on the spot and stored as the address to which it resolved at that point in time. You cannot route to a dynamic destination via a hostname. (in fact, that doesn't work on ANY platform) The only way to route to a moving target is via an active routing protocol (RIP, OSPF, etc.), or a scripted process (the way SLIP/PPP/DHCP are handled) 

The thing most directly affecting RTT is signalling speed. Look at the progression of ethernet over the eons: 10M, 100M, 1G, 10G, 40G, and 100G. Each following version (except 40G) is 10x faster than the previous; the time to transmit a single bit is 1/10th as long. The time to transmit a full (1500B) frame drops by a factor of 10. So, the answer to your question depends on the link layer. If the change in bandwidth has no corresponding change in link speed, then it will have minimal effect on RTT -- because traffic policing isn't done per bit. For example, my office metro-e connection is physically 1G, but it's shaped to 100M at both ends. Bits flow at 1G speeds; ethernet frames will be delayed as necessary to keep the average (over 1s, 10s, etc.) at or below 100M. In simple terms, a single frame transmits at link speed. If you're talking about DSL, then the change in bandwidth is most likely also a change in link speed. But not always. The sync speed will normally be higher than the profile rate. My DSL line syncs at 8M down, 1M up, but the profile limits it to 6/512k. I've seen Uverse lines sync as high as 60M but still have a 25M profile. 

I'm not sure I understand that sentence. It sounds a lot like "AP isolation" in wireless networks -- clients aren't allowed to talk to each other. That would be on an ASA, but that's within a single VLAN. If the ports are in different VLANs, then they're routed based on security level, acls, nat, etc. (and you cannot have the same subnet on more than one active VLAN) See Configuring Interfaces for the Cisco ASA 5505 Adaptive Security Appliance for more. 

In this case, moving from 1G end-to-end, to a 10G core shouldn't significantly change anything. Only a marginal increase in throughput would come from the faster signalling (decreased bit-time) on the 10G+ link. But in the absence of any congestion (read: other hosts), they should've been able to saturate the link to begin with. The time it takes hosts A & B to signal (in and out) a packet doesn't change. The time it takes the packet to hop from switch to switch is, in theory, proportionally faster. However, at these speeds, the difference isn't noticeable to a human. (~10μs for 1500 mtu packet)