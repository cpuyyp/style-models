YOur laptop shouldn't be providing DHCP services to other computers if it is moving around. That being said, you may want to provide services to virtual box instances on your laptop. Consider setting up the br0 interface not to bridge to an external network and use iptables to do the routing. Configure DHCP to only listen on the interface. If you want to route an ad-hoc network and provide DHCP then create another dchpd configuration for it. It should only listen on wifi0 (the ad-hoc interface). Bring it up when in your ad-hoc configuration, and bring if down when you disable ad-hoc networking. You will likely need to get IP addresses on eth1 and wifi0, so it is dangerous to enable DHCP on them. 

You need to configure the VPN startup/shutdown scripts to update the list of DNS servers dnsmasq uses to resolve requests. There is a dnsmasq settting that will cause it to update its server list when the file changes. You need to configure that as well, or trigger a reload of dnsmasq's configuration after the files changes. 

It appears you may be triggering a spam filtering rule. Your address is listed in the Spamhaus PBL list which indicates your IP address should not be originating email to the Internet. Spamhaus provides clear documentation on their policies. If you want reliable delivery to the Internet the server sending to the Internet needs a fixed IP address with DNS configured to pass rDNS validation. Your mail server should identify itself with the domain you have configured for rDNS. If you don't have a fixed IP address with appropriate DNS entries use your provider's email relay server to deliver the email. As other have noted you seem to have an extra header being added. This may be causing header validation to fail. (SPAM is much more likely to have bad headers than valid email.) 

Don't set the gateway on the host acting as the router to itself. If your ISP provided a gateway address, use that as the gateway on the host, or let the host use router announcements to configure itself. The gateway address should never be the same as the server's own address. The address being used to route for other hosts should not have a gateway assigned. Your ISP may have provided you with an address for your external (Internet) interface. Configure your eth0 interface using that with the corresponding gateway address if it is provided. Use the /64 address on your internal interface (eth1) if you have one. You will also want to setup to run on that interface. If you don't have an internal interface you can add a static address in your /64 range by adding a line to your inet6 configuration like. 

You may be able to get the internal addresses from an file. You will need to copy this to all servers. If you can't configure the file to have priority over the DNS servers, you could setup dnsmasq on a server and feed it the hosts file. Then configure the servers to refer to it. 

It looks like a poorly done hacking attempt. I've seen a few of them. I would recommend using to block the IP on multiple failures. You should verify the patterns as the default patterns don't always match. It handles multiple files and multiple services. Exim does have the ability to ratelimit traffic. There are two versions and the newer version is designed to be used in ACLs. This will only slow down people trying to crack your password, but it may encourage them to try a different server. If you set the rate too low you may cause problems for legitimate users. You could also limit auth to the Submission port. A line in the mail section like this should require both TLS encryption and the submission port before authentication is offered. 

DNS data is cached in servers around the world. Checking your servers for changes is likely to mislead you as to whether a change has been made or not. Looking at your data from here shows that your changes have been made. It looks like your TTL (Time To Live) is about four hours so your changes should be visible to you as well. When making major changes it is best to make changes in a manner that uses the old and new addresses for a transitional period. One approach would be to publish both the old and new ip addresses at least on TTL period. Then when the transition occurs DNS will have the new addresses to use. Once the transition is done the old IP addresses can be removed. It is common to change the TTL to a low value prior to the change so that cached data will be refreshed quickly. Scaling down the TTL over a period of time can be used limit the period when most requests are handled by your listed name servers. EDIT: You can check what various name servers have in their cache with the or (newer Linux/Unix distributions) command. You could try google (8.8.4.4 or 8.8.8.8) or OpenDNS (208.67.220.220 or 208.67.222.222) to see what some major caches have. The command for one of the name servers listed above is: 

It looks like some php code is running too slow to keep up with the load. It also appears that far too many php-fpm processes are being spawned. Look at the configuration for . Try setting it to 5 or 10 and monitoring CPU usage. Once you know the CPU usage you may be able to calculate a new value by dividing 80 by the average CPU percentage. That may be a good starting point. 

You can use the server logs to determine how much bandwidth you are serving up. A tool like awstats will report the bandwidth served. Incoming bandwidth is not reported, but is usually significantly less the outgoing bandwidth. 

This should be completely transparent to your users. Any problems you encounter should be restricted to servers which are non-compliant with standards. You can use the double A record technique for other services, but there will be delays when clients try the address which isn't responding and wait for it to timeout. 

PRO: Having two servers increases your redundancy, and may allow you to balance your load. If the two servers are acting as MDAs, then you need either shared storage, or a method to balance users data across the two servers. CON: You should have different configurations for the two servers, at a miniumum different mail domains. If you have separate servers acting as MDAs, the configuration differences can be relatively minor. Running two active MX servers adds additional issues in addition to the issues of running a mail server. Until you have mastered running a single mail server, it may be better to stick with one. Once you have mastered running one server, you should be able to decide which way to split the load for your organization. 

The most reliable situation would be to setup a for a subdomain of (host on) your domain pointing to the domain you are updating with DynDNS. I'll assume your domain is below. There are a variety of services that will support dynamically updating domains. Using a for your domain is not a supported configuration. If you want it for access to your home system you could setup as a pointing the name updated by DynDNS. You may be able to find a redirection server which can redirect web requests for your domain to your web subdomain. Requests for would be redirected to . If you want a reliable web server, you likely need to find a hosting provider. If you have a hosting provider, you may be able to configure your domain's record to the same IP address as you use for your web service. Another alternative is not to publish any addresses for your domain, and just have addresses for your subdomains. Browsers may try for a subdomain in this case. DynDNS no longer offers free services. When it did, I had a CNAME in my domain's DNS like which pointed to my DynDNS entry (). I've had a fixed IP address for years, so I haven't worked with the paid service. My and subdomains were hosted elsewhere and I provided records for those servers. My web provider supported my domain as well as the subdomain, so I provided an record for my domain with the same address as the subdomain. If you want email services, you will have problems using dynamic IP address. Many domains will refuse to accept mail from you, and you risk loosing incoming mail.