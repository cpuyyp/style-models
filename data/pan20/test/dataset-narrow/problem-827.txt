Reading a very small file is much faster than reading a bunch of large files. This is generally true even if the CPU has to decompress it. 

You should not attempt to place anything in /tmp which is meant to be shared between system services. It will not work, because systemd provides private /tmp directories to most services, which eliminates a large class of potential security vulnerabilities. When you start the service, systemd places the service in a container, changing the /tmp directory that the service sees to, in this case, . This directory name is randomly generated each time the service is started. Sockets meant for interprocess communication should be placed elsewhere, such as in (as you already did). 

That's all. Someone out there on the Internet might use this address to contact you regarding issues with your DNS, so it should be a valid address which routes messages sent to it to the right people. Best practice for this is to use a role address such as hostmaster (RFC 2142 section 7) which can then be routed to the right person, mailing list, ticket system, etc. 

Of course they have MAC addresses, but that won't help you since you obviously can't block based on them. Remember that MAC addresses are only visible and relevant on the directly connected link. 

defaults to using (see ). So you need to use the user's password as you would provide to sudo, not the root password. Or you can change the , e.g. to . 

If your package manager installed Ruby to begin with, then something on your system needs it. The easiest way to find out what needs it is to test an attempt to remove the package. For instance: 

Your version of appears to be trying to write to the tape device by default, rather than standard output. It appears to be GNU . Autodetecting the tape drive was the default before version 1.11.5 of GNU tar and I suspect you have such an old version. Versions of tar on other UNIX systems may also attempt to write to the tape device by default. Force tar to write to stdout by specifying the ile : 

Check your entire nginx configuration and make sure you didn't set somewhere. This setting should be in your scenario. 

You aren't the first one to run into this problem and find that it's pretty much unworkable. That's why Debian has had a package for this purpose for many years now. It's named . Install this package, and then configure it by editing the configuration file in the directory. The default configuration file is very well documented and all the options should be fairly well explained. Note well, that while you can configure it to automatically update the system, you probably should not, as it will eventually break something important. Better to just set it up to email you when updates are available. 

You're doing the wrong thing. But you do have another choice. First, storing the password in a file is completely silly and a serious security problem. Rather, configure to permit the necessary actions without a password. Second, don't try to run the non-interactive command and an interactive shell at the same time. This won't work. You'll have to run them separately, but you will be able to run them this way: To have sudo start an interactive shell, you simply run . 

Since is a developer tool, it will probably be in the equivalent package. You seem to have obtained these packages directly from Oracle, so ask Oracle to provide you with the equivalent package. (Oh, and that's about 40 patches out of date; it's on 5.0.96 now.) (And RHEL 4 went out of support two years ago...) 

I don't think you can do this. nginx treats all whitespace equally, so even if you tried to split your string like that, and nginx could parse it the way you intended, you would wind up with a regex with a bunch of whitespace in it, which I'm sure isn't what you want. If nginx couldn't parse it, which is more likely, you'd just get a syntax error. You're just going to have to live with a few long lines, or make less complex regular expressions. 

You don't actually have MySQL's yum repository installed. As the directions advised you, you need to do that first. 

Security Update for Exchange 2000 Server (KB959897) is listed as version 6.0.6620.9. You should already have Update Rollup for Exchange 2000 (KB870540) installed before applying it. 

For a host firewall where the default input policy is to deny trafic and the default output policy is to permit traffic, most all of your rules will be in the INPUT table. It's sufficient to have the stateful rule and then rules to open ports for any incoming traffic you need. For example, to allow ssh and http connections: 

Based on the close correlation between the traffic stats on the staging and production servers, it appears your two servers are talking to each other. Port 625 is a management port used by Apple products. From your netstat, it appears that one machine (.19) is connecting to the other (.18) on port 625. From some Google searches, it appears that Mac OS X uses port 625 for Workgroup Manager (which was replaced in Mountain Lion with Profile Manager). It also appears that a wide variety of other machines on the Internet are connecting to port 625 as well, probably as break-in attempts. You should firewall your server as soon as possible to prevent intrusion. 

In the first set, the first rule allows new incoming traffic to destination port 22 from anywhere. This isn't a problem. The first problem is that the second rule allows new incoming traffic to destination port 22 from a specific subnet. This is completely redundant since the first rule has allowed traffic from anywhere. My guess is that you read some tutorial which used these rules as (mutually exclusive) examples, advising you to select one or the other, but not both. The second problem is that another rule is required before this rule to make the firewall fully stateful, and that rule is missing here. Without this rule, only the SYN packet would be allowed, and the connection would never complete. 

Your seems to always match, as the HTTPS version redirects back to the HTTPS over and over. Try this instead: 

The SELinux policy included with RHEL includes definitions for ports (not to mention policies and booleans) from hundreds of services, not all of which are installed of course. There is no need to remove them. 

If you truly have absolutely no Internet connectivity, you can install .NET 3.5 using DISM and a copy of the Windows installation media. For example: 

Your "VPS" is actually an OpenVZ Linux container, rather than a fully virtual machine. Libvirtd cannot start inside OpenVZ containers. You'll need to obtain a VPS which is based on nestable virtualization, such as KVM, Hyper-V, Xen, VMware, etc., and on which the provider has enabled nested virtualization. 

You are missing your to divert requests to PHP when no matching static assets are present. For instance: 

The Dropbox repository doesn't seem to exist. Remove it from your configuration, and then contact Dropbox if you really want it. 

Your hosting provider must explicitly enable NFS client support and/or NFS server support for your container. Once that is done, you can use NFS normally. You can also switch to a normal virtualization provider (e.g. not OpenVZ). 

At that point, it's just a matter of using, e.g. in your configuration to set reservations; your DHCPv6 setup will be substantially similar to the DHCP setup for IPv4. I've also skipped over the case where a subnet might have two or more routers handling the "default" route; in this case look into IPv6 router preference for configuring this aspect. 

You might need to set up additional static routes for networks on the other side of the VPN connection as well. 

First, you need to create the guest's virtual network interface using the virtual MAC address that Hetzner assigned to you, and bridged to on your host system. For example (libvirt XML): 

The remote user should then be able to run the Bitcoin miner. If you aren't running a Bitcoin miner, you really should think about switching to an NVIDIA GPU. 

You can't use extended page tables if virtualization is disabled, as this is an extension to virtualization (VT-x) in the first place. This particular Dell server ships with virtualization disabled in the BIOS. Check the BIOS settings under Processor Settings and enable virtualization. 

You seem to have mismatched glue records for the domain wizgousa.com. Those nameservers themselves are returning the correct information, if you know where to find them, but the root nameservers still seem to have old addresses for them. To resolve this, the owner of wizgousa.com must update the glue records with the domain regsitrar. 

In either case you'll temporarily need to connect a keyboard and monitor to enter the connection information. And...that's not a server motherboard. 

Running anything other than the latest release of your major version of Red Hat Enterprise Linux is not supported unless you have also purchased an Extended Update Support subscription for the server. You can set your preferred release level using the tool. There is no supported way of doing this if you registered with the legacy RHN. 

Once you get that straight, you'll find that your zone has no A (or AAAA) records, thus you can't look up the address for, for instance, . Be sure to add the appropriate A and AAAA records. Finally, your secondary DNS server doesn't exist, and is also on the same subnet if it did exist. This effectively breaks the redundancy that having two or more nameservers is supposed to provide. Consider locating your other DNS server somewhere else, for instance on another server in another country, or with a third party provider. 

This is an unavoidable artifact of being on shared web hosting: The resources are shared between clients without much isolation. If it's of particular concern to you, for privacy or other reasons, you should not use shared web hosting. 

Note that the containers will also share their other network interfaces, such as external network connections. 

RHEL 5 / CentOS 5 cannot boot with UEFI, but Hyper-V 2016 creates Generation 2 virtual machines by default. These always boot with UEFI only. To install CentOS 5, you will need to create the virtual machine as a Generation 1 virtual machine. WARNING: CentOS 5 is past end of life. You should upgrade to a supported OS distribution immediately. 

You specified a repository that doesn't exist or is invalid. Something is wrong with your package list. 

Yes, you can use the old system. It's not less secure than firewalld (provided you write your firewall rules correctly). It also doesn't run a daemon, so it's not using a (relatively) large amount of your limited RAM. 

In the general case, this happens when rpm (or yum) crashes when updating the rpmdb, which is a Berkeley DB key-value store, and very sensitive. When such a crash happens, the rpmdb is left in an inconsistent state and this error occurs. All of the other files in contain the same information, though in a less efficient format, so the database is easily rebuilt. Two notable bugs you may have seen on older CentOS systems can cause this. The big one, a "nasty and subtle race in shared mmap'ed page writeback" as it appears in the changelog, was quietly fixed in a kernel update in 2007. This one presented itself slightly differently than your report, though. The one you might see from 2009 happened when PackageKit would kill yum at an inopportune time, and was also fixed. This would be more likely to affect desktop systems or servers with a GUI, though. All of these bugs predate EL 6, and you should almost never see this occur on EL 6 or 7, nor should you see it if your EL 5 systems are up to date. (I have no idea about EL 4. If you have one, kill it before it spreads.) That said, anything that causes yum or rpm to die while working with the rpmdb could cause it. This includes what you're most likely to see these days, random cosmic rays flipping bits, or someone getting overzealous with . In RHEL 7, yum traps more signals during the actual transaction run, and you'll see the message . This should help prevent most situations in which someone or something interrupts the transaction and causes this problem. 

Use an appropriate directory to store your web documents, so that you do not need to disable SELinux. These directories are: 

First, make sure you have set up bridging properly so that your virtual machines can communicate with the network. Second, create an IP Pool containing your /29 network and the gateway address within that /29. Setting the gateway address correctly is probably the part you missed. Hetzner will let you know which address in the /29 is the gateway. Third, assign IPs to virtual machines and enjoy. 

To make the change persistent you add it to . This can be done the cheap and dirty way through a command, but the proper way is to add a second stanza containing only that address: 

The Linksys SPA122 that you purchased includes a very small two-interface SOHO router, as it was designed to sit at the edge of the internal network and do traffic shaping to improve voice quality. In its intended configuration it connects directly to your cable/DSL modem via the "Internet" port, while your internal LAN connects solely to its "Ethernet" port. It's expected that you would connect to the device (via its Ethernet port) and reconfigure it to meet your local needs in this scenario. And if you intend to use it as an end device rather than in the configuration it was designed for, you'll have to do so in order to configure it to use some other (unused on your network) IP address range. The reason for this is that both interfaces can't be on the same subnet. So you can reconfigure the device, (note that you can only do this from the Ethernet interface) just changing the IP address range it thinks it controls to an RFC1918 range that isn't used in your network, or send it back and get an SPA112, which is otherwise identical except that it does not have a built-in router. 

First, I strongly recommend that you use as this will provide much better performance when the ban list starts getting large. Now, with any of fail2ban's firewalld actions, it will add a direct rule, which you can inspect with : 

Your entries don't contain any redirects, so the redirect must be originating elsewhere. Check the web application and configure it appropriately. Also check any other parts of your setup, such as a load balancer or reverse proxy which you forgot to mention. (The fact that PHP is unable to load a module isn't relevant to the redirection problem.) 

You can find the call detail record logs by inspecting the files and (and any local files which they include) to determine where the log files are, or whether they're enabled. You can then view the call detail records. By default, the records will be at . The above files will contain hints of any changes made locally to the logging configuration. 

If you want to rotate the log every week, but you want to rotate it sooner if it exceeds 50 MB, then use . 

You can't place sockets intended for interprocess communication in . For security reasons, recent versions of Fedora use namespaced temporary directories, meaning every service sees a completely different and can only see its own files in that directory. To resolve the issue, place the socket in a different directory, such as (formerly known as ).