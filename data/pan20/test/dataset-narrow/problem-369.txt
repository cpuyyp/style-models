I apparently cannot figure out the key words to google search for what I want, so I need help finding out how to do this. I feel like this may be a duplicate, but I just cannot find this anywhere else. I would like to be able to easily save a bunch of create table/view/proc scripts to a file. The file has an easy-to-execute format that will drop and then re-create all of the objects, so it can be run on multiple databases. This format works well for me as I have to make changes to some objects during development, and then make the same changes on multiple other databases. I can just change the database and click execute. However, some of the scripts have A LOT of quotes in them, and it gets QUITE annoying to have to double/quad quote them every time I make a change or add a new object to the file. For instance... 

Would this be the correct approach to doing this or is there a better way to both return the resultset (without included) and update the 2nd table based on the returned rows? 

I looked in to the declaration of and found out the way it invalidates the snapshot is a simple query to update the table 

My Question: How do I, from the publisher, mark a pull merge replication publication as having a invalid snapshot such that if I did the column would return 0. Doing will cause the subscriber to re-initialize but it does not mark the snapshot as invalid. I know I could change a publication or article property then change it back and cause to invalidation to happen that way but I would really like to invalidate as the "primary action" instead of having the invalidation be a side effect of some other action. I am looking for something similar to transactional replication's procedure which has a parameter, but I could not find the equivalent for merge replication. Is there any way to invalidate a merge replication snapshot only without making some other kind of change that has snapshot invalidation as a side effect? 

This gives a good idea of what I want to do, but SSMS doesn't like it, saying , and I'll start working on sample data to help, but I wanted to get this out now in case someone knew what to do off the top of their heads without data. 

I am getting a typical group by error that one would see when a field is not in a group by or an aggregate in the select. 

I have a dataset text query and I would like to have an ORDER BY in it. The issue is in SSRS, the ORDER BY is not working as desired. However, when I run the query in SSMS, the output is ordered as I would like. This image is in SSMS where it is working properly. The payroll = 000004 is just to isolate a specific payroll to make it easier to read. The ISNULL(OrderByNumber, 1000) is just to put the total row down at the bottom. 

Reading the article "Dynamic Search Conditions in Tâ€‘SQL" I saw the following statement in the "Using sp_executesql" section. 

making those 3 columns I am interested in the clustered key. However this violates the "Keep the clustered key narrow" and the "Keep the clustered key sequential" guidelines I have read everywhere. Which of these approaches is the correct way to implement this? If neither are correct please tell me what the correct way to approach this is. 

XY Problem background info: I have a pull replication publisher in which I want to add or alter a index and have those changes be applied to the subscriber. The solution to that problem I would like to do is to generate a new snapshot and re-init the subscription. 

The problem is from in the first outer join. can contain text in the ENTRY_CODE column, however all records that have set to the line number from where will always be numbers only. I perform the cast as may or may not have leading 0's and spaces so I am trying to get them to be well formed. What appears to me to be happening is adding to the outer query causes the clause not to be evaluated before the cast to int in the inner query. I have tried things like adding to both the inner and outer queries but it has no affect. 

I have a report that is "working" fine except for an issue. I have four dropdown list parameters where I am getting the values from queries. When I select a value from a dropdown list, it selects the next value below what I wanted to select, and "removes" the first value as an option. For instance, one of the dropdowns holds a list of payrolls. When getting the list from a query, it returns payrolls 1 through 121(or so), which is perfect. However, if I try to select any of the payrolls, say payroll 10, it will show me that I selected payroll 11, and the option to select payroll 1 will no longer be available. ALSO, possibly tied to the above, the report sometimes refreshes when I select "view report" and I have to try to choose the payroll again. These are not cascading parameters. The values are all derived from two queries where I am selecting a distinct list of employees for two of the parameters and a distinct list of payrolls for the other two. I am at a loss as to why this type of behavior is even possible. 

When working with virtual machines often it can be very useful to have a base read-only VM then have several smaller VM's that use that larger VM as a base and write their changes to their own writeable copy. Is something similar available in Microsoft Sql Server? The situation I am in is we host a demo copy of our product that our clients can connect to for about 30 days or so. When we create a demo account we have to create a new copy of the base database the program uses and have the software point at that. Each image is a little over 2GB, but on average the demo users will only change about maybe 100MB worth of data in the database. What I would like to do is have a read-only database that acts as a base then have the demo databases create a "differencing database" and write out it's data and log information to that differencing database. Is this possible? I have been searching through the MSDN documentation but I have yet to find anything and unfortunately google searching has been fairly useless as searching for gets polluted with all the pages about doing differential backups (doing did not return any useful results either, all I got was information about differential deployment scripts).