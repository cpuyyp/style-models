In the Group Policy Management Console I am attempting to delegate the "Link GPOs" right, but after selecting the group to delegate the access to and the "This container and all child containers" option, I am receiving the error message "The request is not supported". Here's a screenshot of the same error on the Microsoft Forums. In that case, the user was attempting to remove a delegation. What causes this error and how can the problem be resolved? 

I'm using the Adobe Creative Cloud Packager to build an installation package containing all or most of the available applications (as opposed to specific individual applications) for deployment on end-user workstations. This install package runs successfully on Windows 10, but fails with error 1603 ("A fatal error occurred during installation") on Windows 7. The installer runs for a long time before failing, and appears to be installing at least some of the applications the package contains, but these installations are rolled back and when the installer finally exits none of the applications in the package are present. The log file (PDApp.log) may contain the following messages: 

I don't believe so, but one workaround is to implement an intercepting proxy server on your network. This means that you can configure the WSUS server to instruct clients to download from Microsoft, but still cache the content locally for machines on your network. (As an added bonus, updates will only be downloaded if they are actually needed, so you can be less selective about what you approve.) A variation of this is to configure WinHTTP on your desktop machines to use a proxy server, although this means laptops that are on-site will still download from Microsoft. In principle you could write some software that detects the current location of the machine and reconfigures WinHTTP as necessary. 

Based on recent experimentation (with Server 2012, but I suspect earlier versions are similar) on non-domain, statically configured networks the NLA service uses the link-layer (MAC) address of the default gateway to identify the network. The details are unclear, though I suppose they could be worked out with a network analyzer. If the configured default gateway does not respond, NLA does not recognize the network, so it's definitely doing some sort of query. (That is, you can't just put in a dummy gateway address, or even a dummy gateway address plus static arp entry; the gateway MAC address associated with a particular network must actually respond in order for NLA to decide that the adapter is connected to that network.) See also my blog entry on a way of fooling Windows 2012 into assigning an adapter to a unique network. If the adapter is assigned an address by DHCP, the logic might be different. I haven't looked into that yet. The logic on a domain network is documented as per the existing answers. 

You are still potentially vulnerable unless you have configured the server to only use the newer protocol. You can do this as follows: 

The WinRE infrastructure is still in place (and can be re-enabled later using a copy of and the command line tool) but will be disabled. Note that the setting in does not appear to have any effect in Windows 10. (However, this might depend on which version of Windows 10 you are installing; I have only tested it on the LTSB branch of version 1607.) 

I think you want the Volume Shadow Copy Services. On a server platform, the Diskshadow command-line interface is available. 

This is because Java 8u171 disables the use of the 3DES_EDE_CBC cipher when making TLS connections. Apparently the client (or the BMC itself) is incapable of using more modern ciphers, even with the most recent firmware. You can reconfigure Java by editing the file. This can be found in (Java 8 or earlier) or in (Java 9 or later). You need to remove from the setting for . For example, the default setting in Java 8u171 is 

One possibility: if you can find the GUID volume name (your question doesn't make this clear) and if the volume has a drive letter assigned, then Win32_Volume will link the GUID volume name to the drive letter and Win32_LogicalDiskToPartition will link the drive letter to the disk number and partition number. However, looks to be a better option. This command works for me: 

When the dialog is dismissed, the installer hangs. I tried adding the file to the Trusted sites zone, but I couldn't figure out how to properly format the path. How can I install the Java 8u65 runtime on my Windows Server? 

As documented in Description of the Windows Update Standalone Installer in Windows, is designed for installing updates in the form of files. It cannot install updates that are in files. To install an update in a CAB file, use instead, e.g.,: 

This occurs when the installation package includes Project Felix, whose system requirements include Windows 10 as the minimum supported operating system. You can work around the problem by excluding Project Felix from the package. Unfortunately, the Creative Cloud Packager does not include information about which specific applications have unusual minimum requirements, and the installation log does not appear to include information about which application has caused the failure, so it is necessary to either research each application individually or to resort to a process of elimination to determine where the problem lies. 

One possible solution that doesn't require a (hazardous) repartitioning would be to make the C drive the active partition. Of course, you'll need to use system repair (or some other means) to install the boot loader on the C drive or the system won't be bootable! It is likely that MDT will then correctly identify the C drive as the active partition and put WinPE there. 

Contrary to the documentation, the settings do not interact; configuring the computer setting does not affect the behaviour of the user setting. 

You can convert the event trace logs into plain text using from the Windows 10 SDK. First, copy the files from on the target machine to a convenient location on your admin machine. Open a command line window, change to the directory containing the copy of the trace files, and run the following command: 

This is described (somewhat obliquely) in the Microsoft blog post, How to troubleshoot IE Enhanced Security warning "Content from the website listed below is being blocked by the Internet Explorer Enhanced Security Configuration" ? It may still be necessary to change the corresponding setting (as per Volodymyr's answer) on a per-user basis for existing accounts. 

This error occurs when the user has existing permissions on the Active Directory OU that the Group Policy Management Console (GPMC) doesn't know how to deal with. It should be noted that group policy delegations are really just permissions on the OU, the GPMC just provides a simplified interface to make the necessary permissions changes easier. You can use Active Directory Users and Computers to check the permissions on the OU. You will need to enable "Advanced Features" from the View menu in order to see the Security tab for an OU object, and you will need to choose "Advanced" to see the detailed permissions list. In my case, the group in question had been explicitly granted "Read" access to the OU, which must have been added by mistake at some point since it is redundant. In the linked question on the Microsoft Forums, the user was attempting to change delegation for the Domain Admins group which by default has Full Control on all OUs. In my case, since the existing Read permission didn't need to be there, I removed it using Active Directory Users and Computers. I was then able to use the GPMC to add the delegation I wanted. The user in the linked Microsoft Forums question could have removed the Full Control permission for Domain Admins the same way, which would have also removed the group policy delegation as a side-effect. (Whether this is a sensible change is another matter!) In other cases, if the extra permissions cannot be removed, you can grant the necessary delegation directly in Active Directory Users and Computers rather than via the Group Policy Management Console. If you want to grant the "Link GPOs" delegation then the necessary access permissions are "Read gPLink", "Write gPLink", "Read gPOptions", and "Write gPOptions". Once the change is made, refreshing the view in the Group Policy Management Console should show the newly created delegation. 

In Windows 10, the Windows Update client uses event tracing rather than writing to a text file like it did in previous versions of Windows. This can make troubleshooting problems with client machines difficult. The Get-WindowsUpdateLog cmdlet doesn't always work. In particular, it doesn't seem to work properly when run remotely, or when the target machine doesn't have direct internet access. I've also seen reports of other problems whose cause is less clear. Is there a more reliable and flexible option? 

You should find life easier if you explicitly turn off NetBIOS over TCP/IP. You can do this from the WINS tab of Advanced TCP/IP Settings, or via your DHCP server. 

If the service is running as Local System or Network Service, or as a specific domain user, it can either access the files via the UNC path or it can map a network drive using the function. In the case of Local System or Network Service, the connection is made in the context of the Active Directory computer object. If the service is running as a local user, UNC paths will not work, but it can still map a network drive using provided it can provide a valid username and password. (If the Win32 API is not available for some reason, running the command in a subprocess will also work.) 

If you are carrying out unattended installations of Windows 10, and want WinRE to be disabled automatically during installation, delete the following file from the install image: 

The documentation for the Windows cryptographic API does not suggest that the calls for generating a key or generating random data can fail or be delayed due to insufficient entropy. So, no, Windows does not suffer from the problem you're describing. This may mean that in a virtual or otherwise external-entropy-starved environment some cryptographic functions might not be as secure as is desirable. However, I've never seen any analysis of this. I'm inclined to think that modern computers are sufficiently complicated that internal entropy sources are adequate, and the Linux systems are just being overly cautious - but I'm not a cryptographer, so my opinion doesn't really count! 

One common problem is error 8DDD0010. In my case, I was able to resolve this by logging into the built-in Administrator account (usually named Administrator and disabled by default) and turning on IE compatibility mode for microsoft.com. Other reports suggest that these steps may help: 

If you are using Windows Firewall, check that the Remote Desktop Licensing Server exceptions are enabled on the license server. If you are using a third-party firewall, or if there is an external firewall between the Remote Desktop server and the licensing server, make sure all the relevant ports are opened. See this forum thread, and also Which ports are used by a RDS 2012 deployment? on Technet. In my case, however, the problem was with the Local Security Policy on the license server, specifically the "Access this computer from the network" option under User Rights Assignment. Although it does not appear to be documented, the Active Directory computer objects representing the Remote Desktop servers must be granted this right, either explicitly or indirectly. (The default setting includes Everyone, which is sufficient to allow Remote Desktop licensing to work.) Once this access right was granted, the next Remote Desktop logon caused the missing X509 Certificate registry entries to be created, and event ID 1130 stopped appearing. You should also check the "Deny access to this computer from the network" setting, which takes precedence, and any other configuration changes you might have made to the licensing server which could affect the Remote Desktop server's ability to establish an IPC logon. The security event log on the licensing server may be useful in determining whether the IPC logon is successful or not. 

The admin machine must have the Windows 10 SDK installed and needs direct internet access. It does not need to be running Windows 10 itself. You may then wish to combine the logs together into a single file: 

One alternative would be to use Software Restriction Policies (Computer Configuration -> Windows Settings -> Security Settings) rather than the "Do Not Run Specified Windows Applications" user policy. This will also give you more flexibility around how you select the application to be blocked. Keep in mind that any blacklisting approach can be worked around. If you want to ensure that the restriction can't be bypassed, you'll need to use Software Restriction Policies in whitelist mode, i.e., specify those applications that are allowed to run rather than those that are not. 

We have a number of Dell PowerEdge servers, ninth generation and later. According to Using the LAN and Serial Interfaces in Ninth-Generation Dell PowerEdge Servers: 

Powershell (as per SvenW's answer) is best practice, but if you prefer the old fashioned command line: 

On my system, changing the value of IEHarden (REG_DWORD) to 0 in this key appears to have corrected the problem for all new accounts (and possibly some existing accounts): 

The two "Do not process the legacy run list" settings appear under Computer Configuration -> Polices -> Administrative Templates -> System -> Logon and under User Configuration -> Policies -> Administrative Templates -> System -> Logon respectively. The documentation for these settings is confusing (i.e., wrong); what exactly do these two settings do, and how do they interact? 

I also recommend using a machine with a direct internet connection rather than one that accesses the internet via a proxy server. (Especially if the proxy server requires authentication.) 

If you attempt to install the Java 8u65 runtime on a Windows Server, the following error message appears: 

On Windows 7 or later, attempting to use to install a CAB file containing a Windows update returns error 0x80070002 (-2147024894), "The System cannot find the file specified". I've tried quoting the full path to the file, running the command in session zero, and everything else I could think of. Why won't the update install? 

Instead of trying to muck around with SMB on the server, you should investigate using a VPN. Windows Server includes both DirectAccess and Routing and Remote Access, either of which should be able to solve your problem. Your networking equipment may also have VPN support. 

See the Microsoft documentation for additional command-line options. When WinRE is disabled in this way, the startup menus are still available, but the only option that is available is the Startup Settings menu, equivalent to the old F8 startup options. 

After upgrading Java to version 8u171 the Java KVM client provided by my Dell BMC's web interface stopped working. The only error message is "Connection failed." I'm using the BMC on a PowerEdge C6220, but other models may also be affected. What's going on and how can I fix it? 

In Windows 10, the Windows Recovery Environment (WinRE) can be launched by repeatedly cutting power to the computer during the boot sequence. This allows an attacker with physical access to a desktop machine to gain administrative command-line access, at which point they can view and modify files, reset the administrative password using various techniques, and so on. (Note that if you launch WinRE directly, you must provide a local administrative password before it will give you command line access; this does not apply if you launch WinRE by repeatedly interrupting the boot sequence. Microsoft have confirmed that they do not consider this to be a security vulnerability.) In most scenarios this doesn't matter, because an attacker with unrestricted physical access to the machine can usually reset the BIOS password and gain administrative access by booting from removable media. However, for kiosk machines, in teaching labs, and so on, measures are usually taken to restrict physical access by, e.g., padlocking and/or alarming the machines. It would be very inconvenient to have to also try to block user access to both the power button and the wall socket. Supervision (either in person or via surveillance cameras) might be more effective, but someone using this technique would still be far less obvious than, e.g., someone attempting to open the computer case. How can the system administrator prevent WinRE from being used as a back door? 

Theoretically, yes. I don't know if there is an existing Microsoft or third-party utility using that API. You could write one in-house if you have any coders on deck, it would be almost trivial. 

There's at least one circumstance where you can't replace a junction point with a symlink: if the content might need to be accessed remotely. If you access a file share on a Windows machine, junction points are interpreted by the server and work as expected. Symbolic links are interpreted by the client (i.e., a symlink to c:\foo\bar would be interpreted as pointing to the client's C drive) and are disabled by default anyway. Incidentally, junction points do work on external drives. 

Test Procedure The machine I'm experimenting with is PowerEdge 2970 with a DRAC 5, Hardware Version A00, Firmware Version 1.60 (11.03.03). The BMC Firmware Version is 2.50. The NIC Selection is set to Shared and the NIC is enabled. The static IP address is 192.168.241.100 and the subnet mask is 255.255.255.0. There is no gateway on our management network so I have that set to 0.0.0.0. Auto negotiation is on. None of the other settings are configured. With the management network connected to LOM1 (and the LAN connected to LOM2) I can both ping the DRAC and log into the DRAC web interface from a production machine with access to the management network. (IP address 192.168.241.102/255.255.255.0.) I cannot ping the DRAC from a machine on the LAN (mis)configured to use 192.168.241.29/255.255.255.0, even after clearing the ARP cache. With the management network connected to LOM2 (and the LAN connected to LOM1) I can neither ping the DRAC from the management network machine or connect to it via the web interface. Clearing the ARP cache had no effect. I can ping the DRAC and access the web interface from the machine on the LAN. In both cases the operating system on the 2970 has full network connectivity on both the LAN and the management network (once the network interfaces are appropriately configured). I also tried using WinDump to look for arp replies on both the management network and the LAN. In both cases, I saw arp replies from the DRAC only on the network that LOM1 was plugged into.