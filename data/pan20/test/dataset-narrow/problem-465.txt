Better Yet: Seeing you are using PHP to populate the CSS links, there is an even better method. Because each CSS file requires a round trip HTTP Request/Response, why not reduce it to one. This is especially beneficial on a mobile phone Browser. To conserve battery a smartphone will drop the radio signal between requests. It can take seconds for the phone to reestablish the radio connection. This is why it is important that each file loaded by the Browser contain in the Request Header. Furthermore because the Browser will not begin rendering until all the CSS is loaded, it is advantageous to bring it in with a single HTTP Request. 

This is cleaner. added for no HTML Errors W3C Markup Validator. changed CSS units px to em, for 100% W3C Mobile OK changed width to 20em (320px) for Mobile Viewport added mobile meta viewport for Google PageSpeed Insights 100% (less when target divs overlap) Moved JS below HTML Made count global added to get misses added to replace alert replaced CSS with changed div ids to d+index created target array and init code instead of calling getElementById added [CDATA[ to JS added miss counter added elapsed time added "Again" button and function removed function , was not worth the stack push and pop of calling another function. While some might say the update() should be added by . When only one event is required is easy, reliable, and more universally compatible. W3C HTML Markup Validation Service HTML5: NO ERRORS W3C HTML Markup Validation Service XHTML Basic 1.1: NO ERRORS W3C CSS Validation Service: NO ERRORS W3C mobileOK Checker: Perfect Score: 100% Google's "Usability Assesment" PageSpeed Insights 

I use Firefox with the Responsive Design Plug-In to check responsiveness. I narrowed the browser window to 125px and the above is the result. With a Browser window width of 800px below is the result: 

Takes the expanded section and puts it at the top of the Browser window. When all are contracted, it scrolls to the very top or the page. The reason I use an array for the toggle is to eliminate the else if that would otherwise be required. 

This also eliminates the calling of a subroutine correct() and incorrect(). This is how I scored the answers to a personality survey: The code is in PHP but the concept is clear. Total time expended is less than a millisecond or two, lightning fast. 

I find 200+ errors on one page to be UNACCEPTABLE. And therefore I find jQuery to be Unacceptable. It's not just this site, it's every site using jQuery that has these errors. The number of errors keep on piling up I now have many hundreds of errors on just this one page we are on now. I had to remove many of the errors as this post allows a max of 30,000 characters. 

PATH_INFO: PATH_INFO is relative to the root URL. REQUEST_URI is not. This leaves flexibility for the ROOT directory using relative URIs. You can use various URLs and sub-domains. URL: REQUEST_URI: PATH_INFO: 

Create a product with a product id of zero with a description of 'Invalid Product ID" and process it just like a valid product or process the same as an invalid product id number. 

UPDATE After further review of your code, delay is likely in the . That is where I'd look first. For purposes of locating the delay, bypass . You could hard code the device name and to run the code without getting the list. And / or when making your list of ports, save the time it takes for each iteration of the loop. Associate the times with the port name. You may have a port(s) with a long timeout introducing the delay. You may want to add port status to the list of PORT_SERIAL ports including open/available, DSR and CTS. About the Flow control in my previous post. I did not see anywhere in your code you turn off hardware hand shaking . What is your flow control? Even when Hardware Handshaking is not used by the device most PC's still support it. The reason I suggested what I did is because I was thinking the delay was likely a hardware/firmware port setup issue or a client initialization issue. The serial port must still have the hardware handshaking disabled (not recommended for diagnostic purposes) or have the signals driven active in order for the UART to work. 

Expand and Contract (ec) the one Section where multiple Sections can be Expanded or Contracted. Only one Section is Expanded at any given time. (ecp ec paired) 

Sometimes specifying the content width in pixels works better than "device-width". Even when it does work better, Google's Insights deducts points. However it is still a good validation tool. It does find mistakes. Your page: This is bad: It is not a good idea to have an image without width and height specified. it creates problems with the Browser's "first paint" rendering of the page. what happens is the Browser does not know the image's dimensions until the image is retrieved requiring a "re-paint". First paint comes before or simultaneous with the downloading of content. Then likely bootstrap comes along after page load and changes the dimensions again requiring another re-paint". Not to mention the CPU cycles unnecessarily expended to scale the image to a size other than the actual image dimensions If you want to scale images, use SVG, as in Scalable Vector Graphics. While the following CSS passes CSS Level 3, it is totally unnecessary to use rgb 

NOTE: SSL added 62msThis is actually very fast SSL negotiation. I have a client on a GoDaddy VPS, and typical SSL is well over 500ms. Both HTML and PNG: Total Bytes In (downloaded): 2.1 KB 

For Example: The W3C HTML Markup Validator puts the number of HTML errors in the header. There are much better HTTP Response Codes to use over 404. Better diagnostics reduces support and increases user satisfaction. 400 Bad Request The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications. 403 Forbidden The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated. If the request method was not HEAD and the server wishes to make public why the request has not been fulfilled, it SHOULD describe the reason for the refusal in the entity. If the server does not wish to make this information available to the client, the status code 404 (Not Found) can be used instead. 404 Not Found The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent. The 410 (Gone) status code SHOULD be used if the server knows, through some internally configurable mechanism, that an old resource is permanently unavailable and has no forwarding address. This status code is commonly used when the server does not wish to reveal exactly why the request has been refused, or when no other response is applicable. 405 Method Not Allowed The method specified in the Request-Line is not allowed for the resource identified by the Request-URI. The response MUST include an Allow header containing a list of valid methods for the requested resource. 406 Not Acceptable The resource identified by the request is only capable of generating response entities which have content characteristics not acceptable according to the accept headers sent in the request. 409 Conflict The request could not be completed due to a conflict with the current state of the resource. This code is only allowed in situations where it is expected that the user might be able to resolve the conflict and resubmit the request. The response body SHOULD include enough information for the user to recognize the source of the conflict. Ideally, the response entity would include enough information for the user or user agent to fix the problem; however, that might not be possible and is not required. Conflicts are most likely to occur in response to a PUT request. For example, if versioning were being used and the entity being PUT included changes to a resource which conflict with those made by an earlier (third-party) request, the server might use the 409 response to indicate that it can't complete the request. In this case, the response entity would likely contain a list of the differences between the two versions in a format defined by the response Content-Type. 410 Gone The requested resource is no longer available at the server and no forwarding address is known. This condition is expected to be considered permanent. Clients with link editing capabilities SHOULD delete references to the Request-URI after user approval. If the server does not know, or has no facility to determine, whether or not the condition is permanent, the status code 404 (Not Found) SHOULD be used instead. This response is cacheable unless indicated otherwise. 410 response is primarily intended to assist the task of web maintenance by notifying the recipient that the resource is intentionally unavailable and that the server owners desire that remote links to that resource be removed. Such an event is common for limited-time, promotional services and for resources belonging to individuals no longer working at the server's site. It is not necessary to mark all permanently unavailable resources as "gone" or to keep the mark for any length of time -- that is left to the discretion of the server owner.