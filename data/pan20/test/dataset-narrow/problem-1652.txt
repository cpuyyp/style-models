I use this 5V 1A (1000 mA) USB power supply from Adafruit with my Pi which is Ethernet connected, has a USB keyboard and this mini WiFI USB adapter. I have no problems with my Pi and this power supply. 

When using that cable I could only achieve a maximum resolution of 1280x720. Using only this adapter I am able to use the native resolution of the lapdock which is 1366x768. I am also able to reliably get a video display after closing and reopening the lapdock. 

As previously noted by other answers it isn't practical to run separate DC wiring inside your home. Given that, a great alternative that I use to avoid having 5v power supplies plugged in everywhere is to change one or more A/C outlet in each of your rooms to an A/C outlet that contains a built-in power adapter such as the ones shown below. 

Also, I suspect that you received program not found because the version of the executable was not compatible with the platform that you tried to run the executable on. I accidentally downloaded a JDK7 preview for ARM instead of the most current JDK8 preview and received the same "command not found" error that you did. 

Should set the left and right margins to zero I have used this command to change the screen resolution on my Pi using a Motorola Lapdock as my HDMI display. 

For hardware check out this list of working Bluetooth adapters for the Pi. My Pi is down right now (my SD card died and guess who didn't make a backup copy of it!) otherwise I would try to install the Bluetooth packages listed in this article. To pair your Pi with your phone you can use the command of the package. 

Perform an See $URL$ for details on . You have to be on the latest firmware and associated kernel to be able to perform the next step. Install and run to install the source code that built the latest kernel that you are running. This will create the correct entry in for the kernel that you are running. Note: you don't need to be root to run this, however the script will perform certain tasks using and the root password will be requested during the script execution. Instructions to install can be found at $URL$ 

Have you considered having always run your job and then have a flag that the script that starts checks to see if the script should execute or not. This flag could be the presence of a file. If the file exists (easily checked in a shell script) the script would just exit. Now all your web page needs to do is create the file if you want the script disabled and delete the file if you want the script to run. Here's some python code to create and delete the flag file. To create: 

We are able to play a version of Minecraft on the Raspberry Pi because the developers of Minecraft ported a version of the game to run on the Pi. After doing some quick research on DayZ using Google; all indications show that DayZ is a Microsoft PC based game at this time. There was some discussion about Bohemian Interactive supporting game consoles (XBox) in the future. I recommend that you post your wishes for supporting a version of the game for the Raspberry Pi on the games forum. 

Where is the executable command that you are trying to run that returns . This command should display something like this below which is the output I get on my Pi. 

I had to crank up the volume to max on the Pi and on my PC speakers to barely hear anything out of the Pi's builtin audio jack. I purchased a Syba SD-CM-UAUD USB Stereo Audio Adapter to get acceptable sound from the Pi (obviously when not using HDMI which works very well). Looking on Amazon now I now see this lower cost alternative which has a comment saying someone was successfully using this unit on their Pi. 

I know that security by obscurity is not real security, however, why make it easy by keeping a well known username such as "pi". Therefore, what are the implications to changing the username of "pi" on Raspbian and Raspbmc? Do I need to do anything other than just editing /etc/password changing "pi" to some new string? Researching on how to force to require a password I discovered that on my Raspbmc contains an entry for "pi", so therefore I at least need to update that file accordingly. 

I got one on eBay to use with two 3.6v Lipo batteries. The 4.8v from your Ni-MH should be sufficient. 

Use a bash CGI script to run a program that reads the IO value and outputs the result to STDOUT. The bash script will add the HTML tag using the property which tells the browser to reload the page after the number of seconds specified. Check here for more detail on meta refresh. You can use this to also redirect to another web page. 

Have you considered putting the TCP socket receive code inside your Python script? Or you can just write another Python script that does a socket create, socket listen, and socket receive before calling your other Python script. Here is some of the code to do this from $URL$ 

I was able to build (make) the module on my Raspberry Pi itself instead of cross compiling it on another machine. However, I needed to perform the steps listed at the end to avoid the following error: 

This posting shows the March cover of The MagPi which claims that the Pi-3 is 64 bit. I sure hope that it has USB-3 

You may want to redirect stdout and stderr to a file to allow you to see any messages generated. The following command will do that: 

I am skeptical whether running this application under a different user will resolve your issue. However that being said, you can use the command to run a command as another user. Therefore to run you should use the following in your rc.local file: 

Here's another example of using a transistor to switch on an external circuit from RPi GPIO Interface Circuits. The web page says that the 5v power supply shown can be any voltage up to 40v which the 2N3904 can support. The page says that this circuit is suitable for up to 100mA of current. 

I suspect that this is most likely a bug or quirk in Mono. Clearly is throwing an exception. I suspect that all other exceptions are due to the Double values being stored internally as String objects. Can you run your exe using ? Here's the source I compiled: 

The problem you have now is how do other devices connect to this ad-hoc network since there isn't a DHCP server. You could configure static IP addresses on each of your other devices. If this is what you want, but you also want DHCP, we can research how to setup a DHCP server on the Pi. 

Raspbian is a Linux based operating system and in Linux most information like the information provided by the command is available in a special file. From this Superuser answer the MAC address is available by reading where is a shell variable that contains the interface name desired. Or just by explicitly reading file for interface . 

The default configuration for Jetty in only allows connections from , you need to set to to allow Jetty to accept connections from any host. Add the following line to : 

According to this posting the 3.3v supply comes directly from the power supply on the Pi while the GPIO pins come from the BMC chip and can only supply a limited amount of current. That can explain why your solenoid energizes when connected to the 3.3v supply and not from the GPIO pin. I suspect that you need to wire the solenoid as shown below (which is from here for an Arduino) except using the Pi GPIO pin instead of the Arduino Digital out. You might need to adjust the R1 resistor value to compensate for the Pi's 3.3v GPIO voltage instead of the Arduino's 5.0v. This diagram shows using a transistor as a switch to have an external power supply energize the solenoid. The example I took this from used two 9v batteries in series as the external power supply. 

Both power adapters should work as they each can provide at least 1.2 Amps at 5 volts. I would use the Samsung and save the Apple 12 watt adapter for something that requires more than 2 amps (which is 10 watts). 

Here's a project on how to use LIRC to interface the PI to a home made receiver and transmitter. There is also a third schematic for a transceiver. The receiver looks to be pretty simple, just a TSOP1238 directly connected to GPIO pins 1, 6 & 12 on the Pi. 

I believe that your issue is that you are running a kernel that isn't related to the file system you are using. Typically when you build a Linux kernel the build creates the modules associated with your kernel in . You should use the kernel from your directory. 

From my own experience I'm getting 10 MB/sec write performance using my Pi as a NAS server using samba and a Toshiba 3 TB USB drive. I had to reformat the drive as ext4 to get this performance. Using NTFS I could only get 3 MB/sec write performance to the same drive. The Pi is running at 100% CPU utilization while getting 10 to 11 MB/sec write throughput. However, this is very close to the maximum throughput of the 100 mbit Ethernet on the Pi. 

Check out the PiUPS at $URL$ It connects to the PI on the GPIO header and supplies power to the Pi over the GPIO bus. You connect you 5V power to the PiUPS and it supplies 5 V either from the main power or battery backup with the main power goes out. They provide the source code to their CPP driver and say this in an FAQ: Can I react to the signal when voltage has dropped or battery voltage is low? Yes, indeed! The Pi UPS software package contains a tool that can be installed on the Raspberry Pi reading the operating status of the Pi UPS via the GPIO port.