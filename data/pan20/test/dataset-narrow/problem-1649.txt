If you want dumb then you can make the buttons transmit analog slightly different FM. You could even use the force on the button to power the transmission so no need for batteries. That's as technically simple as it gets. and is basically that remote you found($7), you would have to hack it a bit to get more than 4 buttons. Maybe you could use IR($5) (line of sight) 21+ buttons BLE 4, XBee, Electric Imp are more complicated but pre-made solutions. The Imp($30) or xbee($23) might be good for you; just connect it to the simple button/switch and it will work anywhere there is wifi (after coding it). that's as simple (implementation wise) as it gets. (until there is an abundant supply of hackable Amazon Dash Buttons) Or you know just make a web page and get people to use smart phones ($0). (why the need for more hardware?) 

Try du it will break down your space usage for you. You can also list all large files with find . Though if you only have a 8GB card you may want to not use NOOBS and instead use a slimmed down version of raspbian (minibian, pipaos, etc) . If your card is larger than you may need to expand the file system with raspi-config. or mess with other partitions; please edit your question to include the output of . 

The term supercomputer is misapplied, the pi is often used for learning about clusters due to it's low cost and open software support. Latency and node size prevent any pi cluster from competing practically with a supercomputer, so pi clusters are strictly educational. 

so your updates won't propagate. (rpi-server.famwagner.ch.famwagner.ch should be rpi-server.famwagner.ch) putting a before your SOA will let you use the full name without suffixing it, use to restore the default suffix. Some ISPs offer IPv6 which would be another way around NAT. If you are asking a different question please clarify. 

Depending on what you need you might just be updating the cmdline.txt to point to the 2nd or 3rd partition but likely you will also want to replace kernel.img (as device tree overlays may not be in use yet) (config.txt if you want a different memory split, etc) 

you should use to make/manage your soft links as I suspect they are missing rights. Note that init scrips are normaly run with sh and no enviroment, use to compare if you have issues after fixing the links. 

The rpi can be iffy under high cpu load. use nice and rsync with a bandwidth limit. Update to the latest firmware. 15TB sync no problem. 

Yes, as mentioned raspi-config is a text file so you can look inside and see what it's doing or edit it to log what it's doing. 

Try installing OSMC Once you have that working install Hyperion Note that Hyperion was designed for an older version of OSMC so you might need to change some paths etc to get it working. 

raspbmc along with most distributions for the raspberrypi are fast changing and sometimes buggy (aka not old-stable). Just backup the data, install the latest version (OSMC), and restore the date. 

etc, if you edit your question to make it more answerable people will up-vote instead of down-vote it. 4) Although you are not able to reproduce this issue please select an answer to close the question. 

fifos are not for saving or reading more than once. You may find tee better suited to your goals. Untested guess at what you want(split a network stream): 

Assume you are a small fish and no one will care to cause you trouble. Use a proxy/vpn to access the server so baddies would have to hack ssh/vpn before exploiting any services you chose to run (this is all you need if only trusted people use the server) jail each service with an open port (except ssh) iptables if you are not NATed Set up rights for anything shared by the jails use encrypted file systems for data you want private log and monitor network and app activity for suspect behavior and email or auto act on it (fail2ban, etc) Use selinix, hidepid, Rootkit Hunter, logwatch. disable unused app features subscribe to security email bulletins have (encrypted) backups at a different address use old-stable BSD (why there was on heart bleed on OS X) test your RAM for hardware exploit. keep ultra sensitive information in your head like your decryption pass-paragraph (because a word is not enough). 

allowing you to see what Chromium versions are available Though it looks like only v22 is available (looks like v42 for the rpi2). Pidora/Fedora Fedora does not include Chromium in the core repositories and neither does Pidora. Arch Arch Linux ARM only has Chromium builds for ARMv7 not ARMv6. Raspberry Pi 2 The Raspberry Pi 2 has a more common CPU architecture (ARMv7) And you can get more recent builds from Ubuntu. Build it yourself Trying to build it yourself will use up all your RAM and crash your raspberrypi (256MB) but this is the method you could use in qemu or adapt to cross compile. Also note that chromium may require patches to compile and run on the raspberrypi: 

Start by looking at the log and comparing the other commands I showed, then if nothing jumps out add on the 11th line of to see if the service is being called at all, if not, remove soft links and re-run if it is then move the log line down the script file until you find where it's failing. Use a binary like search for the log line position (0%,50%,100%,75%,62%,etc) 

If your rpi is hanging then pulling the plug is the only option left. Keep running so next time it hangs you can see if something ate all your ram or cpu. may show you a crash 

Note that the format is and that not must be used for multiple devices. There is a list of valid flags in the source here. 

weather will depend on the build of Android you are using. or you can craft an app on each side to use a custom API over forwarded port. 

The wikis are probably better resources as they can be updated with new products like the 4k/usb3 boards that are coming out now. Generally these are the popular options: 

It is normal for the CPU to be 10 to 20 degrees warmer than its surroundings. 60 is a bit warm so try removing the case to give it better ventilation, and put it in a cool dry place (not in the sun, etc). As long as you keep it under 85 degrees (and have not over volted), your warranty is OK. 

Yes you can ssh to it or use app launcher to get a terminal but there is not much point as there is not even a package manager. For that reason I use OSMC because it's closer to a normal Debian. 

Renaming a file normally won't interfere with running but it will only use the new file on reboot. It should take no bandwidth and less than a minute to synchronize all your files if they have already been copied. (assuming it stores the hashed state like normal bittorrent, or uses rsync tricks) WARNING: Bittorrent Sync is not open source and not fully distributed so it may become unusable in the future. There are more flexible options (rsync, git-annex, etc). (rsync will verify/sync 15TB in under a minute on a raspberrypi) If Bittorrent Sync is running you will see it in and you can safely ask it to stop with (or if it won't stop, you can use to force stop it). It may not have been installed with it's own service but instead might be in or or other less savory places. It's good practice to keep an install.log on servers to let future admins know what (and how) was changed from the default distribution. 

Put in . There are other ways of doing it but that's nice and simple. You may have to install it first if it's not included in your custom distribution of choice. (test if works from the command line first) 

So just buy the V720 from the same company mentioned in your link. ( This is not a rpi specific question) 

If you are calling your script from rc.local then call before your script in rc.local . You can use instead of . and can be used for per user login settings. is a good tool to check what is set. 

Non security related config of your services just need to keep in mind the cpu and ram limitations of the rpi, like use nice, and don't expect live video transcoding, etc. 

Linux and recent windows (7+?) Try to cache as much disk into ram as they can to speed things up a bit. You can drop the caches then look at memory: 

Yes; The raspberry pi originally had a firmware bug that would trash the contents of sdcards regardless of if there were writes or not. With modern/recent firmware versions the raspberry pi is fairly tolerant of power loss even when writing. High CPU usage and cheap adapters is the most likely cause of sdcard corruption on modern firmware. On power up some usb devices pull more than normal current and can cause the raspberry pi to not boot or act strange. To avoid this, isolate power sources, use a bigger power source, or don't use extra devices. If there is a slight over volt, the raspberry pi can take some time (hours? I have not tried) of no power before it's willing to boot again. The A/B+ and the 2 have better hardware power management and suffer less from these issues. 

If you put rpi-server.mydomain.com in the address of a web browsers that is not on your loacl network the browser will be told by your DNS to contact 192.168.1.5 

All large e-ink displays I have seen were a mosaic of small displays. Manufacturers make medium to small book sized displays for example 13.3". Though it may be cheaper to get the parts from an existing consumer product if you plan a volume of one. You can hook pretty much anything to the rpi but sometimes the work has already been done. The largest ereader I know of is 10.2" and 10X the price of a 1080p 24" led monitor, so unless you are on solar it's economy a few years early for large e-ink. 

You could do that if you set it to join a screen or tmux session on boot, then you could share the same session if you wanted via ssh. 

DNS can take 72h to propagate if you don't apply other tricks so wait to be sure. Additionally your NS is setup wrong: 

There is no simple answer as it depends on what you are willing to change but reading this guide should help you find out; $URL$ The 2.5 second example you found is using $URL$ 

Mid ocean video communication can't be done for the $50 price range. The Rockblock is for "short messages" meaning text or data under 340 bytes. Videos are more like 1,000,000,000 bytes. and just to give you an idea of how small that is; 

The rpi is likely to survive powerloss (99/100 times?) The rpi is more susceptible than normal computers. the problem was really bad for the first year until a firmware update stabilized it. (it would even die under high cpu load) Using a read only or journaled file system would be enough on a normal computer but the rpi sdcard is still more susceptible so keep stuff on usb and it should be ok.