The following is a fragment of a bash script I use to determine the MAC of Ethernet, or if this does not exist of WiFi (for Pi Zero W). It does not rely on or any other method of detecting allocated IP, and just needs the system to detect the networking hardware. This works for Jessie or Stretch 

I routinely run Arduino from USB ports on the Pi, although you can also use the 5V pin on the header to supply power. The Pi can supply 600mA (at least) from USB and up to 1A from the 5V pin (given an adequate power supply) so should have no problem running any Arduino. If the project will run from the Arduino power the Pi will be OK. See Raspberry Pi Power Limitations 

This question is probably off-topic, as opinion based, and any protocol could be used. However there is standard solution using . PIgpio provides a ready built solution for accessing GPIO. 

You can control a light with a relay, transistor or FET depending on voltage/current See $URL$ For AC a relay is the only viable option (although SSR can provide a non-mechanical altenative). You can control brightness using PWM although this depends on the nature of the load. 

is part of the old which was made obsolete by , introduced in . boot runs many processes in parallel, and the only way to manage these is with a service which manages dependencies. There is NO simple fix. NOTE attempts to run , but is only successful for simple tasks - it is best to avoid it. Generally you should setup devices in . You should ask a more specific question about the devices you are attempting to use. 

The BMC2835 has 2 independent PWM channels, which are used for analog audio output via a simple filter. The PWM can be routed to 2 GPIO pins (only 1 of which is accessible on the Pi - BMC18) in one of the alternate modes. As other respondents have indicated there are a number of "solutions" for software PWM (with varying limitations). I have not actually used any of these. If you need to use hardware PWM in conjunction with audio, then some audio board is necessary. There are quite a few options, ranging from simple USB sound to high quality audio using I2S interface. 

I also routinely do this. In fact you can move cards between the B, B+ or Pi2 which I have. If moving between models the only differences would be if you had drastically changed the memory map or frequency or were using a distribution (such as Ubuntu) which only supports ARM7. If you want to use both Pi simultaneously there are a couple of other things to check:- 

Yes you can do so (in most cases). BTW There is no "first gen, and a third gen RPi" you should specify which model you are using by model. There are some instances in which you cannot transfer - if the compiled program has hard coded perpheral addresses (1GB RAM models have different mapping) or there are differences between hardware e.g. The UART on Pi3. You can clone cards, but this may require some massaging, depending on how it is setup. should be unique, but this is not fatal, merely confusing. You can re-generate keys if you want unique sets, but there is no problem having identical keys on different machines. In fact I deliberately ensure that all my SD Cards have identical keys, which means I can swap them between Pi without remote programs complaining about changed key/MAC pairs. An alternative approach is to use or similar to transfer programs, or better still . This allows you to specify which things should not be transferred and selectively transfer data e.g. user directory or exclude and . If you want to try the approach I can list scripts I use to synchronise Pi. 

Your problem is likely "In normal circumstances there is NEVER a need to run rpi-update as it always gets you to the leading edge firmware and kernel and because that may be a testing version it could leave your RPi unbootable". $URL$ 

DO NOT connect 5V to the Pi - you will blow it up. The DHT11 will work from 3.3V. You NEED a resistor ~4.7kÎ© from 3.3V to DOUT - the device you pictured may have a resistor from VCC to DOUT. You can use ANY pin. 

If you are really determined to do it this way you need to disable the DHCP client daemon and switch to standard Debian networking: 

What you have looks correct (assuming SSID and Password are correct) and you haven't modified any other files. How are you accessing if networking is not set? See How to set up networking/WiFi 

The article you referenced fails to mention the need to allocate a static IP to the laptop (as mentioned by @kimmax). It also claims some (undefined) benefit for direct connection. There is NO advantage in direct connection. You can achieve the same by connecting both laptop and Pi to a router, and then both will also have internet access. 

No computer can guarantee file integrity on power loss. Most computers won't let you power off unsafely, but are still vulnerable to loss of power. The only solution is a UPS of some sort. 

Yes - provided the OS is new enough. You don't say what OS you are using. Assuming Raspbian Jessie you need kernel or later. To be on the safe side to a followed by first. I would recommend which will get the latest, released a few days ago. This has some useful additions, but you will need to install extra packages to get all of these see $URL$ 

I have actually resolved my problem, but followed up so many leads I was unsure what the actual "fix" is. The documentation on Desktop Environment and File Manager is not particularly helpful. I just repeated on another Pi, and am listing the solution. I selected a text file in and selected in the context menu. was missing from the so I selected and entered and entered Application name . now appears in the context menu and in its correct place in the menu. This appeared to generate with the following content 

You don't find because it doesn't exist. See How do I set up networking/WiFi/Static IP for explanation and solutions. You should NOT set a static IP address in file which is why it states:- 

I am trying to log slow serial data (about 40 bytes per minute at 9600 baud) on the Pi. I have a rough program using which only provides unbuffered I could write a serialGets but wonder if/why it hasn't been done before. PS The last time I wrote something like this was in the 1980s on 

I don't see anything on the board that looks like it would drive a relay (unless you are talking about a relay module with logic input). Directly connecting a relay risks damaging the device. 

First "Ground" is a misnomer; this is a name commonly given to the common power rail, which on the Pi, is rarely connected to "Ground". ANY electrical circuit NEEDS to be complete. That means that you need a loop for current to flow. Your proposed circuit has 2 loops; 

After soldering a header on my I used pigpio's gpiotest utility to check for problems. I was dismayed that this produced no output and crashed the Pi. After stepping through the tests I found what had caused the problem (operator error). I was still surprised by the output:- 

Frankly, you have bought the wrong device. What you need is a USB to serial device with 3.3V compatible outputs. There are hundreds of posts on connecting these. There is NO WAY to connect RS232 to the Pi (except with a RS232 to 3.3V "TTL" adapter). You could use the device you have in the Pi USB port to connect to a "RS232" interface on a PC (if you can find one - most PC manufactured in the last 10 years don't). You then need to configure the Pi to use the resultant serial port (something like ) as a console. To do this you need to check that the device you have has a driver supported by the Pi and reconfigure the Pi to use this as console - this is not a task for a beginner, but if you post details you may get help. 

The reason tutorials mention berryboot or NOOBS are because AFAIK they are the only boot managers for the Pi. I wouldn't use either, because they create too many problems with updating. You CAN install other OS into different partitions, and manually change the boot partition to load the appropriate OS. It wouldn't be hard to write a script to do this. The partition should be the same for all OS, just change to point to other partitions with the OS; each OS would need to have customised to match the partition the OS is in. NOTE all OS should be using the same kernel. Frankly it is easier to just use separate SD Cards. 

If you use (most networks support this) it will be configured automatically. Raspbian is setup to use (or in later Raspbian) by default. The post you referenced tries to manually configure things; it may work if you know what you are doing, but is not necessary. 

NOOBS has 3 partitions. One is FAT, another FAT32 (which has the images) and an EXT4. The First is mounted as /boot when the OS is running. This is where you should find your files. 

You can use ANY computer as a terminal; indeed I did this in the mid 1970s using various basic 8bit micros as serial terminals. It is also possible to emulate any protocol; VT52, VT100 were popular serial protocols, and we also did SNA to talk to IBM mainframes. The Pi (and most Linux machines) come with VNC which can be uses as an xterminal to remote GUI desktops. See VNC 

You don't give any details of the data protocol or the program code you are using to receive it, so the following is speculation. You have no chance of logging continuous 115200 baud data using polling on the Pi. If you use flow control it can be done, but this, of course reduces the overall throughput. Assuming the kernel driver buffers the data (I know the normal serial input does, but not how it is handled by USB drivers) you should be able to handle it by processing lines or buffers of data. I have written such code in c using the normal serial drivers in the kernel (and the wiringPi library). 

The BCM2837 on the Raspberry Pi3 has 2 UARTs (as did its predecessors), however to support the Bluetooth functionality the fully featured PL011 UART was moved from the header pins to the Bluetooth chip and the mini UART made available on header pins 8 & 10. This has a number of consequences for users of the serial interface. The previously used to access the UART now connects to Bluetooth. The miniUART is now available on . In the latest operating system software there is a which selects the appropriate device so you can replace with and use the same software on the Pi3 and earlier models. Unfortunately there are a number of other consequences:- 

You should be able to get it to work by manually editing . Reading will show the options available. I can't explicitly answer as I haven't used WEP, but know it is mentioned in the documentation. 

Basically you could use to find the MAC of inbuilt WiFi on Pi3 or Pi Zero W. should work on WiFi dongles on Stretch, but you could easily adapt the above to work on both Jessie or Stretch for WiFi and Ethernet. 

You can not rely on the 5V from the UBEC - because the UBEC is designed to maintain voltage even when input fails. It is not difficult to detect. Dry cells are effectively exhausted when the voltage falls to ~1.0V - here 8V. A voltage divider (connected across the battery) which will produce 1.3V when battery falls to 8V connected to a GPIO will go low. This is imprecise. The actual trigger point will be 0.8 - 1.3 V. More accurate results can be achieved with a comparitor, you have to decide if this is warranted. You don't say which Pi you are using, but none of them will run for long on AA batteries - you should expect to change them several times a day. (This is a polite way of saying this is probably not the best solution.) 

This SHOULD be sufficient to run the HDD, provided it is designed to run from USB with the 500mA limit this imposes. Unfortunately it may not be reliable, as it depends on the voltage. My Pi2 power supply, rated at 2A, drops below 4.8V when I tried running a HDD, and while this is in spec proved unreliable, so I use a powered hub. There are a number of items in the path, the polyfuse and the USB supply regulator which contribute to the drop. You need to give it a try, and measure the actual voltages. 

I know you said you didn't want to use but you may find this useful. All you have to do is insert the SD Card and run the following. I does all the difficult stuff. You may have to modify to match the desired location for the image. 

No. Buy a to converter. These are simple passive devices and you should be able to get one for less than $10 

It is not impossible to control USB current, but trying to control what happens before the OS boots is not feasible. The device is unlikely to require much current (RS232 only uses a few mA) so you are obviously working right on the edge. You need to solve your power supply problem. 

The "GUI" i.e. Xorg Display Server, PIXEL desktop environment, Openbox Window Manager and LightDM Login Manager actually takes little space. Un-installing is possible, however, I suggest you just get rid of the space hogs; Wolfram, Mathematica, Scratch. 

The first step in putting an OS on the Pi effectively erases the card and installs new partitions. All OS use a small FAT as boot partition ~100MB, and most use the remainder as EXT4.