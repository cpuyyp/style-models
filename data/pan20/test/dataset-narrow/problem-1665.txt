The Pi does not meet the minimum CPU requirements to operate as a client or server, nor does it have the required RAM for a server. The CPU requirement also indicates that the game is compiled for the x86/x64 architecture which is not the same architecture as the Pi's arm architecture. More info on architecture differences can be found on our blog. 

It is plenty secure the tolerances on the two mating surfaces (cable and socket) make for a very tight friction fit. There are also small tangs that mate making the joint even more secure. If you are having problems with the power cable coming dislodged, I would try another cable, as this should not happen. 

As part of the launch publicity I saw it mentioned that one concern is the effort required to maintain two separate code bases (32 and 64 bit). the Adafruit PI3 Launch video also mentioned that the move to a 64bit processor was more about the clock speed increase the new chip provided than about using 64bit mode. 

Based on the error message you have an I2C communication issue. It appears that only the first LED Matrix is being detected. You can confirm this with the following command: 

The PiFace includes a relay (2 actually) the clicking sound you hear is the relay (the small black boxes) activating and deactivating. Inside the relay is a small metal arm that moves to make electrical contact. The clicking is normal. This video explains how a relay works. 

This can be done (I have done it with two different Belkin hubs). However, it requires a good powered USB hub, cheap hubs may not be able to supply enough power to the Pi to prevent problems with the peripherals (keyboard and network problems are the most common), or for stable operation of the Pi itself. If I remember correctly the micro USB connector used to power the Pi does not use the data lines, so it will not recognize it as a USB device. I would suggest setting up the Pi with a separate power supply first and then try powering it through the hub, This order will help debug any issues you may experience. 

more details available here. Note the instructions above for Raspbian will likely work on Arch as well though I have not tested it. 

Connecting the power and ground pins simultaneously, or the correct combination of GPIO and power or ground pins can fry not only the pin but the entire PI (GPIO voltage levels are 3.3 V and are not 5 V tolerant. There is no over-voltage protection on the board) . You may want to check out this article from the elinux wiki regarding protecting the GPIO Pins 

It looks like you installed pyside only for Python 2. There are two meta packages for pyside in the repository and . You can see this for yourself with the following command which searches the repository for pyside: 

They are the SPI (Serial Peripheral Interface) interface pins. SPI is an interface bus used to exchange data between microntrollers and peripherals. It uses four pins MOSI which stands for master out slave in, MISO is Master in slave out, SS is slave select and a clock line (CLK). You can read more on the SPI protocol on wikipedia and from sparkfun 

the little hook clearly fits over the Pi. To remove the Pi, push or pull the hook back and push up on the board, A popsicle stick or spludger makes this much easier. 

Most of the OS's available for the Pi would be able to meet your requirements. However, as it appears from your question that you are fairly new to the Pi I would suggest Raspbian which is based on Debian. You can download it from here. The main reason for this suggestion is that there are simply more tutorials and a bigger user base running Raspbian than the other OS's. This will make it easier to find code samples and get help when you run into problems. I would also suggest downloading the full (not lite) version as it includes the GUI making some tasks easier. 

Assuming you don't count the cost of your home internet connection and have the Pi3 there is no competition on cost, Hosting on your Pi will cost you approximately $1 a month (the cost of the electricity) to run and the other $10. But the more important criteria are 

Note this will likely return HASSbian. However if you look at the VERSION line it will likely return Jessie or Wheezy (these are Debian releases). Assuming my assumption is correct you would follow the commands for Debian. 

The reason for the error is you have two format specifiers %s but are passing 4 values (sensor, new_state, sensor2, new_state2). Change the last line form this: 

create a directory to work in - mkdir cron-apt_documentation change to the new directory - cd cron-apt_documentation copy the compressed file - cp /usr/share/doc/cron-apt/README.gz . (note the trailing dot) uncompress the file - gunzip README.gz read the file - cat README | less 

Click Menu, Then Preferences; Then Windows Settings; From the Configuration manager choose Desktops in the left hand column; Select the desired Number of Desktops; Then click Close. 

You don't mention which GPS module you have, so I can not provide a definitive yes, but given the right GPS module it is possible using the UART (tx/rx pins). Another alternative depending on your module is to use one of the USB ports (either directly connected for modules that have a usb cable or via a USB to TTL cable). Adafruit has a complete tutorial covering the use of a GPS module with the Raspberry Pi. 

Gparted requires root privileges to operate. You can become the root user by entering the following at the command line: 

The use/effect of the cores depends on the software used, some things will take advantage of the multiple cores others cannot. In general the switch to a multicore processor has brought major performance improvements (some of it from the faster clock speed, and some from the multicore chip). There is no current 64bit OS so all the software run is 32bit. Quoting the Pi Foundation's blog post announcing the Pi 3 "At launch, we are using the same 32-bit Raspbian userland that we use on other Raspberry Pi devices; over the next few months we will investigate whether there is value in moving to 64-bit mode." The choice of a 64bit chip was more about the increased clock speed. There is a course about building a simple OS for the Raspberry Pi. I don't know that this has been updated for the multicore Pi's, or the Pi Zero, but it would be a good place to start. 

Adafruit has a nice tutorial on using the MCP3008($3.75) - 8-Channel 10-Bit ADC With SPI Interface to control the volume of a mp3 file, but it should give you a good starting point for any analog to digital project. 

where myusername is replaced by your username (probably pi) and the path to executable is the full path to the command you want to run. 

You can overcome the first by getting some stacking headers, and the second by doing a little research. The third may be a harder challenge to overcome. I would suggest you email the manufactures or check their websites for more detailed info. It seems someone over at Newark has already asked this question for the PiFace 

EEPROMS (Electrically Erasable Programmable Read-Only Memory) are a type of non-volatile memory (they maintain the info even when not powered. You can read more about EEPROMS on Wikipedia. They are used by Pi HATS (Hardware Attached on Top) EEPROM. Per the Raspberry Pi Foundation's blog. 

Yes, your Pi has a key pair that was generated automatically (note this is the servers key not a personal user key). You can verify the key from the Pi's command line; by doing the following: 

You can change the boot options (boot to desktop or CLI and with or without a password) by using raspi-config: 

In your original code, you are assigning your desired file path to the save_path variable, but you are not using that variable when opening the file. You also need a / to separate the path and file name. As for why it does not have an entry for every second. Think about the last line of your code: 

Soldered joints ensure both good mechanical and electrical connections - fun Tak is unlikely to provide a suitable mechanical bond in such small spaces, nor is it likely to have proper electrical conductivity. However, something like the Pi Cobbler and ribbon cable from Adafruit will allow you to separate the Pi and the breadboard when desired and not require any soldering (assuming you buy a preassembled version). You don't mention what model Pi you are using but some soldering may be required if using the the new Pi Zero - which does not have the GPIO pins populated) If using the Pi Zero this affords some additional options. In addition to the standard male pins you could use a female header, this would allow using standard male to male jumper wires to connect to your breadboard, Additionally you could use a set of right angle headers to create a vertical mounting for the Pi above the breadboard (akin to a video card mount in a PC). 

Finally reboot. You can confirm motion is running by checking the output from the following command: 

If you hold down the shift key while booting, you should end up in a safe mode (minimal Linux install). You can then edit your rc.local file and reboot normally. A second alternative would be to load a Ubuntu Live CD on your windows machine and then edit the file on the SD card from the running Linux system. 

In general things like motor, wav, and lcd shields are designed to fit an Arduino. That does not mean they won't work with other MCU's or SBC's like the Pi. Some of the difference include: 

Next you need to modify the NTP setup on the Pi to sync to the NTP server on your mac. edit the /etc/ntp.conf file. Find the following: 

remove the leading # and change the number at the end to one of the following: based on your TV type sdtv_mode=0 # Normal NTSC sdtv_mode=1 # Japanese version of NTSC – no pedestal sdtv_mode=2 # Normal PAL sdtv_mode=3 # Brazilian version of PAL – 525/60 rather than 625/50, different subcarrier Add the following line to the file: hdmi_ignore_hotplug=1 Make sure that the following line hdmi_force_hotplug=1 is commented out (has a # at the start of the line). 

Most breadboards have a pair of red and blue lines on the long sides. These are called the power rails and all of the pins in the red row are connected, likewise for the blue. Connect the 5 Volt pin from the Pi to one of the holes in the red row, and connect the Pi ground pin to the blue row. Then you can connect the sensors power and ground to the red and blue row of pins respectively. You may want to read this tutorial from sparkfun on how to use a breadboard. 

You don't mention if you are using virtualenv, but if you are you may want to read this post. Which provides a workaround for the problem and its cause. 

The second problem is with the default Apache configuration. To correct this edit /etc/apache2/sites-enabled/000-default and change: 

If you want your Pi to always start in GUI mode. Begin by launching the configuration tool with the following command: 

If you don't get an error the package is installed and available for Python 2. To resolve the issue simply install the Python 3 package: 

This will remove the configuration as well. Though you may still have additional dependencies that were installed. To remove these do: 

From the pictures. It appears that you have the cable connected to the board incorrectly. Normally the red stripe on a ribbon cable indicates pin 1. Pin 1 on the Pi is on the SD card end of the board. You can see the pin numbers in this photo, and the orientation of the cable in this picture (this is a board similar to yours produced by Adafuit called the Pi Cobbler). 

SSH keys provide additional security over a password because of their length compared to a password, they also tend to have higher entropy. You can chose to allow passwords, SSH keys or both, SSH keys will provide the highest level of security for the reasons stated above. If you only allow SSH keys authentication you will have passwwordless logins (sort of). To ensure the security of your private key you should use a passphrase when generating the key. So you will need a passpharse (aka password) to use the (private) key. You can set this up to only ask you once per session (though this does have security implications). As for generating the keys (public and private) you would do that on your mac and then copy the id_rsa.pub key to the Pi. If running headless make sure to have another session open in case of mistakes - that can lock you out of your system. There are a few other things that you can do to make SSH (and hence your Pi) more secure. disable root logins, limit login attempts, limit the accepted IP address/hosts and run SSH on a non-standard port. 

You could setup a NTP server on your Mac. In Date & Time System Preferences disable "Set date & time automatically" edit your /etc/ntp.conf file to use a local (geographically) pool of servers, something like the below if you are in the US (a Google search for NTP pool server by continent should get you the correct settings for your location.): 

Assuming you are using the waveshare 3.5in. TFT (or a compatible display), You can switch back to HDMI mode with the following commands: 

You should also read the −−list−controls section of the man page to check the current brightness setting and to confirm that brightness is controllable. 

The B+ had a single core Broadcom BCM2835 Arm 6, with 512MB of RAM. the Raspberry Pi 2 (is newer) has a quad core BCM2836 Arm 7, with 1GB of RAM. As a result of the quad core CPU the Raspberry Pi 2 has a higher current draw. Adafruit put together a nice comparison of the two, that includes a section detailing how to tell them apart. 

A release date has not been announced for the model A yet. I would not expect to see the Model A available until production begins to match demand for the Model B. Based on the video from the Cambridge Raspberry Jam event held last weekend and the video interview of Eben it appears that the camera may be released before the model A. $URL$ This following was posted by Liz in the Raspberry Pi forums on June 13th "I know that at least one manufacturer is planning on a September build; earlier if they can clear their backlog before then (but orders keep coming through at an ungodly rate, so realistically it’s likely to be September). The A will definitely be happening – we’re all contracted to make sure it goes ahead as planned – but the demand so far for the B has been so outlandish that a lot of plans have had to be changed or abandoned to get things working as well as they are at the moment. And we’re very aware that what we have at the moment isn’t optimal – yet." $URL$ 

if it returns nothing everything is working. If you intend to run this in Python2.x you probably need to change: