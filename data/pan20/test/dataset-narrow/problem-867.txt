Do not edit the default file , as it will be restored whenever the package is updated. That is why we put it in a local file to override defaults. After creating this file, tell systemd about it: 

and try again. If that doesn't solve the problem, then you should contact the maintainer of the third party repository to report the problem. 

Unfortunately, does not have any means of installing locally downloaded packages so you can't take advantage of its dependency resolution and doesn't have dependency resolution. So you are in a catch-22 here. The solution is to use to install the package. It will resolve the dependencies, install them, and finally install your locally downloaded package. (If you don't want the GUI, then install .) 

On EL (prior to 7) start services on an SELinux-enabled system with to ensure that SELinux contexts and domain transitions are correct. 

This is supposed to be set to the name of the Datacenter object in vSphere. (And, as specified in the Ansible documentation, it should be set to if you're talking to a standalone ESXi host.) The minor problem is that you've used IP addresses rather than hostnames for connection information. What to do about this is obvious. 

Don't count on it. While CentOS is a clone of RHEL, which is forked from Fedora every few years, Fedora moves relatively quickly and downstream packages should not be considered compatible with upstream, especially after several releases. This package will probably fail to install, and even if it installs, it will probably fail to run, and even if it runs, it will probably exhibit strange behavior which can't be traced to any obvious cause. Instead, install FreeSWITCH from source, or rebuild its source RPM on Fedora. (Of course, if you actually try that, you'll find that it fails to build, which should tell you something... I know because I actually tried this and was forced to give up.) Now after you've done all this experimentation, just go back and install FreeSWITCH on CentOS 7. You'll be happier and more stable. 

Note that some of these attributes may indicate problems even if they are not marked as failed; so find an expert to examine them, or attach them to your question. 

The header is only checked against s which are listening on the interface/IP address the request came in on. The wildcard means that the virtual host can be used for requests from any interface. If you don't want people to access the virtual host, then specify its IP addresses explicitly, rather than allowing it to be served from all interfaces: 

This will tell you that the package provides . I was a little surprised to see that you didn't have installed, as that's a pretty basic program that ought to always be installed. But, you learn something new every day... In a future version of RHEL/CentOS, will be provided in the package, and should always be installed even on the most minimal system. 

The absolute maximum amount of RAM you can give to a guest is the total amount of RAM available to the host. But of course, if you do that, then you should expect some performance issues, or things will just fail to start or run properly. That number is displayed both when you create the VM in virt-manager, and by . 

Looks like you're running it every minute of the fourth hour of the day. So 60 copies of wget are getting fired up. 

Serve all static files from nginx, and only pass upstream to Apache any other requests. When necessary for performance reasons, make the homepage a static file such as in the document root. Thus, nginx will serve it directly. Delete it to return to the previous behavior. 

You're almost there. First, the WP Super Cache rules are very messy. They really need to be redesigned from the ground up, but that's a project for another day. To get this working, don't return immediately, instead set the as all of the other checks do. For instance: 

The virtual disks are mapped in the order you created them in the command line. To see the exact mapping, inspect the nodes in the XML definition for the guest: 

Win-Q is roughly equivalent to the All Programs item on the Start menu in previous versions of Windows; it's what you would hit to choose a program not directly on the Start screen. Generally, you will only get program icons added directly to the Start screen if you are the user who installed the program. If you're trying to deploy Windows Metro style apps, Microsoft has a great guide for doing this. Unfortunately at the moment there aren't any really good ways to enforce the content of each user's Start screen, unless you're willing to reimage the workstation. Hopefully a Group Policy template will be forthcoming... 

If your mail servers are down, senders will keep trying for 3 to 5 days before returning the mail to sender. This includes most mailing lists. While this value is customizable, I've never seen any mail server return mail for a temporary failure like that in less than 24 hours. Sendmail and Postfix both default to 5 days, exim (which is often used by cheap web hosting providers and other mass market providers) defaults to 4 days. I don't think you'll have an issue if you just stop accepting incoming mail, move server, bring the new mail server up and change your DNS records. 

You're using Ubuntu, which like its Debian parent has the nasty bad habit of enabling and starting every service which gets installed onto the system, whether they are wanted or not. This increases your attack surface; you should check carefully for unwanted services. In this scenario the firewall helps you by ensuring that only the services you want to be open to the public are actually reachable. 

If you're running this function as root, there's no need to call and then run several commands. Besides, that won't work anyway. You'll just get an interactive shell, and then the script will continue when you exit that shell. Just run the commands you need with directly: (and you don't need ; will do that for you) 

Your does not include your own domain, thus Postfix doesn't know it is meant to deliver the mail locally. This is why you see errors like "Relay access denied" and "Mail loops back to myself". It appears you had already set this up, but had commented it out. 

You don't need a "static" IP address to implement SSL; you do need a name in the DNS, for which the SSL certificate will be issued. The typical solution to this is to create a name in the DNS and then make it a CNAME for the DNS name given for the Elastic Load Balancer. 

Zabbix is capable of monitoring SNMP-capable devices, and even displays their status in its web interface: 

Ansible wasn't really meant to solve this sort of problem. It can do so, but it would be cumbersome at best. Something like Katello (the open source on which Red Hat Satellite 6 is based) can handle this sort of thing well. It maintains packages at the exact versions you've tested and allows you to promote them from development to staging to production, or define whatever workflow makes sense for you. Not to mention handles bare metal provisioning and many other things. Its only drawback in this scenario is it's well integrated with Puppet, so using it with Ansible may be a bit less automated in places than it otherwise could be. 

The virtio drivers are meant to provide paravirtualized hardware (acceleration) device drivers to virtual machine guests. As such, they are device drivers that are installed in the guest operating system, not on the host. You can find the virtio drivers for Windows from the KVM web site. 

"No, of course not. What were you thinking?" The mdadm RAID 0 stripes data across all four volumes in small (here, 256KB) chunks, giving you the performance improvement you expect from RAID 0. The LVM approach you listed here also does the same striping, making it functionally equivalent to RAID 0. (This is not the default behavior for LVM.) You could use either approach, but the LVM approach actually limits you here since you won't be able to add volumes later without completely recreating the logical device. 

To resolve the problem, tap your up arrow key to select "Install CentOS 7" instead of "Test this media & install CentOS 7". 

PowerDNS logs to the local syslog, so it is the syslog daemon you need to send a HUP signal to when you rotate the log files. You do not need to signal PowerDNS at all. For example (taken from the logrotate configuration for rsyslog): 

IPsec in transport mode would do this, but this really isn't scalable. Four nodes is about the most at which I would even think about it. I'm currently using strongSwan for IPsec on Linux, which is easy enough to set up this way. 

The format of is a space separated list of host:port pairs. However, the configuration example you gave has quotation marks. These are not permitted. Use no quotation marks (and the is also optional): 

You should also be aware that dynamic module loading was only introduced in the 1.10 development cycle. Modules older than this were designed to be compiled directly into nginx, and would need to be updated for dynamic loading. The module you linked to is such a one. Contact its developer for further information.