Steps taken from SRX650 Services Gateway Hardware Guide, you can also see the sampling of the above steps if in doubt. System default security Deny all transit traffic. 

Both routes were External type 2, advertised the route as an OSPF E1, E1 is always preferred over E2 and this solved the issue. 

If you are a math type of person you may want to understand Dijkstra algorithm. Reading RFC2328 as mentioned by Ron is best option. If you are looking for a short down and dirty contribution I'll put it this way, yet feel free to dig links for in deep understanding. SPF does the calculation per-area basis on each router. Dijkstra algorithm evaluates 3DB's: 

End election is validated when no more better (lower BID's) are received from neighbor switches. When the switches first come up, they start the root switch selection process. Each switch transmits a BPDU to the directly connected switch on a per-VLAN basis. The Configuration BPDU has the BID (bridge priority and unique device identifier) and it used during initial setup to find out who will be the root bridge. Lower is preferable. Recall the STP states: 

Four different Link Type's exist for LSA 1: - Point-to-point (Type 1) - Transit (Type 2) - Stub (Type 3) - Virtual Link (Type 4) 

Some implementations set the ATT bit automatically and provide you a command or knob under a configuration stanza to disable it. i.e on Juniper: ignore-attached-bit 

Finally let us recall that although PT is good for learning it is somewhat limited. For more advance research, testing and learning GNS3 might be a good option for you. Cheers! EDIT ADDED FROM HERE BELOW I have just got my hands with PT Version 7.0.0.0306, issue with PC is the same it only allows one network module to be installed and hence one IP. However, something I noticed on the newer version and forgot to check on the old version is that the server does indeed support the adding of two cards, hence two IP addresses. Unfortunately that does still not accomplish what you are looking for: 

This process indeed takes effect with the usage of DBD packets as well as Type 3, 4 and 5 packets. let's see what each one contains: 

Strictly speaking LSA T1 has only area scope so say for example routers in A0 will all eventually receive the Router LSA, now for that information to be carried to other area like A1 you would need a T3. 

This is done due to the processing that RIP does with updates. For further understanding, class routing protocols as RIPv1 do not include subnet mask in the routing update. Nevertheless, the routing table includes RIPv1 routes with the net address as with the subnet mask. How would a router that runs RIPv1 determine the subnet mask that it must apply to a route added to the routing table? Here we have the rules to process RIPv1 routes: 

Withing your AS if you have link redundancy and the peering IP is reachable via IGP then you shouldn't have an issue. If by this you mean to routing traffic from one group to the other through the ISP there shouldn't be an issue as well as long the ISP is aware that certain routes are not available over the interface where it is receiving it, so if you are advertising for example a /16 summary then you will probably have issues as the ISP will determine in it's table that the shortest path to that network is directly connected. 

There can be overlapping routes which will cause connectivity issues. Usually a router will pick the destination with the highest bit matching precedence, in other words the route with the longest mask. 

Based on your router specs -Interno DG200A- the answer is No. The best you can do with that device is some CoS to assign voice, video or other traffic to queues and prioritize/mark as needed. Check starting page 40 on the User Guide. For something more detailed or granular as you have requested the option would be to put another device in front of the router that can handle this or if you have some admin control over the users PC's, then check what specs does the OS provide for your needs. 

Factory default security policies Trust to trust permit, trust to untrust permit, untrust to trust deny 

Correct, each MST instance has its own topology parameters. I know you tagged Cisco, but if someone from Juniper also needs to check for their wording: Understanding MSTP for EX Series and QFX Series Switches 

"Im also unable to distinguish between LSA used while forming adjacency and LSA types, as in router lsas, network lsas,etc. If the LSA types are only sent after the adjacency is formed, then how come the different packets used while forming adjacency know about the Link State Advertisements?" A/ Basically dissect the headers. Database description through LS type from the LSA header and Link-State request packet field LS type, both specify (example: router lsa, summary lsa, nssa). "If Router A has only directly connected networks in the database and hasn't received any LSAs from other routers, then how can it send the received LSAs to the other connected router, say Router B." A/ I'll elaborate with what I think is your doubt, if not please correct. "The router-LSA then describes the router's working connections (i.e., interfaces or links) to the area. Each link is typed according to the kind of attached network." pag127 Basically there are 4 Link Type's: 

Highlight Bridge Identifier: 32768 / 0 / 00:17:ef:74:62:00 to check hex. In the hex values you look for your MAC and in front of that you would see the 2byte for the decimal value of 32768 (32768+0). So something like: 80 00 00 17 ef 74 62 00 

For a network that is directly connected to the router (LAN) and not learned from a neighbor, you would need to add the interface from that network as passive in the configuration for advertising, this happens via router-lsa. From Advance Junos Service Provider Routing, Chapter 2-19, "A router advertises a stub network whena subnet does not connect to any OSPF neighbors. Advertising a stub network occurs for the loopback interface and any passive interfaces." 

eth.src is the media access control address (MAC address) of the device which is a unique identifier assigned to network interfaces for communications at the data link layer of a network segment. In terms of STP Bridge system identifier (BID) is a unique identifier composed by priority and MAC address. So depending on the priority(32768 is the default value) which is in configured in increments of 4096 you will have different values showing on the BID. EDIT HERE In regards to your comment concern: 

There are already some useful answers here, but one other reason to insert a default route pointing to the discard interface is to prevent traffic to unreachable destinations (for example traffic for networks which dropped out of the default free zone) from being transported throughout the ISP's network. This can happen if routers within the ISP's network do have a default route pointing to other routers, possibly eachother, which would result into routing loops. 

You're mixing up terminology a bit here. There's no such thing as an IPv4 ASN or IPv6 ASN. There's IP space, which is either IPv4 or IPv6, and there are ASN's. An ASN can announce IPv4 prefixes, IPv6 prefixes, or both. As you concluded, PI space (at least in the RIPE region, which roughly covers EMEA, but I think the same goes for other RIRs) is depleted. This leaves you two choices to obtain your own IP addresses: 

As you can see on the image the device has multiple interfaces. The 1.2Gbps throughput is the total traffic it can process on all ports, not per port. 

Arista switches seem to lack the command, so you would need to install a custom script to send an email (but hey, it's Linux, it's not that hard to install a small python script which allows you to send an email) event-handlers on interface changes are linked to specific interfaces, so if you want to monitor interface changes for all interfaces, you'd need a lot of handlers. 

This won't work the way you describe it. Each connection has its own public IP belonging to your ISPs. You'll need public IP space (typically called PI space - provider indepentent) which you can advertise via BGP to both your ISP's at the same time. The setup you describes doesn't have a shared public address between the two connections and your ISPs won't route eachothers addresses, so what you're describing is a server which is reachable through two networks on two different IP addresses. NAT rules can't solve this for you. 

For each given source and destination, asymmetry can occur on both levels. As a result, it's very hard to answer your question. It may be true (since there could be less networks and hops involved), but it's hard to give an answer which applies to the general case. Also, anything which may seem to be nearby looking from one end may be further away looking from the other end. 

There's a fair chance this answer won't be applicable in your situation, but I feel I have to say it anyway: You can implement IPv6 and obtain more than enough addresses so every service can run on its own address on the ports you want them to run on. Of course, this requires every visitor to have a working IPv6 connection so it will probably not be a real option at this point in time, but it certainly is one of the best ways to solve NAT problem. 

Unless you're talking about the AS-numbers defined in RFC6696 meant for private use (64512 - 65534), all AS-numbers are assigned by RIRs to their LIRs. 

This are just spanning tree packets from your switch. Disable spanning tree on your switch on the interface towards your server if you don't need it and don't want to see these packets. 

This is not a description you can configure in JUNOS, it's a description which type of hardware it is. So you're using a GNS3 image (if that's the correct term, I'm not familiar with GNS3) which emulates a MX10-T. 

No, it's the other way around. TCP creates a virtual circuit, it is not using one: IP is connectionless. Doing error corection and flow control would be possible in the application using UDP, but what would be the point? If you require those, it would make more sense to use a protocol which already provides it, like TCP. 

I'm no video coding expert, but what I assume it the case is that these encoders have dedicated ports for receiving the video stream and dedicated ports for sending the encoded stream. On the first set of ports you connect recording devices (e.g. IP based security cameras), on the second set you connect the network which needs to receive the encoded streams. The encoder sends and receives on all interfaces of course, the ports just have a different function, a bit like the difference between a LAN and a WAN port on a consumer grade network. 

Loadbalancing on F5 can work this way, if you configured it to do so, but without any configuration details it's impossible to tell if that's the case here. In many cases seeing the actual IP address on the backend nodes is preferred, for example when generating visitor statistics or when implementing IP access lists. 

MEDs will only affect inbound traffic, so that wouldn't help you here. The fact that your ISPs do not support communities doesn't affect your outbound routing either. For outbound routing, you would need some sort of policy routing. You could achieve that by doing source based routing on R1, so traffic coming from S2 would be forced to use another ISP as nexthop. However, you'd lose redundance then. Alternatively, you could put S2 in a seperate routing instance on R1, in which routes from ISPA are not available. That way you'd still have outbound paths to the other ISPs. If this is possible in your setup and how you'd actually implement this is hard to tell without any more details (router brands and types, configurations). UPDATE: That route-map wouldn't work, since your ISPs wouldn't announce your S2 prefix to you, so that access-list will never hit. 

There's no guarantee that packets are received in order when using UDP, so yes, you can receive them out of order. Retransmission isn't available in UDP unlike you mentioned, this could be done on application level though. Also, it may very well be possible that routers on the path between two endpoints loadbalance packets over various links, so you can't assume that they use the same path. If you really care about packet ordering, UDP isn't the appropriate protocol. 

It is as you said. The computer with that MAC address will receive the ethernet frame, since on layer 2 it's all good. Then, looking at layer 3, it will discard the IP packet, since the IP address is incorrect.