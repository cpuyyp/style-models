You can do this with the RealVNC server which is installed by default in Raspbian. You simply enable it from the Raspberry Pi Configuration app, and you should see the VNC icon appear in the top right to show it's running. If you click on this icon, go to Options > Troubleshooting and enable "experimental direct capture mode", this will allow you to capture directly-rendered screen content, such as that displayed by omxplayer. 

If you can run PICO-8 without X11 then this may work, since the RealVNC server uses a different method to inject input events (uinput) when X11 isn't running. 

You should also see the VNC icon in the system tray if the server is running. Also, if you are using anything other than the RealVNC Viewer on your Mac, then you will need to change the Authentication setting in the VNC Server options to "VNC password" instead of the default "UNIX password", and set a separate password for VNC. I would recommend installing the RealVNC Viewer if you haven't already, since this supports UNIX password authentication, plus encrypted connections. 

I am unable to any packages because . Unlike the other similarly named questions, I have not been able to get any packages to work due to the same error. apt is still able to list repositories. I have updated, upgraded, rebooted, and repeated after my attempts at fixing sources.list, but nothing has worked. Running 

I would like to create static local IP addresses so I can ssh and network Pis easier. I've found some tutorials online for how to make static IP address such as for setting up a public server. Because I'm only networking Pis across a switch, I don't need the extra work of making them publicly accessible. What is the most minimalist way to create only a locally static IP address on raspbian? What range of addresses can I use? 

It sounds to me like you are now connecting to the vnc service mode server (which shows you what you'd see on a monitor plugged into the pi), whereas before you were connecting to a vnc virtual desktop. You need to put ":1" following the ip address or hostname in vncviewer to connect to the virtual desktop (assuming there's just the one running). For more info on vnc server modes see $URL$ 

Yes, it can be done. For SSH, you will need to find the IP address of the Pi from the Mobile Hotspot settings screen on your phone, and enter this into your SSH client app (e.g. JuiceSSH). Obviously you need to make sure the SSH server is enabled on your Pi (this can be done with raspi-config under Raspbian). You can use the same approach to connect via VNC (e.g. from the RealVNC Viewer app on your phone). Also, if you're using the RealVNC server on Raspbian, then you could use the cloud connection feature, then you would not need to enter any IP addresses in order to connect. The viewer-server connection is negotiated via a cloud service, but your phone will need internet access via mobile data for this to work. Note that the cloud service is only used to setup the connection - the data should be sent directly once it is established. 

The Pi camera board is described as running HD video at 30fps or 0.033spf. I'm using the picamera python module (the only API I could find) and trying to implement the client example. At less than HD resolution, when I profile only the function on a B+, I get ~0.1spf. How do I get a reasonable frame rate at low resolution (let alone the frame rates and resolutions described). In case it matters, the ultimate goal is to stream video frame-by-frame (not h.264) from the Pi. 

I have two Raspberry Pi B+ and one Raspberry Pi 2. I would like to have the two B+ pis stream video to the model 2 pi. This is for a realtime computer vision application, so I need the absolute fastest configuration I can manage. What configuration of hardware/protocols/library should I use? The ethernet seems faster than USB, but because there are multiple Pis, I cannot use ethernet. Some people recommend a serial connection between the GPIOs, but I would think USB would be faster than that. I have also read that I should just write to the /dev/tty* file associated with whatever option I use, but that seems too easy to work and I'm confused when data would then be read and written across the cables. Any help is appreciated. 

The steps that you've taken so far look correct. If you're using RealVNC cloud connectivity, then you'll also need to re-register the cloned device by choosing licensing from the VNC Server menu, and logging into your account again. That should add you a new cloud entry. 

If you had been using VNC without a display connected, it likely that you selected a particular display resolution, as the default resolution that you get without a display is very low. However, your display may not support this resolution. You could try running raspi-config, going to Advanced > Resolution and setting this back to "default", allowing your display to choose a resolution that it supports. 

Login as the pi user, right click the vnc system tray icon and select options, go to the users and permissions page and add your new user there. By default it should allow users that are members of the sudo group (which includes the pi user by default) 

Not necessarily apropos to advocate for this, but there are a lot of Kodi/XBMC addons available at TV Addons. Your mileage may vary, but I've heard positive things about the following addons, available through the process of setting up your Kodi system by installing the addons from there: 

Something to be aware of when it comes to using tools like is that the tool will overwrite many of the configuration files you modified yourself when you first setup the Pi with SSH. The easiest answer to this is to reflash your SD card and start over. You're not so far in (or are you?) that this isn't a viable option. But if you're in too far and reflashing your SD card seems too draconian, you should be able to enter single-user mode and make whatever changes you need to. However, you will need a display, a keyboard and another computer with an SD card reader (which you ostensibly used when you flashed the SD originally). Follow these instructions and you should be able to reverse any changes and get your Pi back. 

If you're using the RealVNC server which comes pre-installed in Raspbian, then you need to enable "experimental direct capture mode" (found under vnc options > troubleshooting) in order to see things like the camera preview. This is because they are drawn directly by the gpu and not part of the X11 desktop that vnc would normally be able to capture. 

You can get the deb packages from here: $URL$ Extract the deb files (there's one for the server and viewer) from the downloaded tar.gz and install with: 

Assuming you're running raspbian, you can simply enable vnc from raspi-config, under interfacing options I believe. This will start you a vnc service mode server, which will let you control the console session. You can't run startx from an ssh login since it's not associated with a vt (virtual terminal). At any rate this isn't the way to get vnc running. What you can do (as an alternative to enabling the service mode server above) is to run the "vncserver" command, which will start you a virtual desktop. 

Ubuntu MATE pi image wont run. I want it to run on a pi 2, but the green light just stays lit. I also tried the imaged sd card on a pi B+ (just to test) and the green blinks 7 times. I imaged the sd cards from the one available on raspberrypi.org with dd. This is far from my first time using so I doubt that's the problem and both pis run rapsbian fine so there's no hardware problem. Any way to get this to work? 

My question was based on some preconceived misconceptions, which I've since clarified. The solution: By a $15 network switch and use ethernet. The switch requires no setup, then you can connect to each device by local IP. You can even add a WAN connection to the switch to provide internet access to all devices on the switch. It is both the fastest and simplest solution.