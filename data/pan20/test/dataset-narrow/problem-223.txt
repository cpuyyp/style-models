You could join the label table multiple times under different aliases specifying in the where clause that entries for the 2nd join be not equal to the 1st. Entries for the 3rd be not equal to the 1st or 2nd etc. e.g. Say we have a table of people 

I only noticed this was for Firebird part way through so sorry if that doesn't work. You could also do: 

I recently got my first taste of the error "Heterogeneous queries require the ANSI_NULLS and ANSI_WARNINGS options to be set for the connection." which I hadn't come across. Nearly every resource I found on this site and elsewhere dealt with this occurring in a stored procedure. My specific scenario is a Vendor supplied app and DB, I can change the DB but not the app. I created a view on the DB to another server (via a linked server) but when I attempted to use this in the app I got the aforementioned error. I used SQL Profiler to prove the app opens its connections with ANSI NULLs and WARNINGS OFF. I used SSMS to prove the link works with the default values there. But unlike an SP I can not set ANSI WARNINGS on a view. I set ANSI WARNINGS on the DB as a test, the app now worked, but I couldn't afford a full regression test of the app so this solution does not work. I also tried many different ways of implementing the linked server including created an ODBC connection on the server and then using that. But it's like the app is explicitly setting ANSI WARNINGS to off. Not sure if matters but the source server is SQL2000 and the remote server was SQL2008R2. 

I am getting failures on insert with the error: Msg 233, Level 16, State 2, Line 1 The column 'ID' in table 'dbo.pre_case' cannot be null. The insert statement is of the form 

Shortly our development team will be moving an existing SQL Server 2008R2 instance into our Production environment. Ahead of this I have been asked to review all the code on it for anything malacious (e.g. wiping their own order history from the sales database). This has come out of the blue and I'm not sure it's particularly physically feasible but I'm willing to give it a good go, at least from the SQL side of things. The question is, where can code exist? My draft list is 

I have some automated backups that i want to disable. but i do not know how to do it. Apparently these are done via Volume Shadow copy Service . Can anyone tell how to get rid of these backups ? 

Is there a way to make automated backups of a DB without having the I/O frozen ? I am using an Amazon EC2 instance . I/O is frozen on database distribution. No user action is required. However, if I/O is not resumed promptly, you could cancel the backup. 

This is of course if you need to import only for 1 time . Otherwise there should be a work around depending on your case . 

I have done backup plan to backup 1 DB . When look in the log i can see that the system has taken backup of all databases (master , reportserver ...etc) . However on the drive where data are backed up , i can see only my DB for which i have done the bakup plan . Questions: 1) why i am seeing in the log that there were many DB backed up . 2) If 1) is true where are these backups ? Any comment will help. 

Shadow backups are taken by VSS backing up all the C: drive lead into baking up the database and then lead into the I/O frozen message seen in the SQL server log. The database backup when it is done normally via maintenance plan, via SQL Management Studio or via user SQL query does not generate I/O frozen message . 

The problem was that i was doing a classic backup using windows server utility (nothing to have with DB backup) for some folder . I was doing backup for only 1 folder in the root of the C:\ drive . But somehow when this backup starts it freezes the I/O on each database, then it resumes the I/O of all databases and finally all DB are backed up . 

You can procceed as follow : 1) Identify the values in col1 for which col2 is not null (sub query ) 2) Run your normal query but do not select these values 

If you can have your file in CSV format, then you will be able to order its columns by opening it with Excel viewer. To covert your file into a CSV format you need to replace the current columns seperator by ; (use Notepad++ with advanced replacement) . Once your files are ordered you can then copy the second file content into the other by using also Excel . Here you will have 1 file having same columns as your table and ordered as your table as well. then what is left is to do : 

So it looks like the database context was set in the 'background'. What would lead to this circumstance? (Of the GUI showing blank) It's a minor mystery that is nagging at me now. 

As I said in the question a lot of resources dealt with this issue but not when it pertained to a view. The solution I found was to 1- create a 2nd DB on my source server. 2- create a view on the 2nd db using the linked server to the remote DB 3- alter the view on the 1st DB to use the view on the 2nd DB 4- alter the 2nd DB to use ANSI WARNINGS ON at a DB level 

One of our developers created a view whereby one of the select columns was wrapped in an RTRIM function. That same column on the underlying table has a non-clustered index on it. Now queries using this view and a where statement on this column are failing to use the index due to the RTRIM. I need the view's output to be consistent as unfortunately this developer is no longer with us and I can't read his code. What are some options for optimisation? I've got one, but I'm hoping there is better. 

Scenario: In production we have the same functional DB at different physical sites. The column order on a table don't match each other so I am writing a script to amend this (a 3rd party application requirement). Action: To do this I copied the table to a test server, made the changes required in the GUI and then used the save to script functionality. The generated script essentially creates a new table with the proper order, copies the data into there, deletes the original table and then renames the new table to the old/proper name. Query: The generated table definition includes in part column definitions such as: 

It is acceptable for the last person aspect of the answer to be fuzzy or loose. i.e. as long as it's someone who went near it sometime vaguely recently that is "OK". 

This should modify your execution plan. If it doesn't help could you post your plan for both this query and your original query (minus the Option line). Actually, eitherway I'd be intrigued to see this data.