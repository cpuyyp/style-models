That will return a blank unless both D5 and E5 are numeric (e.g. time values) You can still use SUM function on the results, blanks will be ignored 

The function returns a 1 for every non-zero value in the array returned by and sums those 1s.....but there's only one non-zero value so the result is (representing the number of different users with sessions open at that time) See screenshot attached 

Edit: If B1:D1 and A9:A11 may not be in the same order then chuff's solution is a good one. If you want to avoid having an extra row then you need to incorporate the VLOOKUP part in the SUMPRODUCT - you can't use VLOOKUP itself because it won't return an array, LOOKUP is possible because it does return an array but problematic because A9:A11 would need to be sorted ascending (and even then you may have problems if some column headers don't have a match). A way round that is to use SUMIF as a "quasi lookup", i.e. with this formula 

confirmed with CTRL+SHIFT+ENTER To add another condition, e.g. assuming status in A and Store Id in B as before but with Sales Reps in column C you can use this version 

which is what you have above ....or you can add another function to avoid "array entry", i.e. in the generic version: 

That uses a technique similar to that described here [there's no filtering here but SUBTOTAL still needs to be used to sum each range generated by OFFSET] That will give you the same results as chuff's solution 

The results of the function are always text values so try adding +0 to the end of the formula to "co-erce" to a date value (and better to refer to a single cell rather than A:A), so in B2 try 

You can usually use for this - I'm not quite clear on the criteria for you but generically you can use this setup 

with wildcards will work alone to count all rows with "Apple" somewhere in the text......but it isn't restricted to visible rows and you can't use in conjunction with your formula. Adjust your formula like this using function 

You are multiplying that array with other arrays that produce either boolean values or (presumably) contain numbers, so when you multiply an array containing values the values act like 1s and the values like zeroes. For example if I multiply two arrays like this: 

For a one-off change rather than TRANSPOSE worksheet function you can use the Transpose option while copying and pasting Copy the original table then choose destination for new table and right click > choose "Paste Special" > Transpose > OK > ESC 

I see you have a VBA solution but it is possible to do this with formulas. Assuming your "x" value is in J2 put this formula in J4 to give the number of iterations that will take you to <= 1 for the first time 

because it offsets each range by 1 it will only give a positive count when you have a run of at least 4 consecutive "x"s in that range. A positive number triggers the conditional formatting 

There are never more than 14 months between instances so you can examine the next 14 first of month dates and take the first one that's a Sunday 

that will work even if there are no "<" symbols in A1 You can nest more SUBSTITUTE functions if you want to remove = or >, e.g. 

function matches the concatenated name columns against your names in and returns either a number (if there's a match) or an error - - if there isn't a match, so applying function to that array gives an array of values which +0 converts to values. then multiplies that array with the C/D division and sums the results, giving the required answer. You can't have any text in the or ranges otherwise you'll get an error 

The result for your formula is the sum of the product of all values in E2:F3000 where the relevant row labels/column headers match A69/D69, multiplied by the relevant row in G2:G3000 

Try using COUNTA to count the entries in L2:AK2 - if the result is zero (i.e. no data in that row) the cell gets formatted =COUNTA(L2:AK2)=0 

Note: the functions listed will accept a named discontiguous range as above.....or you can use the specific cells directly as a union - cell references separated by commas and bracketed together, e.g. 

function only exists in Excel 2010 or later versions This works because the part now returns an "array" of 3 values - one each for 5, 6 and 7 - either the numerical position in the range, or if they don't exist in the range, so match might return this result 

You don't really need all those SECOND/MINUTE/HOUR functions, just use a simple IF function to show blank if E59 < 30 seconds and if not you can multiply by 1440 to give the minutes, and round to get those to the nearest minute, i.e. 

Yes, you are correct, won't return an array so you need another approach. Assume that first column of groups is called and second col is then try this array formula, 

confirmed with and copied across and down. When matches run out you get blanks. Formula assumes Excel 2007 or later - if earlier version you can use COUNTIF instead of IFERROR, i.e. 

extend ranges as required SUMIFS sums one range based on one or more conditions in another range or ranges If you are using Excel 2003 or earlier you can do the same with SUMPRODUCT, i.e. 

What other values might be in the range, can there be numbers which aren't dates? If not then use COUNT function, e.g. =COUNT(E84:H91) Dates in excel are simply formatted numbers - COUNT function counts all numbers 

confirmed with CTRL+SHIFT+ENTER or if they must be in separate cells then this array formula can be used in H2 copied down 

I'm not sure you need to make this so complicated. If your formula is in then can you not just refer directly in the formula to the cell above, e.g. 

allows you to specify more than one condition (in Excel 2007 or later) so you could use this formula 

Probably you have a trailing spaces in your text because as Excellll says it should work otherwise. Try adding in some functions to remove trailing spaces ( will also remove any leading spaces and make any double internal spaces into single spaces.....but I assume that won't be a problem?) 

That should give you a number which represents the date/time serial number (days since 1 Jan 1900), simply format B2 in required date time format, e.g. 

That returns an array of values, if each cell is blank and if it's not. In the formula an array of the relative row numbers is divided by that array - when you divide by that acts as a 1 so you just get the row number, when you divide by FALSE that acts like zero so you get a error. function is set to ignore errors so it finds the smallest row where is not blank ......then returns the actual value for that cell. In cell one - C1 ideally - k = 1 so you get the first non-blank value then ROWS function increments as you copy down so you get each subsequent non-blank value 

That converts E4 to text for use in INDIRECT function but will still update when you drag across/down 

What's your input? If you have any date in A2 this formula will find the last Wednesday of that month 

No need to alter your data, you can use a function to find the last non-zero and get the header like this 

Comparing a single value to a list results in an array of values, not a single result, so to get the answer that way you have to do something with the resultant array, better to use like this: 

The first one produces a formatted date - the second one (although it looks the same) produces a text string that looks like a date. You don't really need an extra cell, though - you could simply apply the custom format to your original date in E4 

Your existing formula won't always work, e.g. if A3 is a Thursday at 10:00 and H3 is the following day at 09:00 shouldn't the result be 

I recommend teylyn's answer - ideally you would have the dates in ascending order (oldest at the top) and that makes it simple to use a lookup as she suggests, but with dates in any order you can use an "array formula" like this: 

Assumes there are no gaps in the ranges, i.e. the maximum for each category is effectively assumed to be immediately beow the next minimum 

assuming later time in B2 then format C2 as hh:mm:ss you should get the correct difference including seconds - I assume both times are on the same day? 

It add's/subtracts the times as required but adds back the latest time (thus ignoring it) when there is an odd number of times inserted. 

If your matrix is in A1:D10 then you can create a "rounded matrix" adjacent to that, e.g. in G1 use this formula 

If all the product codes are 5 characters like your example then you could use this formula in B1 copied across 

That will adjust automatically for each row (you don't need here) Unless H1 is a number that satisfies the conditions you don't need to exclude H1, if it is then change the "applies to" range as Raystafarian suggests 

Assuming that you only have 1 or 2 digit numbers as per your examples then this "array formula" will sum all the "S" numbers from D25 

confirmed with CTRL+SHIFT+ENTER and copied across and down See example here Note that I used named ranges but you can use cell reference instead if required 

Note: this works assuming that no period is longer than 99 working days and where average working days is < 32 days 

Because I used a $ in the J7 value that will "fix" the row at 7 while the other rows will increment. You don't see that explicitly but that's the way it works internally. Note: you don't need an IF statement, just a "test" that results in or 

If you have a date in A2 and want to get the next IMM date (based on your definition of IMM dates as the third Wednesdays of March, June, September and December) then use this formula 

You said initially you wanted to exclude holidays, but if A1 is "A" and the next Monday is a holiday, what day should the delivery be then? If the next working day after that Monday (whatever the day of week) then you can incorporate the above into WORKDAY function like this 

confirmed with CTRL+SHIFT+ENTER I know you said there was only one match but if there are more this will still "work" in that it will find the first match. It's also robust enough so that you can add rows above the data and it still functions 

That formula should give you the same results as the calculator here Note: you can remove the SUM function if weights sum to 1 

function with wildcards doesn't work with numbers. You can use this formula to get the required result (which will work with text, numbers or a mix) 

Excel only allows up to significant digits so a 22-digit number can only be represented in Excel as a text value, hence you can't use number formatting. To get the required result in another cell you can use function to add a space at character 7, i.e.