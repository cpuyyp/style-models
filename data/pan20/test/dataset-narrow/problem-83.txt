In practice, a host probably doesn't decrement the TTL, but what an actual host or OS does is off-topic here. According to RFC 791, Internet Protocol, the IPv4 module in the host network stack should decrement the TTL, too, as it processes the IPv4 header. This is to protect upper-layer protocols from old data: 

One of the three parts to PPP is the Network Control Protocol. PPP allows different NCPs to be used, depending on which network-layer protocol needs to be encapsulated and transported. Cisco has a document which explains more about PPP: Point-to-Point Protocol 

A Mobile Node is the host which is roaming; a Mobile Node Home Agent is a router of the Mobile Node's home network which keeps track of the Mobile Node's current location. When traffic is sent to the Mobile Nodes Home Address, the Mobile Home Agent forwards that traffic, via a tunnel, to the Mobile Node at it's current location. It could be compared to you going to visit a relative and forwarding your home phone to Grandma's home phone. Someone who calls your home number will reach you at Grandma's house, but the caller has no idea that you aren't at home. 

The Internet is really just a bunch of networks connected together. Consumers and businesses connect to ISPs as customers. ISPs connect to other ISPs, either as customers of larger ISPs, or as peers at Internet Exchange Points (IXPs). At IXPs, ISPs can often peer with multiple other ISPs and CDNs, reducing costs by having a single location for connections, instead of running connections to multiple places in order to connect to multiple peers. 

The number of hops is preserved, even if all the hops in the AS_PATH are all AS23456. Path prepending with the same AS number prepended is used to influence traffic all the time. BGP will still send the traffic toward the neighbor with preferred route based on how it was configured, and, normally, the number of AS hops will determine the direction to send the traffic. It doesn't matter that every hop is the same AS number, what matters is the number of hops. 

I think you want to get the IOS license with the zone-based firewall in the router. You can set up different security zones, and prevent communications between the zones. Also, the Internet connection should not use a VLAN, it should be a routed link. 

The other answers are correct. To find a subnet address of any IP address, mask the given address with the mask. This means that any subnet with a /27 (32-bit address - 27-bit mask = 5 addreess bits, 2^5=32) must start at a multiple of 32. The 144 address is not a multiple of 32. In any such question, it helps to do it in binary. Just AND the address with the mask to get the subnet. 

The OUI (Organizationally Unique Identifier) for a MAC address is assigned by the IEEE. The rest of the MAC address is assigned by the company to which the OUI is assigned, and it is completely up to the OUI owner for how to assign them. In your example, the OUI is , assigned to Cisco Systems. The rest of the MAC addresses are assigned by Cisco in whatever fashion Cisco wants to assign them. 

Routers route between networks. You don't route from one network to the same network: This is probably your problem: 

The routing protocol algorithms are identical for either IPv4 or IPv6, so convergence should be the same. There may be differences in an implementation on some router software, but that would be an implementation-specific difference. For example, IPv6 as the newer protocol may have a better, newer, faster implementation of the RIP algorithm on a particular router model. 

Layer-3 devices (routers, PCs, etc.) are supposed to decrease the TTL on IPv4 packets as the network stack processes the packet (see this answer for a full explanation). Most PC OSes do not actually do this, but routers do. The IPv4 TTL is really supposed to reflect the processing time. On the other hand, layer-2 switches are transparent devices that only look at the frame, which encapsulates the packet. The switches do not know or care about anything in the packet. This lets them carry any type of layer-3 protocol (IPv4, IPX, IPv6, AppleTalk, etc.), even at the same time. You would not, for example, want to replace all your switches when adding or changing to IPv6, which has a different IP header than IPv4. Your example of a loopback is like a host on a different network, and your packet must be routed to a different network, so the TTL will be decremented. When it reaches , the packet will be discarded. Basically, any packet with a TTL of reaching a router will be dropped, unless the packet is for the router interface where it entered the router. On the other hand, if the switch is using an SVI, the SVI will be on the the same LAN as the source, and the frame is switched at layer-2, so the TTL is never decremented. 

The proper way to configure your network is to make the layer-3 switch the gateway for both VLANs, and create a routed link from the layer-3 switch to the WAN router. The layer-3 switch should be the LAN router, separate from the WAN router. 

What you need to understand is that the network statement is to determine which interface(s) will participate in OSPF, not to advertise the prefix of the network statement. If you have multiple interfaces within an IP address range, for a specific area, you can include them with a single network statement using a wildcard mask that encompasses all the desired interfaces. By using the wildcard mask, you can include an individual interface for an area. One method for including all the interfaces in a single area is to use the all-encompassing network statement: 

This question is really broad, and much depends on the products used, and the specific implementation. In general, a VPN is a tunnel, which looks like a point-to-point link. A network-to-network VPN can certainly be made to look like the networks are connected with a simple point-to-point cable. Also, a host-to-network VPN can be made to look like the host is a host on the network where it is connected via VPN. A tunnel, such a a VPN, merely encapsulates packets inside other packets, hiding the complexity of the actual path from the endpoint networks/devices. The inner packets are usually addressed as if they were on the target network. Addressing can be handled in a few ways, and security depends on the security applied. NAT could be applied to packets leaving and/or coming into a VPN. Traffic coming into a network via VPN may be restricted by various security features on the target VPN. 

Remember that Network Engineering is for questions about business-grade equipment, which should gracefully handle this situation, but consumer-grade devices (off-topic here) may completely fail. 

A tunnel is really just encapsulation of packets within other packets. The outer packets still need to be able to be routed normally to the address of the tunnel source (different than the tunnel address itself. The packets carried inside the outer packets see the tunnel as a single link, but the outer packets may need to be routed over many hops, especially if routed over the public Internet (which requires public addresses for the outer packets). The tunnel source must be able to send traffic that gets routed to the other tunnel source normally. If you have a tunnel source inside a private network, then you cannot use that over the public Internet because you cannot route packets with private addresses over the public Internet. That is why the tunnel source addresses are usually the public WAN addresses of sites. If both your tunnel endpoints are within the same private network, then you could put the tunnel endpoints on any of the devices, as long as the tunnel source can normally reach each other. Over a tunnel, you can use routing protocols to let the router on the other end of the tunnel know about any networks at the site, so it doesn't really matter how many networks are on each side of the tunnel. A tunnel is really just like connecting the two sites with a cable because it sets up a single link. There are different tunnel types, and some cannot carry broadcast/multicast traffic, so some routing protocols or multicast routing may not work over that tunnel type. You could use a GRE tunnel inside that type of tunnel to overcome this, or use a different tunnel type that supports the features you need to support. Another possibility is to use static routes between the sites, but that doesn't scale, and it is not dynamic the way routing protocols are. You could also have a problem if the private addressing at each of the two sites is using the same private addressing ranges. You may need to use NAT to overcome that.