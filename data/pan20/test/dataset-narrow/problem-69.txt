The reason why the test was successful is because I was specifying the RADIUS group name in the test, like so: 

You'll want to find some devices or software that are designed to establish VPN connections and read the documentation for how to set it up. Many networks use the network firewall as a VPN endpoint. You purchase and configure firewalls for each of your locations and configure VPNs between the locations. Product recommendations are off-topic here, so you'll have to select one or more VPN products using some other resource. Once you have them, if you have questions about how to configure the VPNs, that is on-topic here. 

The 5505 doesn't have any routing features beyond what the SonicWALL has (and vice versa), so if you need a router now, you'll almost certainly need a router with the 5505. At the same time, if you don't have a router now, you won't need to add one. 

Using the keyword at the end instead of the explicit name of the RADIUS group defined elsewhere means the AAA system does not correctly use that RADIUS group. The correct AAA configuration command is this: 

In short, "Yes". A PC connected to a 1 Gbps full-duplex port can recieve up to 1 Gbps from the switch at the same time it is sending up to 1 Gbps to the switch. Sometimes network card drivers or other problems on the PC (or less likely, the switch) can prevent actually acheiving these numbers, but that is what full-duplex operation is meant to allow. 

192.168.0.0/16 is the only private address space in 192.0.0.0/8. 192.0.0.0/24 is used by IANA, 192.0.2.0/24 is reserved for documentation and examples, and 192.88.99.0/24 is for 6to4 anycast. See: $URL$ $URL$ 

The first two letters, FP, indicate 740 Watts of available PoE power, as opposed to LP which indicates 370 Watts of PoE power. Note that the F versus L letter only applies to 48-port PoE switches, since 370 Watts is full power for a 24 port PoE switch, and there are no 740 Watt nor 185 Watt 24 port models. Models without PoE are indicated with a T after the number of ports. The third letter, S, indicates 4 one gigabit SFP ports, as opposed to D which indicates 2 ten gigabit SFP+ ports or 2 one gigabit SFP ports. Here's Cisco's list of part numbers for the 2960 line. 

The black and yellow pair should be terminated on the pins just to the right of where the phone company terminated the pair. You can look at the pair above the pair you want and see someone has terminated something right above where you want to terminate. That's called a 66 block and it has 50 rows of terminals by four columns. Each row in the left two columns are connected and each row in the right two columns is connected, but the left and right half are not connected. So you need to go to the second column from the left and the third and fourth rows. Now it sort of matters which one you terminate on the third row and which one you terminate on the fourth, but for your situation it's not worth worrying about. 

Just a reminder: The OSI network model is only a model. It was not used to define any of the most common network technologies or protocols. The OSI protocols it was used for are almost entirely unused. TCP/IP was developed using a different model that can be related to the OSI model, but even the TCP/IP model is still just a model. These models are certainly very useful in talking about and understanding how networking works, but many technologies do not fit neatly into any one layer of the OSI model. The most classic example of a circuit-switched network is the North American ISDN network for telephony (and of course its analog predecessor, often called "POTS" for "plain old telephone service"). Probably the best layer to think of for ISDN is layer 1. That being said, the generic concept of circuit switching is not layer specific. It would make little sense for a circuit switched protocol to be encapsulated (in layer terms, encapsulation is how one layer rides on top of another layer) in a packet switched protocol, but it is possible for circuit switched protocols to ride on top of other circuit switched protocols, which would be modeled as more the one layer being circuit switched. The same goes for packet switching. Again, there are some very famous packet switched protocols, the most famous being TCP/IP and Ethernet. The suite that comprises TCP/IP does not map to a single layer of the OSI model, and is most commonly modeled in layers 3 and 4, while Ethernet is considered a layer 2 protocol. Since those are not the only packet switched protocols, there is no single answer to the question of what network layer packet switching would be done on. "Virtual circuit" is a more general term typically used to describe a dedicated connection encapsulated inside a (usually packet) switched protocol. A virtual circuit is meant to behave to the user as if it is either circuit switched or not switched at all (point to point). This is another case where the OSI model does not yield one simple answer. From the provider's standpoint, a virtual circuit would likely be modeled best as a layer 3 or 4 protocol, or at least be encapsulated inside a layer 2 or 3 protocol. Most virtual circuits are meant to operate as layer 1 connections for the end users. This is analogous to a VPN, where one way to look at it is a full OSI stack contained inside a second partial (or possibly full) OSI stack. 

I successfully configured a Catalyst 3850 to use a Windows Server 2008 R2 NPS server for RADIUS. I mostly replicated that configuration on a Catalyst 4507 (adjusted for platform differences) and when I run on the 4507, the test succeeds. When I try to actually log on to the 4507 with an account that needs RADIUS to authenticate, it fails. It looks like the failure on logon is a timeout contacting the RADIUS server, but I can't figure out why the authentication request would work differently between the test and the actual logon. Here's some config, test, and output: Config Version: 

This article has a decent breakdown of what a Catalyst 3750 will use its CPU for. Notice the CPU doesn't normally process any "user" frames, it mainly deals with management tasks, like STP and routing tables. At least one exception is mentioned (emphasis mine): 

Source: Earlier today I took an extra 3560, put an extra computer on each of two ports, and started making configuration changes while copying files back and forth between the two computers, watching the estimated copy rate, and doing some math to confirm the numbers match up. 

Pick up the line that is currently working and run ANI (Automatic Number Identification) on it. At the time of this writing, you can do ANI in North America by calling 1-800-444-4444 from the line you want to know the number of. It sounds like you are going to find that the number you get from ANI is not the same as the number you think you should have on this line. Let's assume that is the case. Then: Call AT&T (assuming you are paying them for the line in question) and ask them to do a "tag and locate" in the demarc for the line you want to have working. They should send out a tech to basically hang a little tag in the demarc on the pair (as Ron commented, jut one pair for a POTS line) that has the line on it. Then you should be cross-connect that pair up to your suite if you have a 66 tool and the will and knowledge to use it. 

The main thing that makes things "appear on the same LAN" are broadcast messages of one type or another (depending on the type of LAN and what exactly we mean by "appear on"). Specifically, in the case of Ethernet (as an example), all nodes that can receive and respond to data-link layer broadcast messages (e.g., ARP) will appear to be on the local LAN (more properly, the same broadcast domain). In order to create the illusion of a node being on the local LAN, all a device or service has to do is handle two-way transmission of link-layer broadcast messages and responses. So two broadcast domains that are joined by a VPN connection using devices that accept and encapsulate and de-encapsulate all broadcasts and responses will effectively become one broadcast domain. Of course the network layer addressing will have to arranged accordingly. 

Looks like the most likely culprit is gratuitous ARP and that's how Wireshark reports the IP. Look at the end of the examples section on this page: $URL$ 

The logs on the NPS servers are pretty difficult to read, but I'm pretty sure they show success when I log on from the working switch, success when I test from the 4507, and no connection at all when I attempt to log on to the 4507. (Mostly) Complete config: 

No, that does not accurately reflect how tagged and untagged traffic works. First off, 802.1q VLAN tagging is done on layer 2 in Ethernet frames, so IP addresses have no bearing on the behavior of tagged or untagged frames. Second, tagging is not a system for allowing or denying traffic to or from specific VLANs. A frame should not generally be rejected simply because it has or does not have a tag. VLAN tags are only a way for frame to specify what VLAN it is intended for. That's pretty much it (there are other things but let's get the basics down for now). For an interface that does not process VLAN tags (or has the processing of tags disabled), all frames coming into that interface are considered to be on the same VLAN. For devices that do not understand VLANs, frames coming into any interfaces are just on the one network (VLAN) that the device sees. For interfaces that do process VLAN tags, the tag tells the interface what VLAN the frame is for. Most of the time, when an interface is configured to process VLAN tags, one of the VLANs available on that interface is configured to be the destination for any frames that do not have a tag. That VLAN is often called the "untagged VLAN", "default VLAN", or "native VLAN". Untagged packets arriving at an interface with a default VLAN configured will be accepted and passed on to that VLAN. Not having a tag does not necessarily result in the frame being rejected or dropped. Sometimes for security purposes, there will be no default VLAN for an interface, or untagged packets will be explicitly dropped. Also, VLANs are not entirely tagged or untagged. Interfaces are configured to use tags on all or all but one of the VLANs available on that interface, but which VLAN frames are tagged can vary from interface to interface. Suppose you have two VLANs, VLAN 10 and VLAN 20, one switch that supports tagging, one firewall that supports tagging, and two computers that do not support tagging. On the switch, you can configure port 1 to be on VLAN 10 only with VLAN 10 as the default VLAN, port 2 to be on VLAN 20 only with VLAN 20 to be the default vlan, and port 3 to be on both VLAN 10 and 20 with VLAN 10 as the default VLAN and 802.1q tagging configured for VLAN 20 on port 3. Then you could configure the firewall to have two virtual interfaces on its "inside" port. One virtual interface could be configured untagged and on VLAN 10, and the other virtual interface tagged for VLAN 20. Plug computer A into port 1 and computer B into port 2. Now when computer A sends a frame to the switch, the switch accepts it on port 1 and therefore knows it's for VLAN 10 and sends it out of port 3 without a VLAN tag. The firewall gets the frame on its "inside" port and since it has no tag, assumes it's for VLAN 10 and processes it using the VLAN 10 virtual interface. When computer B sends a frame to the switch, the switch accepts it on port 2 and knows it's for VLAN 20 and sends it out of port 3 with a VLAN tag added to it for VLAN 20. The firewall gets the frame, sees the tag and knows the frame is for VLAN 20 and therefore processes the frame using the VLAN 20 virtual interface. Hopefully that clears it up a little bit. 

I'm going to say "No" because there are too many other factors that could affect the overall performance. Typically when you start putting a lot of devices on an Ethernet switch, it's actually the backplane speed that becomes an important factor. That measures the maximum total data that can be going through the switch. If you have several different servers and clients, then each one can take a piece of that backplane up to the maximum link speed of the slowest link, so the more links you have the more hit you can put on the backplane. With just one server and lots of clients, usually you want to maximize the speed of the link the server has to the switch. Rarely are clients connected on too slow a link. Second question: 

If both sides indicate that there is a security association established, then it's like the encryption is working and there is some other problem. One thing to check out is what is the default gateway for the machines that are on the LAN and do they have a way to route packets to 192.168.1.0/24. 

Not related to the diagram itself: I find the IP information confusing, like greyaxe90. A 26-bit subnet mask is two bits longer than 255.255.255.0. Did you mean 172.16.0.0/16 and then each of the other ranges would be 172.16.x.0/24? (A network address would not end with a 1 for the last octet with those subnet masks, BTW) There are a lot of unanswered questions in what you have there. How is routing being done? What IP addresses are assigned to the router interfaces? What address(es) (if any) will be assigned to the switch? One more thought: Even though he's a friend, you should still do all the paperwork for your business relationship with him. Definitely make monthly invoices for your work, unless he will be issuing a 1099 (or W-2) for you at the end of year. If you're not a full employee (W-2), keep track of all the time you work and what you do, even the work you don't charge for (if any). You might want to write a contract just in case. Totally outside of the realm of this StackExchange but having been down that road I couldn't not write something about it. 

If you're not sure about doing your own cross-connects or any part of this doesn't make sense to you, then I highly recommend you ask AT&T or hire a third-party wiring contractor to "extend the demarc" into your suite for this line. One thing I've done in the past is estimated how long it will take me to cross-connect a line after a tag & locate, multiplied that by my salary hourly equivalent, and if that cost is higher than getting the provider to extend the demarc, I just ask them to do it and bill us. 

I would either eliminate VLAN 1 if you can, or let VLAN 1 just be for cisco and networking traffic and put all other traffic on other VLANs. Also I would make a VLAN just to be the native VLAN on trunks between switches or have no native VLAN on inter-switch links. And make a separate VLAN for servers and ideally one more for management. See: $URL$ 

Adjust the line rate, if necessary () Set the bandwidth limit, if necessary (, the last argument is the percent of the line rate to limit the bandwidth to) Enter the shaping weight for queue 2 on the interface ( where either the bandwidth limit (if applied) or the line rate (if no limit) divided by is the bandwidth the traffic is shaped to) 

Short answer: Yes, this is all it takes to do egress shaping. Of course, mls qos must be entered, but once that is configured, egress shaping on a port is as simple as: 

If your existing WAN routers have extra interfaces then you can connect them to each other and configure either static routes or a routing protocol so those networks can communicate with each other. If the existing WAN routers do not have any additional capacity, then either an additional router with the capability to connect to all of the networks or maybe even better a layer 3 switch that can connect to all the networks and route between them should do it. If you configured all the existing WAN routers yourself then you can probably do it no problem, you will just want to update the routing tables on the existing WAN routers to have routes to each of the other networks, once you have things all connected.