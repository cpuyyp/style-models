Yes, it is possible to use a Raspberry Pi this way. One example: pool thermometer project. Btw: you could attach a temperature sensor like DS18B20 directly to the RPi, but this is off-topic. 

Yes: for many reasons (esp. for security and convenience) it's highly recommended to use SSH keys instead of clear text passwords. There are many guides covering this topic and I'd like to recommend these two: 

To view the text file you could use or . Example: . Of course this works only if the file is readable for your user account. For details please read the manpage: . To edit a file you can choose between many editors. I recommend to start with . A good read: Raspberry Pi Documentation - Text editors. To learn more command line basics I recommend the eBook The MagPi Essentials - Conquer The Command Line (you can download it for free). 

Temperature warning is conrolled by the Raspberry Pi firmware. If the temperature of the SoC is between 80C and 85C, you will see the "Over temperature warning". If the temperature of the SoC is over 85C, the ARM core(s) and the GPU will be throttled back in an attempt to reduce the core temperature. source: Raspberry Pi Documentation, Firmware warning icons Noteworthy: 

Good news in case you are looking for the "arp scanning and fingerprinting tool": it's in the Raspbian repository and should help you. If you don't know the correct or complete name of a package you can search for it: 

If you enable mod_ssl by you'll find a new configuration file at which contains the default configuration for HTTPS (port 443): 

To "Let Munin croak alarm" many other ways are possible (like syslog alert, external scripts). For details please read the comprehensive documentation. The Nodes Each device you want to monitor is a Node. To install: Give each Node a unique name and grant the Master access to this Node: 

You could use "Munin" with Raspbian to monitor your RPis. You need only one "Munin Master" and on each device you want to monitor, the "Munin Node" software. "Munin" is very flexible and comes with numerous plugins. But yet the setup process with Raspbian is fast and simple if you stick to the defaults. For the complete architecture please take a look at this diagram. A comprehensive documentation is available: Welcome to the Munin Guide. The Master The Master will pull the data from the Nodes and create the graphics, make them accessible via web browser (in companion with a web server) and can alert you if a defined value got hit (i.e. "if cpu temperature > 80°C then email to hostmaster"). To install: Connect Master and Node On the Master you need to add a so called "Host Tree" for each Node: 

56,4°C is nothing I would worry about, this is not a threat to your RPi. The firmware will show you a temperature warning starting at 80°C and "if the temperature of the SoC is over 85C, the [...] ARM core(s) and the GPU will be throttled back in an attempt to reduce the core temperature" (source: Firmware warning icons - Raspberry Pi Documentation). It's pretty self-regulatory. The central problem is that your RPi "is placed in a wardrobe where there’s no way the hot air can escape". This restricts your options plainly, because no heatsink or fan can lead the heat away without sufficient airflow. A large integrated heat spreader (IHS) could help: "a spreader is meant to redistribute heat, not to remove it" (source: Computer cooling - Wikipedia). But I think it's unlikely to find one that fits. By experience: heatsinks can reduce the average temperature by 5 to 10°C. They are not very effective. If your RPi has heavy load, I would recommend a fan, but based on your screenshots your CPU is 77% idle and the "load avg" is very low (zero point something). Maybe better code can reduce load/heat, but your system status looks fine to me. Your SoC has only around 60°C, so I would not recommend to invest time on a sideshow like code review and software optimisation. (Side note: to monitor your RPi you can use Munin.) You've written in a comment: "I try to avoid a fan because the system is installed in my room, where I sleep and work, the noise would drive me crazy." There are cheap and small 5 Volt fans available. You can operate it on 3,3 Volt, which reduces speed (a bit) and noise (much). I'd say it's nearly noiseless (this may vary from fan to fan and is subjective) and a fan does a much better job in comparison to heatsinks. The combination of heatsinks and fan works very well in general. I recommend to move the RPi to a better suited location. Maybe you can put it on top of your wardrobe or attach it to the rear using Velcro tape. Then your RPi should have sufficient airflow and you don't risk to burn down the house. Edit: I've just found this video showing a very effective heatsink solution: Raspberry Pi 3: Extreme Passive Cooling. Impressive results! 

For more details on each step please read the above mentioned guides, the manpages or drop me a comment. 

Addition: If you are looking for a more secure solution, please read Stack Overflow - Running a Python script from PHP. 

generate on your PC a keypair with (optional, recommended in most cases but not wanted in your use-case: protect the key with a strong passphrase) copy your public key to the RPi with login using the key (i.e. ) and make sure it's working on the RPi edit and set , then restart ssh 

Your SD card is too slow with 5MB/s write speed for this use case. I recommend to get a Class 3 (U3) SD card (or better). Or you could store the files on an external drive (HDD/SSD with USB or NAS). 

By default you'll find this line (do not remove/overwrite it): . Just add or, if you want passwordless root access, add . provides basic sanity checks, parses the sudoers file after your edit and will not save your changes if there is a syntax error. I'd not recommended to use other tools like nano for this job. Reboot is not required, but for security reasons only a sudoer user can make these changes. 

I've tested them today (2018-05-02) and confirm both are valid for Raspbian Stretch, too. The process is, generalised speaking, as follows: 

There is no reliable and user-friendly way to "shift" from an already installed "Raspbian Stretch with desktop" to "Raspbian Stretch Lite". In theory you need to find all different packages and replace respectively remove them. But in practice this is very time-consuming. To get the lite version the most sensible way is to install the correct image. Addition: Removing the GUI will not transform an installation of "Raspbian Stretch with desktop" into "Raspbian Stretch Lite". There are a lot more differences between both versions. For further details about the differences please see: