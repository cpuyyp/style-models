-- Answer completely changed: First, I look at these two commands to get a feel for what it is doing: 

It then took over that terminal window with error messages. Ignore them, minimize the terminal window and open another. This time the cgps -s command worked properly. You can end it with Ctrl-C There is also an X-11 version that looks much better, and is run by this command: 

I have a handful of Raspberry Pi 3B systems and one of them is doing something odd. It is working fine but the red power light is blinking. It is linked by serial to an Arduino Nano (to read voltages and temperature and humidity, and to program via the Arduino IDE), and the Nano has a red light that is flashing in unison. All of these systems are programmed and wired very similarly. Almost identically. It isn't causing any problem that I can detect. But my question is: Why is it flashing like this? Can it be stopped? --UPDATE: Based on comments and the wisdom of the community it was determined that the light flashes (or may refuse to come on) for only one reason: low voltage. Turned out the power cable was the problem. It was one that had a power switch in it. Swapping it out to a straight-through cable without a switch ended up solving the problem. 

I'd suggest a USB to LAN adapter (very cheap on eBay) and set static IP addresses on both devices. Or the hotspot method mentioned above. Or - use a smartphone with hotspot, Fing (to scan for the R-Pi IP and scan running services) and JuiceSSH (for the SSH bit) 

I'm trying to configure the DNS settings of a Fritz!box 3490 so that the host names are revealed in Pihole. 

Keep it simple and prove your project is worth the effort of a UPS. Just add a momentary switch to short a couple of GPIOs that triggers a shutdown. The Pi will power up when the car is started next time. Be wary your supply is only delivered after the engine has started, to prevent a dip during the ignition process. Create a script: 

For real-time capture you can also combine these options (the filter option can also be specified in the UI so you could omit it from the command if you'd like to): 

In order to test whether a cron job has run, check your syslog. On Arch Linux with cronie, this can be done with . s daemon is called . From its manual page: 

If everything went well, you should now have a file (e.g. ). Cross-compilation If you want to cross-compile the module, you will need a suitable toolchain. By suitable, I mean that you have to use exactly the same toolchain as was used for building the kernel. A discrepancy between the toolchain used for the kernel and module may lead to the most non-obvious errors at runtime. Getting this toolchain is out of the scope of this answer. See $URL$ for some more details. I built one a few months ago, see $URL$ for instructions and a tarball. (In the following section, replace by .) First, you need to set-up your build environment (adjust the prefix to something suitable for your toolchain): 

Install xautomation. Add kiosk.sh to the autostart file and have it launch chromium-browser to a specific page, login and go full screen. Examples of key pushes are included. 

Replace the SD card. Always have a spare with a known working OS. They aren't expensive and it doesn't have to be large or with a fast read/write speed (class 4 or 6 is fine to test) 

Force the screen to stay on: From an SSH session in PuttySSH or a terminal session on the Raspberry Pi itself: 

$URL$ the IR modules are very cheap on eBay and could be powered either from the R-Pi or a standalone battery. 

Then select Interfaces > SSH Enable SSH and reboot. Use a LAN scanner on your phone (Fing) to locate the IP and check the services that are running. 

A display filter can be used to limit the output of the data (replace by for textual output instead of a GUI): 

No, the Rasperry Pi has a very limited processor. Instead of virtualizing another Linux guest, consider directly installing CUPS. 

The deprecated used to store profiles. The successor of is . In order to setup a wireless network, install using . Next, you have to create a network profile. contains some examples. Let's assume you want to setup a WPA2-PSK network. Simply copy over the example file and start editing: 

These question marks are the bytes (hexadecimal) according to the hardcopy I made using Ctrl + A, H and according to the screen log (). Observe that only the first Password line has the question mark, subsequent password prompts do not have that byte. How can I stop these question marks from appearing? Do I need to change the tty settings or specify other parameters? The getty process that is started by systemd has the following command: 

Not quite sure what you are trying to achieve so here is a script that uses pull with explanations, maybe it'll help. 

It's fine. I've done it on loads. There is nothing it fouls. Don't go too large with the bolt head. I opened mine to 3.8mm. Old post about opening up the holes 

Now we have xte, which can simulate the movement of the mouse and keyboard keypress Examples of xte usage Move the cursor to the point x = 10 and y = 20 on the screen grid 

Set up a pihole and don't use either of the ISP DNS servers, while blocking ads, malware and telemetry. This can then also be used to protect other devices in your network. 

This creates a a temporary link. It will be lost when you reboot. For persistent shares, append a line to the /etc/fstab file in this format: 

The accepted answer is missing the -i in the ssh-copy-id command. Here is the procedure in its simplest form: First, generate a public key that can be shared with the other computer. 

The only way to get to a real answer is to read relevant docs, like working on a PhD paper. Here is one place to start: $URL$ Here is another which is much more specific: $URL$ This would not be a "my-first-project" idea. I would suggest you connect with the CubeSat folks here: $URL$ 

Connect a wire to pin 11 and a wire to a Gnd pin. I'm not sure how well Kodi plays with GPIO switches so it may have to be within Raspbian. 

There is usually a small icon that appears in the top right corner for overheating (and another for under-voltage) 

This is presuming the LCD is attached by DSI ribbon cable. That should also rotate the touch coordinates too. 1 = 90° 2 = 180° 3 = 270° $URL$ 

Fault with the image flashed to the SD card or the SD card is bad. Format the SD (using SD Formatter) and try again, Check the SD is the size it is supposed to be using F3 in Linux to test maximum write size before errors. Check the integrity of the downloaded ISO/IMG file. 

You can get the | (pipe) symbol using the Shift + \ shortcut. The Shift can be found on the left side of your keyboard, on the second row from bottom. The \ (backslash) key can usually be found above the Enter key (on the fourth row from bottom). 

Edit and as needed. Note the permissions, you do not want to leak your wireless passphrase to the world! Proceed with testing: 

The difference between Linux 3.6.11 and 3.6.11+ is that has additional commits on top of 3.6.11 (the tag). If you want to compile the full kernel image and modules, see $URL$ However, it seems that you want to compile a single kernel module instead (a driver for your wireless USB stick?). In that case, you can save a lot of time, bytes and CPU time by compiling only the module you need. Requirements 

Use the package piclone. It will copy the current running system to SD which can then be backed up to your PC using win32diskimager. Hint: remove as much stuff that you don't use in the running image as possible to get the backup file size small. Use as small an SD that you can to keep your back up files small, also reducing image read and write in the future. Hint 2: expand the partition on any backup SD cards as this isn't automatic. 

Use the package piclone, it's installed by default on the full Raspbian image. Great way to build, tweak, clean up and backup an installation. A 16GB SD card with Raspbian can be striped to less than 8GB and then written to an 8GB SD card. I've got images down to 4GB and used a 4GB card to receive the backup clone. The card can then be read to an IMG file on a PC using Win32diskimager. 

Then to save a TCP stream, right-click on a packet and pick "Follow TCP stream". In the new window, you have the option to save the captured data. 

If you would like to learn more about a command, execute the shell command , for example to learn more about the option. For information about the constructs and , read the manual page of . The command sends messages to the syslog, so you should have a syslog daemon running. On Debian-like systems, you can probably find your logs in . 

If you have wireshark installed, then an alternative command that produces a capture file in a newer format: 

I would use because it is small (self + dependencies). You can specify a capture filter that restricts the capture, for example (assuming interface ):