Port mirroring is generally not a router/firewall (OSI Layer-3) function, it is a bridge/switch (OSI Layer-2) function, where all the layer-2 frames for an interface, group of interfaces, or VLAN are also sent to a designated bridge/switch mirror interface. The host on the bridge/switch mirror interface receiving the frames must have its interface configured to allow all frames (promiscuous, monitor mode, etc.), regardless of the layer-2 destination address (regularly configured NICs will drop frames not addressed to them). The host will typically not be able to use its interface for normal network communication, so it usually also has a different, regular interface connected to the network. The bridge/switch interface to which the frames are mirrored is still a normal bridge/switch interface, and it can easily be oversubscribed by sending more traffic to it than it can handle. For example, on a 48-port switch with 1 Gbps interfaces, there could easily be 10 Gbps of traffic, and sending all the frames to a mirror 1 Gbps interface will cause you to lose 90% of the frames you want to capture. This can be exacerbated by capturing the frames from multiple switches to a VLAN for mirroring. The target host receiving the frames must run software that ignores all the headers, and it copies everything to whatever process is uses for analysis. 

As I wrote in my comment, your thinking that the is backwards is because you are not looking at it from the perspective of the switch instead of the servers. The most likely cause of a large number is that you are overrunning the output queue. Cisco has many documents on troubleshooting interface errors, e.g. Troubleshooting Switch Port and Interface Problems: 

I don't think you are going to find such a solution. Routing is decided on a hop-by-hop basis, and each router is independent of other routers, each maintaining its own tables. One way to get around the problem is to use loopbacks with public addresses, and NAT on the loopback addresses. Then any traffic coming back to the loopback of Router 1 through Router 2 will be properly sent by Router 2 to Router 1 for translation. Unfortunately, this requires you to use more public addresses, which are in short supply for IPv4. 

If you want multicast to cross between different networks, all the routers in between the two networks must be multicast enabled. This is why you don't multicast on the Internet. IGMP snooping will populate on a capable switch that has one or more hosts join IGMP on the router. IGMP snooping snoops on the IGMP conversation between the host and the router. 

Both links should stay up. PVST is per VLAN. Each VLAN has its own spanning tree, and it is a spanning tree that decides which interfaces get set to which state for the spanning tree. Each PVST spanning tree VLAN decides for itself if an interface forwards traffic for that VLAN. STP doesn't actually disable a physical interface, it simply decides if the interface will forward traffic for that spanning tree (each VLAN for PVST). An interface could actually be disabled for one VLAN, and the same interface could be forwarding for a different VLAN. 

If you are learning the networks at the other site from EIGRP, then PBR is something to avoid. Packets to a destination not in the routing table get dropped. A default route will match anything else. If you do not have a default route, then traffic destined for unknown, Internet networks will be dropped. If you are learning a default route through EIGRP, then you need a better default route in your local router. That would need to be statically configured. Unlike consumer-grade routers, business-grade routers need to be configured with a default route for Internet traffic. Business-grade routers do not automatically assume that the router is connecting to the public Internet. 

That is incorrect. There are very few data-link protocols that do this. The transport protocol is normally where acknowledgement takes place, but not all transport protocols do that. TCP does, but UDP does not. With a connectionless transport protocol, it is up to the application to do that. The protocols in the different layers don't really know about each other. There are fields in a protocol header (e.g. EtherType for ethernet, or Protocol for IPv4) that tell a protocol to which process it should send the payload of its protocol. 

You do this per interface, and you can disable it in the Web Console. It is an interface service. Configuration -> Network -> Interface to get to the Ethernet Summary Screen. Select an interface, click on the Edit icon. Go to the DHCP Setting section and change it. See the ZyWALL USG 100/200 Series User's Guide, starting on page 296. 

You are trying to use a layer-2 broadcast across a layer-3 device (router). That's not how it works. ARP is restricted to the local LAN for requests, and replies are to the requesting host, so they will not be sent across layer-3. If you want to use ARP to scan, you would need a scan device on each LAN you want to scan. You could have it report back to a central location. 

What is driving CPU usage in a Cisco switch is probably not a single end-device. Cisco switches can normally handle a full switching load without driving the CPU utilization unusually high. This is because the switching is largely handled in hardware. The most likely cause is a service or protocol which the switch needs to handle in software. You didn't include the output, switch model, IOS version, and configuration. Without those, it is merely a guessing game. 

Unless you have a very good NTP source, you should set up your NTP servers as clients of low-stratum NTP servers elsewhere (e.g. Internet). You can, and probably should, use multiple, external servers as NTP servers for your NTP servers, but not as peers since the low-stratum NTP servers will not actually peer with you (peers should be at the same stratum). You could set up your servers at the various sites as peers, but this may add more complexity, latency, and prove unnecessary if they are getting their time from the same external servers. You probably do want to do this with your NTP servers within a single site. If your core switches are true core switches (not routing, just dedicated to high-speed switching), you probably don't want to burden them with NTP requests from every device at a site. You should use the distribution routers/switches for NTP servers. The end-devices on each VLAN would get their time from the server dedicated for the VLAN on which they are addressed. The VLAN NTP servers could be the distribution or access switches for the VLAN. 

Think of it this way: TCP is one street, UDP is another street, and port numbers are the addresses of the houses (ports) on the streets, just as they are layer-4 addresses. Each street has the same address numbers for the houses. An application can move into the house at 80 TCP St., but when another application wants to move into the same house, it finds the house already occupied, so it can't move in. On the other hand, one application could move into 9876 TCP St., and a different application could move into 9876 UDP Ln. at the same time. The OS doesn't need to multiplex this since traffic destined for these houses travels on different streets. There will be a practical limit to the number of transport protocols an OS can have, but that will vary by OS. In theory, there is no limit. Some transport layer protocols don't use addresses like ports. 

I'm not sure why they would want the PoS systems to have public addresses since that would be the highest priority to protect. Usually those addresses are reserved for devices which need to be accessed from the public Internet. It sounds like you need to configure VLANs and QoS. You can trunk a single VLAN for the PoS systems to the switches where the PoS systems are, and not to the other switches. You can mark the various packets on the switches and queue on the router WAN interface based on your priorities. You can't really control incoming traffic, and that is usually a lot more than the outgoing traffic. Marking on the router will drive up CPU utilization, and it is always best to mark it as close to the source as possible