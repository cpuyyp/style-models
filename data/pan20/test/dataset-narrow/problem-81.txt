I know PPP is used for point-to-point connections. The Wikipedia article for "point-to-point" says that the term is used to refer to a wire that links only two computers or networks, as opposed to, say, a crossbar or bus that links several. The Wikipedia article for PPP states that the protocol is used to establish a "direct connection" between two nodes on a network. I am concluding from this that PPP is used only to establish a connection from one node to the next immediate neighbor; it is not concerned with sending traffic down multiple routers. It establishes communications between two hosts that are adjacent to each other on the network, with no other hosts in between, or with the illusion that there are no other hosts in between (in the case of, e.g. VPN). Am I right in thinking this? I'm kind of confused here, because terms phrases "direct connection" and "links only two computers" are kind of vague. If I am wrong in my interpretation of these phrases, then can you explain what they are supposed to mean? 

Also see this site: It has some good examples and explanations $URL$ My guess is that since you have the "local" keyword in: 

Just wanted to note about the 2x ASA 5520's that I have. The original sticks inside the 5520s were OEM RAM. One set had the model/part-no cis00-21077-508mg on it. (PC2700 ECC) The other was OEM Micron memory mt8vddt6464ay-40bf4 (PC3200 ECC CL3) As these firewalls are more for testing and lab use now so we chose to take the risk with non ECC memory in order to save money. We found some old server RAM in the warehouse and upgraded each firewall with 4x 512Mb PC2700 non-ECC sticks. Both firewalls booted up fine and have been upgraded to the latest 8.4(6) ASA code. So far they have ran without problems. 

OSPFv2 only supports authentication. You can still see the LSAs payload even if you use authentication. The only thing authentication does is authenticate neighbors. There is no payload encryption. RFC 4552: 

However, the IEEE did not plan for a large number of protocols - and it was wrong. As it turns out, the 1-byte-long DSAP field is not big enough to number all the protocols. To accommodate more protocols, the IEEE allowed the use of an extra header, called a SubNetwork Access Protocol (SNAP) header. The DSAP field of 0xAA, which implies that a SNAP header follows the 802.2 header, and the SNAP header includes a 2-byte protocol type field. The SNAP protocol type field is used for the same purpose as the DSAP field, but because it is 2 bytes long, all the possible protocols can be identified. For instance, the SNAP type field has a value of 0800, signifying that the next header is an IP header. RFC 1700, "Assigned Numbers" (RFC 1700), lists the SAP and SNAP Type field values and the protocol types that they imply. See more: SAP Numbers 

I keep noticing that web pages I have open are exchanging messages with third party servers without my permission. This is somewhat annoying, and I would like to find out which pages they are so I can close them. I copied an IP address - 72.21.91.121 - from the TCPdump output, and Googled "reverse dns lookup 72.21.91.121" to see if I could find a hostname that would give me a clue as to the URL of the page and indicate which tab I should close (I tend to have like 20 to 50 tabs open at a time because I can't close anything). I got the website lookip.net, which told me that there was no reverse DNS lookup found. So I would like to know what is the reason for this. Is this a bad lookup service? Would I have better luck using a different one? Or does this host just not have a hostname associated with it (that doesn't make sense; I thought all hosts had hostnames associated with them). I know that if this is a third party server, the hostname wouldn't be the same as the site that's sending the packets, but it would at least be a good starting point. I'm not very good at this, but it's something I could get better at as I learn more about how this stuff works. Right now I'm just a novice at this networking stuff. All I have to work with is a basic understanding of networking principles and TCP/IP. I would like to learn more. A lot more. 

Identifying the Data Inside an Ethernet Frame Each data-link header has a field in its header with a code that defines the type of protocol header that follows. For example, the Destination Service Access Point (DSAP) field has a value of E0, which means that the next header is a Novell IPX header. Why is that? Well, when the IEEE created 802.2, it saw the need for a protocol type field that identified what was inside the field called "data" in an IEEE Ethernet frame. The IEEE called its Type field the destination service access point (DSAP). When the IEEE first created the 802.2 standard, anyone with a little cash could register favorite protocols with the IEEE and receive a reserved value with which to identify those favorite protocols in the DSAP field. For instance, Novell registered IPX and was assigned hex E0 by the IEEE. 

I've kept digging around the internet....and I think I've answered my own question. Now I need to go back to the application/device owners/developers and see what we can do or further lock these devices down to their own VLAN. Please leave comments or answers with any further advice. RFC 4541 2.1.2: 1) Packets with a destination IP address outside 224.0.0.X which are not IGMP should be forwarded according to group-based port membership tables and must also be forwarded on router ports. 

I've never had to do a migration from 7.0 to 7.5 code in my environments. The 2600 series APs were first supported in 7.2.110. $URL$ The 5508 can run also 7.2. If you could get the mobility group/anchor to work with 7.2, then why you could downgrade it to 7.2 during the transition process. You should be able to change CISCO-CAPWAP-CONTROLLER to your new 5508 controller so the 2600 APs will establish a connection with the new controller out of the box. All CAPWAP and LWAP APs should remember the previous controller that they connected to and will attempt to establish a connection to those controllers before trying to go for the DNS lookup. See the CAPWAP controller discovery process Thus, if one of your 1230 APs were to reboot - even if it does a DNS lookup for CISCO-CAPWAP-CONTROLLER (which would then return the 5508 IP), it should still connect to the old controller. I would also assume that your new 5508 has SMARTnet? Open a TAC case with Cisco and see what they say! 

I've been wondering how it would be possible to accurately map a network using something like nmap and discover hosts on the network if those hosts have stateful firewalls set up that filter packets based on the source IP address, port, and sequence number of incoming packets. The source port and IP address you can obtain by monitoring the network with a packet sniffer like Wireshark or TCPdump, but the sequence number is something that constantly changes, and you would have to get it right and with precise timing, meaning you would have to send a discovery packet with a sequence number that is exactly one greater than the sequence number of the last packet that the host received. Of course you can bruteforce the sequence number (not sure how to do this with nmap), but you also want to do it transparently, and there's the fact that if your discovery packet does successfully reach the host, its firewall will filter out further traffic they were meant to receive, resulting in an error on their end and making your presence at least somewhat visible. Is there a way to avoid this problem? Have nmap and other network scanners accounted for stateful firewalls in recent years? 

Depending on the interface - the default port-type is UNI (which is most of the interfaces) Take a look here for further description and information $URL$ 

A trunk port is generally only used when you want to interconnect two switches together in order to pass multiple VLANs between the two switches. In this example, the switches will use Dot1Q tagging and allow vlans 10, 20 & 30 to be passed between the two switches. Vlan 10 however, will be passed without tagging since it is set as the native vlan. eg) 

Alright, I'm not going to bore people w/ subnet math and powers of two. But since we're in the IPv4 exhaustion mode, it allows us to better utilize our given subnet assignments. Also, in a P2P I see no reason why we need a broadcast address. There are only two hosts in this network. Therefore, any packets destined for broadcast are going to be heard by the other host. BTW, Cisco routers have supported this feature since IOS 12.2(2)T 

In addition: Type-2 LSA use only as "virtual instance" of a router in MA segment, this pseudonode has an adjacency to all attached routers (include DR/BDR) on the network and lists all attached routers (RID) to that segment. For transfer LSA they(DR/BDR) use Type-1 LSA as well. 

We can also use CDP to get IP address of directly connected device, for e.q from 2950 switch or workstation by sniffer. Sw2950> sh cdp nei * detail. 

During loop, for a large number of broadcast traffic (eg ARP Request) at the end station may also increase the load on the CPU (for example if you are using cheap 100Mbit/s realtek card that calculate a checksum on CPU). As physically possible to find a loop if the cable is disconnected, the link lost immediately on 2 ports.