For each count, mysql needs to walk thoughout the table, and this is a big problem if having long table and numerous queries. I wonder if there is a way to make all counts in one query. In this case, when mysql walks over each row, it will process all counts, and no need to scanning the entire table over and over again. 

posts witch tagged with more words in the list (first posts with three tags from the list, then with two words, ...) posts witch tagged with first words (first posts tagged with tag1 then posts tagged with tag2). 

each row includes the first value of and for each unique value of . How to select and for each value of . something like 

For each , there are several s. The aim is to save all s in the table to avoid being added again, but set one of them as the parent, and the reset as children. In this case, the content () is set to for all children, and any request to a child redirects to the parent. How can I from table to table to set one parent and the reset children of the assigned parent for each ? There is no preference for choosing the parent. 

Is there a way to do this in one query? EDIT: The output should be the cells and the number of rows. In fact, after selecting the cells, it should walk over the table to count only. I know that it is not possible to merge these two queries, as the first return 1 row, but the second X rows. I am curious if there is a function in mysql to return the number of rows in the presence of . 

It might be a naive question, but what is the difference of these two queries and which is preferred? 

I have a few column with . In some queries, duplicates should be acceptable, in which a postfix should be added to the value. For example, if exits, we change it to . Is there a way to make a unique value upon ? 

is the in table1 and in table2. How to remove the clause to update each row of table1 by counting the number of rows in table2 with the same id? 

I have a simple but big table (tens of millions of rows). The performance is quite good except when I need to order the table by the column with format . A simple query to fetch the last 10 updated rows takes tens of seconds. Is there a trick to order big table in a fast way? 

This just a simple example with no significant difference, but when having heavy calculations, which one is preferred? 

Now I need to 1. fetch each sentence into PHP, 2. then split the string to words, 3. then catch the score for each word, 4. then calculate the sum of word_scores Is it possible to calculate the sentence score within mysql? 

How can I two tables to have the month value (Value1 from table1) for each row of table2? The desirable result 

How to get a full list of all with an additional column indicating that if a given user is member of each group or not. This means that we will have a indicating the corresponding , and the additional column will show or , depending that this has a connection to each group or not. 

How to give a priority to get only one of the clauses? I mean getting rows with . Only if there is no row, get row with . In other words, do not use if there is a row for . 

Is it still bad to use when we want to read the entire row, or even 90% of it? Isn't it benefitial when we read the whole row? In normal condition, the server needs to look for each cells in in order of the . But in , it simply reads in order of columns? The later should be easier and faster! 

The easiest and straightforward method is to use sub-query (), but my concern is the performance, as this process should be conducted for a very long table and regularly (new data coming). Is there an efficient way to normalize this table with high speed? 

How can I run a query to sum the votes for each answer to get results for the list of answers in the poll? 

but this does not work. I cannot the tables, as the is complicated to perform from different tables. 

In an application, I am using 's . Since this application does not need permanent tables, I wonder if I can find an alternative RDMS designed for memory tables. I hope to find an in-memory database system, which is 

Every time reaching the value of in , I want to SET the and after that reset the to 0. In other words, I want to count the rows before the occurrence of rows ending to . EXAMPLE I want to as follows. In the above-mentioned query, rows for is simply for all . 

I use to get the list of each , but I want to separate the concatenated column to multiple columns categorized by the column . It should be something like 

Is it possible to do this with a native query of mysql instead of bringing the data into PHP and returning back to mysql? Since the process is simple, I think mysql has enough functions to do so, but I do not know how to do so. In fact, I want to group concatenate the entire column and split it when reaches the given value (i.e. 20). This needs a loop of s in which the reset to 0 upon reaching 20. UPDATE: The process with do as: table1: 

Now I want to introduce to my database instead of running the second query. Two for each column: one DELETE and one INSERT. Then, I will have 30 - 40 !!! Benchmarks show that using is about 50% faster than executing a second query. Apparently, it is reasonable to use the modern features of mysql. However, the reason that I am asking this question is that many programmers are strongly against , as it makes coding vague. Moreover, adding lots of may make messy. Am I on the right track? 

In the following example, the is assumed the primary key, but obviously other orders or even clause can be added. My question is about comparison in performance of or a simple sub-query`. 

Sorry, if my question is naive, but it has puzzled me, and cannot benchmark the performance. I want to use the newly introduced feature of innoDB for FULLTEXT index. I wonder what is the difference of 

I have many so-called summary columns throughout my database to count number of rows in other tables. For example, counting the number of comments by a user (a column in the user table). Currently, I update this column by an extra query: 

I need heavy arithmetic and string functions for processing the data captured from database. Which is preferred: functions or programming language (e.g., )? 

Here we have created a useless column, not to collect the data, but to repeat the for the . Obviously, it is not good from performance point of view, as we are running a useless action. 

I have a global database, as I all users should have access to it. Is it possible to grant permission on a database to all users? something like