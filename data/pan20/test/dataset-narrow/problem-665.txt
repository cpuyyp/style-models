I would write this as an extension to the Sizzle engine rather than a jQuery plugin; I've made a few other minor changes as well: 

Before I do anything else I feel compelled to clean up your spacing convert " to ' to consistantly use only one type of strings 

I am not sure I understand the question. What are these classes going to give me that a standard lock wouldn't? I would write that first class something like this: 

To use that, a user would simply need to sign in to your site and then load up this page. Worse, an attacker who has discovered potential victims on your site may be able to fool one victim into opening a session and then loading a page similar to this that automatically sends a hidden form on behalf of the victim. This is commonly known as a Cross Site Request Forgery. Dealing with CSRFs is not entirely trivial. The easiest way to deal with it is to protect the vulnerable areas with a form of expiring validation that is unique to the form. I like to use a timestamp and hash, like this: 

This looks mostly fine by me (ignoring Reflection and other more obscure sources of thread safety failures), but I wouldn't call it a Queue per say (because of the duplicate check there). Does it really matter what order the set of items in this collection are in (if so then the duplicate check introduces a bug in that ordering, if not then why not call this a )? One change you should really make is adding to your private members. Also, while this looks thread safe, there is no reason to assume that it is safe to use any of the items inside of it or any inherited versions of it. Consider code like this (intended to obviously be unsafe): 

Handling exceptions If you create library user should be aware what is going wrong if he uses it in the wrong way. 

As you can see, is much faster than implementation. Actually, if you are using cpython you do not really want to reinvent standard library functions because they are pretty nice optimized by c compiler and you code will be interpreted instead of compiling. In case of pypy you probably want to make some research, because JIT interpreter have a lot of different corner cases. 

Complexity Sequence definition $$ F_{n+2} = F_{n+1} + F_n $$ which means that your complexity is \$ O(n) \$. Matrix definition $$ { \left ( \begin{matrix} 1 & 1 \\ 1 & 0 \end{matrix} \right ) } ^ n = \left ( \begin{matrix} F_{n+1} & F_n \\ F_n & F_{n-1} \end{matrix} \right ) $$ As you can see with matrix definition we can improve complexity using exponentiation by squaring which tells us that $$ A^{2n} = A^n \times A^n, A^{n+1} = A^n \times A $$ Which means that complexity using matrix definition is \$ O(\log n) \$ Big integers Fibonacci numbers are fast growing sequence, so in order to store values you have to use arbitrary-precision arithmetic. 

Nodejs and preallocation Lets start with this test where we conditionally switches allocation from static to dynamic. 

The bigger issue here is that I am not sure if reading this stream async will get you anything. The blocking operation here is the out of process request to write the data to postgres. I am not sure a controller is ever waiting for input data. It comes down to considering what is doing for you. allows you to take an already blocking operation you do not have control over (a network request for example) and free your thread to do something else while that is waiting for a response. This means that if your application was sitting at 100 requests before async and most of those requests are spending most of their time waiting for the database to respond, you could switch to async code around those database requests and now all of that time you were sitting around waiting can instead be used to queue up more requests from the clients. 

every time you call , jQuery needs to do some work in the background to figure out what you mean in the string. You can instead cache these items and not need to depend on retrieving them repeatedly being fast. In this case it doesn't make much of a difference, but eventually it will cause your page to be slower. There is too much extra junk in the way to make it apparent what is doing. A good rule of thumb is to wait a week, then if you cannot glance at a statement and know that it is both in the right place in the function and what it is doing then something is too complex. While your code is probably sensible to you right now I am willing to stake the claim that in a few weeks/months when you go to add some other functionality you would waste some time trying to figure out what this is doing. 

But, as you saw before, you have to optimize frontend and backend in different way. How to solve it is up to you. 

Fixed size value in binary file It is not a problem if you have binary file with fixed size data. In this case all you need is to copy your input file into output (or any other way of allocation equal amount of data) and then make to next value you need to write. Maybe it will be faster to change reading curstor instead of writing cursor, it this case you have no need to preallocate large sized file, just add to the end off file. Varies size value in text file Have no idea how to implement than in memory and perfomance efficient way. So if you can make some restrictions on input data, let it be binary file, in other case try to find out some other restrictions that, perheps, give you some advatages. BTW: if it wont be critical you can try converting file from text to binary for transposing and back to text after that. Explaining Lets look at the followig matrix $$ A = \left[ \begin{array}{ll} a_{11} & a_{12} \\ a_{21} & a_{22} \end{array}\right] $$ $$ A^T = \left[ \begin{array}{ll} a_{11} & a_{21} \\ a_{12} & a_{22} \end{array}\right] $$ Your source file contain matrix \$A\$, while your destination file should contain \$A^T\$. To write data into destination file in direct order you should jump over source file to read each element from current column. 

None of this code needs to create any global variables. The pattern you have here is known as namespace creation. It often follows the pattern: 

But it is even better to be commented out or otherwise removed since you aren't using it anywhere. Similarly: 

One thing I would not do is name this method as if it were an event and then not use based arguments. Conventions are good when everyone follows them, but when you don't but remain close enough that the code looks at a glance like you are then you have only made the future editor of your code think more. Edit: Using .NET 4, (still ignoring immutability) I would probably implement it like this: 

The controller is vulnerable to automation. If I can discover a list of user ids I could create the following html page: 

You only need to bind the click event once (toggle is a shortcut for binding to click and attaching two alternating event handlers). 

Use instead of ; it is shorter and faster in all cases I've ever bothered to test. Don't use inline, javascript doesn't have block scope (only function scope) so it is better to declare all necessary variables at the start of your functions. Cache to make code more readable. Use toString instead of a regex test for checking for the bool type simplify loop and store the upper bound in a variable instead of computing it every time Use a check on the loop. 

You will get with keys of your letters and values - their positions in the letters iterable. So you can find out position and find is character found in your characters set with 

But, memory get free only after 3 minutes in my Google Chrome 43.0.2357.125 (64-bit). I was looking in htop, so chrome could free objects instantly, but return to system only after 3 minutes. Profiling If everything looks impossible, you can always try experimental way, using profiling. There is awesome article about profiling in Google Chrome also Firefox Developer Tools. I have applied chrome heap profiles for my example, and it says that data object doesn't exist in window scope any more after pressing "delete" button. Hopes it will help. 

You can find full list at codeschool At least you can replace your div#some_id with section#some_id which brings more semantical meaning. Если можно, я буду писать на русском (: 

Then continue refactoring method be method, you'll probably spend a lot of time, but you code became much easier for reading and making changes of any difficulty. As you have constructor, all methods should in it 

UPD: With single attribute you should create singleton, which will handle synchronization. I had try to draft singleton, but it is not so easy for me. It should be responsible for removing duplicates from task queue and watching on data consistency. 

Back on topic: In my opinion, it is a bad practice to force the Javascript engine to go looking for your globals when you are not in global scope due to leaving off the window qualifier. Thus everywhere you reference without calling it (and the same goes for ) or caching it in a local variable is wrong. In the event where you run this script outside of a browser that implements you will get an exception. is slightly less of an issue because it is a reasonably safe assumption that you will not run this from a browser that doesn't supply a global namespace. For this reason I always pass the globals that I am going to use into my IIFE: 

So the question is how can that function be written? If you can alter the html, you could add a attribute (or something like that) to the div tags with the ids of the big div tags: 

Without going farther I recognize this pattern as a depth first graph traversal with a little additional functionality. I would abstract that a little and see this helper function: 

I was going to make this a comment to Dan's answer, but it started getting quite long (and I wanted to try and actually code it to see if I remembered how). Assuming is big and doesn't change between builds of the application (or if it does you have the ability to replace a single dll), you should build a dll containing the compiled regex representing it to get a much better search then you would if you used that linq expression. 

At least this code is called more than once, so it is reasonable to make a helper function for this purpose and make more reusable code. But I'm sure that you need few strategy classes and multiform manager to hold options and build flow using strategy instances. 

Data structures for characters set Storing characters set in the form of the in order to use method every time you what to figure out a position of the element is not the best choice in case of performance. You should probably use additional for excample: 

You can modify example above to return tuple with 2 params: subtree and number of nodes. In this case you should not evaluate number of nodes on each iteration using . Can be done like this: 

... where did they come from? Proposals IMHO: following blocks should not be part of view, it's can be some util that implements needed behaviour. 

Here, you will receive which is not very informative, probably you would like to make your exceptions for such situations. Performance of string concatenations As you can see from this post, most efficient methods are using , and list comprehension with . I recommend you to rewrite your method to use list comprehension and make all required checks in the beginning of the method. Sanity defaults 

I have made the arrays into objects so that it this is easier to edit. I doubt it makes enough of a difference to be noticeable. That is, I replaced with a structure . It may be worthwhile to change them back though. Reduce comparisons by navigating a 1 dimensional model of the map instead. When you call you can generate a set of for a given map. For the terrain_map provided and a mobility index of 0, this would be the following array: 

(unable to check correctness right now due to not sitting at my work machine, but barring any syntax errors I think that is right) Am I doing something wrong here? I think a static constructor is fine for the singleton pattern as well, but I am not 100% sure it covers all thread safety issues. I don't see how a single lock object wouldn't though. 

In response to the comments: This is very similar to the code you initially put up. I derived it again on a gist using the code you put in your question here (slightly different from the code in the fiddle): $URL$ Clone that repository to see the full history. 

While these examples are pretty far out there, consider if your Queue class were complex enough that I might want to add an extension method to it and need access to internal variables in the method to do some algorithm in a way much better than possible with the available public interface. 

Binary power improvements Well, you can improve module operation, full description can be found there $URL$ 

parameter is just a length of the , so it can be computed in the method. Because method is not the static method, you already have initialized class instance so you can use array received in method in case if the user does not provide to the method itself. For an example, you can write something like: 

You can use 2 custom attributes instead of one. In this case you should not swap value, just replace it. 

Note: it is not final or most optimized version ever, I have tried to show you set of approached you might want to know to optimize your code even further. Benchmark using browser Just open console in your browser and paste following code 

Performance improvements related to approach Interger base For better performance we can split number not by every digit but by set of digits with given base. Look at Number.MAX_SAFE_INTEGER and some math \$ max\_number = 2 ^ {53} - 1 = 9007199254740991 \$ \$ digits = \lfloor \log_{10} max\_number \rfloor \$ \$ base = 10 ^ { digits } \$ Note: base will be lower by one if logarithm gives interger. What I want to say? \$ max\_number \$ can hold \$ digits \$ digits to be able to handle overflowing during additions. What meaning of \$ base \$ ? Currently you are using algo with \$ base = 10 ^ {digits} = 10 \$. Here you are performing modulo operation with base equals 10. Which means you are storing array with numbers that consists of single digit. But allows you to store up to 15 digits. Execute in you browser to find this value (do not forger to take floor of resulted decimal). Look at c++ example at e-maxx.ru for idea how to implement this. I have not found good enough english article, but you can use google translate. Benchmark base \$ 10^1 \$ vs base \$ 10^{15} \$