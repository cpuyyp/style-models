The simplest solution would be to use your domain providers name servers to server as your name servers. Just configure your domain(s) with an A record for the website. You only need to configure glue records if your are running your own name server. Even then you only to configure them, if the nameserver's domain is the domain or a sub-domain that you are configuring. (Only one of your five domains should need you to configure glue records. The others should use the name server domains, of the domain that requires glue records. 

You can copy the disk images to the LVM logical volumes and provide this as the disk image for the VM. Make sure you disable NTP and NTPDATE on the virtual servers. I converted some old images using Mondo to create bootable recovery images. This allowed me to resize the partitions during reinstall. 

For a small network, I use a lightweight DNS server inside the LAN. works well on Linux based systems and also works for Mac. It can load addresses from a hosts file which makes it easy to configure. It can also act as a DHCP server and serve DNS records for the leased addresses as well. 

should have an entry for that includes the 2 or more NS records. It also needs to know the address(es) of any nameservers within the subdomain. Querying a nameserver for should return the nameservers. Running in command mode with the following command should give you an idea what is happening. 

If you look at the headers of a message classified as spam, there may well be headers telling you why it was classified as spam. Your first choice should be to use a relay server which is permitted to send mail for your domain. Connecting to the submission port (which may require authentication) should be quite fast. The fact that you find connecting to the domain's mail servers very slow may indicate that your are triggeting spam avoidance rules there. (My rules provide slow service to poorly configured hosts and express service to well configured hosts. This drops lots of spam.) 

I believe you only need on rule in the tables as well as an accept rule. Add you or to the first rule. 

I prefer to use a split configuration, although the single file configuration works if you only have simple modifications. Any changes I make are new files, with new names. I have a couple of modified versions of Exim provided configuration files modified to my needs. This method retains my changes when an Exim upgrade includes configuration changes. In either case, consider using a revision control system to track your changes. The user id running exim needs to be able to read the key files, and all directories leading to the files. However, it should not be able to write or replace the keys. If you have keys in dedicated directory you can protect it by change the mode to , changing the owner to and the group to or whatever group Exim runs as. Protect the keys likewise, but set the mode to or . 

The 550 and 553 error codes should all be treated the same by the sending server as will any of the 500 series codes. These all indicate a permanent error condition. The 550 indicates the requested action (add recipient) was not completed. The 553 error indicates that the mailbox name is invalid. In either case the recipient was not accepted. 

You will also need to setup the root zone so recursion will work. You likely already have done this. 

I really don't see what security you think you are getting by not setting up a real address to send the message from. You only need an alias which delivers to the bit bucket () although you may want to process bounce messages to detect invalid clients. A few suggestions: 

You may find it simpler to install Shorewall and let it manage the iptables for you. It is packaged for Debian and well documented. 

Filter by host name. (Each appliance should have its own hostname). If you want you can listen on multiple ports and handle each port separately. Facilities are designed to handle message categories like authorization, mail, printer, ftp, etc. As UUCP isn't used much anymore you could likely use it for your own uses. Their may be other unused facilities in your configuration. However, you are better off using standard facilities values, and filtering by other data. There are 24 facilities as they are names for bits in a bit mask. This makes aggregating arbitrary sets of facilities in the same log. The protocol is specified in RFC 5424. The other field is severity. Normally logs contain all logs at or above a given severity. (More severe priorities have lower values, so the normal comparison is less than or equal to the selected priority.) However messages of a given facility can be selected, as is often done for the debug log which collects debug messages for all facilities. You may want to aggregate data for some facilities in the same log regardless of originating appliance. It is common to log the same message to multiple log files. 

IPv6 is an entirely different IP stack from IPv4. Various things are simpler in IPv6 than IPv4, and vice versa. IPv6 has a site local address space which has been deprecated. I think this was intended to be similar the private address spaces in IPv4. Many ISPs do not yet support IPv6 so tunneling may be required. A lot of older (not necessarily that old) equipment is not capable of working with IPv6. This may include some (a few, many, most, or all) of the routers your organization uses. Many networks will have internal firewalls between various segments. If these firewalls are not IPv6 capable any inter-segment IPv6 routing would need to be tunneled. If the routers do support IPv6 internal routing within firewalled segments should be possible. However, device discovery will likely depend on DNS or other host registries. Finding unregistered hosts in an IPv6 network can be much more difficult with IPv6 than it is with IPv4 where range scans are practical. 

If your apache server is running as a user other than replace with that user below. The owner should be any user other than . I use an unprivileged user that is use to update the site. Group should be Permissiions should be 750 for directories and 640 for files. This will prevent apache from writing to the directories and files. If you use permissions 755 and 644, than any user on you server can read the data. This can be used to allow a third account to audit the content, possibly comparing to a reference copy of the content. If you have a upload directory, it should either be owned by or have permissions 770. Watch this carefully as it can be used to drop maiware. Configure apache to prevent execution of anything in this directory. Use the configuration file for this as it will be possible to overwrite files like in this directory. The above rules apply to all directories and files referenced by your configruation. Recursion counts so apply the rules using recursive configuration. The following commands will lock down the . You can replace daemon with any user other than . Change the uploads directory to your uploads directory. 

As noted in my comment, the receiving system's Ethernet card appears to be running at 1/10th is maximum speed. The transfer rate you are achieving is close to the maximum achievable without compression at the current network card speed. Running rsync in daemon mode on one side may provide better performance than tunneling using SSH. There are security implications to running rsync as a daemon. 

My DNS show your rDNS is broken for mail.canadaka.net. Perhaps it is pointing to the old IP address. spf_query shows no applicable policy for either the helo name or mail-from. Consider adding 'v=spf1 a -all' as a text record for mail.canadaka.net. Also add the appropriate SPF record for canadaka.net. Perhaps 'v=spf1 a:mail.canadaka.net mx ~all'. 

It is really hard to log at that level and have a usable log. I've only seen it in clients set to debug level. You might be able to do a log per message that is useful. Is there any reason you need a log at this level? You should be able to create a shadow copy of the message, but that would exclude the commands used. It is relatively easy to get the commands in , but I don't think it as easy to get the responses. Data is another matter, but you should be able to capture the spool file that contains the data. I believe it is more difficult to get the commands in Postfix due to the way it is structured. 

Check your mainlog to verify which transport is delivering your mail (T= lines). The only standard transport that signs email is . If mail, is being delivered by a different transport, it won't be signed. EDIT: I believe this maybe where your problem is as likely doesn't contain the value of : 

Run through the Securing Debian Howto. Install all patches and keep patched. I install unattended-upgrades and enable security related updates. I usually install Shorewall as a firewall with an appropriate example configuration as a starting point. Then I limit access to the Internet to expected traffic. 

Setup server status specified in the recommended existing thread. The process sizes look excessive. This looks like you may have a memory leak. I have found setting MaxRequestsPerChild to 1000 or 100, can help when there are memory leaks or other problems in the code. This will usually kill off the processes before they cause a problem. This may give you time to trace the problem.