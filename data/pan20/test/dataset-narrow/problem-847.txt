If the variable doesn't exist Powershell will simply evaluate it as false, so no need to check if it exists. 

As this is the hive for the Local System user account, despite its confusing name. (MSDN Reference) To edit the Default User Profile, you need to change the NTUSER.DAT from the Default profile directory (Location varies - C:\Documents and Settings\Default or C:\Users\Default etc) You can do this by using the Registry Editor as follows: 

You could try GETTSCIP from $URL$ It's a freeware application, but I don't know if it will work for disconnected sessions. I doubt if it will, though. 

I'm not sure about your original question, but this is exactly what Group Policy is designed for. Create a GPO and either apply it to the relevant OU's or apply it higher up the tree and use Security Filtering to only include a Security Group containing the people who need this. This will be neater and more manageable than manipulating the individual user objects. 

You don't, really, anymore than you can stop regular users guessing at links. Correctly secure your content and this won't be an issue anyway. Obscure links are not a safe way to hide things. You can ensure you've got a correctly configured robots.txt - that'll stop most of the legit bots. 

There's only one best practice solution here: you need an additional Domain Controller with the Active Directory DNS service installed. You should then configure a forwarder within DNS to use whatever your preferred provider is. You then have full full redunancy for Active Directory and DNS. You should then configure your clients (Through DHCP ideally) to use one as the primary and one as the secondary. 

I agree with you - these are not discrete concepts. Stratus is a supplier of services and hardware, some of which include virtualisation too. May I be as bold as to suggest that whoever set you this task doesn't really understand? Does it have to be a "vs" presentation? Maybe you could take the time to explain the fundamental concepts of virtualisation, high availability, fault tolerance and some of the ways that these can be achieved. I'd let Stratus do the sales spiel themselves, personally. 

Yes, your data will be fine, though you should always ensure your backups are maintained and up to date before doing such critical operations. Here is a Technet article which will guide you through the process and some key considerations: $URL$ 

iSCSI runs over TCP/IP which means all the normal rules of networking apply. A crossover cable would work fine. That said, this does defeat many of the end goals of shared storage and ESXi. For example, no vMotion. As it's a homework thread, I'll let you investigate why. Also, you remove the ability to allow other devices to see the SAN in the future. 

You'll need a domain controller and for that Terminal Server to be part of the domain, along with the users. But yes, you can do it all with Group Policy and Software Restrictions (A subset of Group Policy). You may also want to apply the relevant patches to allow Group Policy Preferences to work, as these offer even greater flexibility. The policies you require are well out of the scope of answering here, though, but there are many resources on the internet. To a degree, though, you'll have to go through a testing, development and trial and error phase. It can be a bit hard going at first, but I wouldn't cave and start using some cheapy 3rd Party software because they almost all suck. The only ones I could recomment in good faith are RES Software and Appsense Environment Manager. They both have a real learning curve, though, and I still think they're overkill for what you require. 

I'd be more interested to see a Comparison with Server R2. Windows 7 shouldn't be running web servers, though I agree the difference in results seems extreme. 

I've never had to any administrative installs when using the Adobe Customization Tool. Simply make your changes, export the MST Transform file and install using the original MSI and your new Transform. 

From my testing, I believe it's got to be the NetScaler that's sending that spurious FIN (I've tested from a machine in the DMZ, via the same Firewall etc and it doesn't have it) and I don't think it's out of the realms of possibility that an embedded device may not like it. So, can anyone explain why NetScaler is doing this and how I can change it? I presume it's a TCP Profile configuration but I can't seem to figure it out. I've attached two screenshots of the capture - both captures are using the same Client <-> Server and the same method (Putty). The only difference is whether I connect through the SSL VPN or not. Update 1 In a moment of wondering, I changed the Web Server to listen on Port 81, instead of Port 80. With this configuration, the handshake is correct with no spurious messages. This leads me to believe it's going to be something to do with the HTTP optimisation on NetScaler 

This looks like an issue with .htaccess or Mod Rewrite or something similar. After a few seconds your page is directing to the top level directory. If you stop the page while loading, all of the links do the same. I.e.: $URL$ It's the top level that is giving a 500 error. 

This is a bit tenuous, but I've seen XenServer fail in peculiar ways if it doesn't like the existing file system on the disk. You could try wiping your discs first. 

That link you posted may work, but you need to be clear on this: There is no such thing as merging / joining / combining / whatever Active Directory accounts - this is the same whether on a single domain, single forest, multiple domains, multiple forests with trusts etc etc etc In your case, an account on Network A is always mutually exclusive to an account on Network B - even if they were to share the same username. It may help if you always think of the username in terms of "DOMAINA\Username" vs "DOMAINB\Username" - you should see now how these two will always be different. With regards to Exchange, you have a mailbox belonging to DOMAINB\john.smith - by using that link, you're setting up permissions so that DOMAIN\smith.john can access the account. Just in the same way that, on a single domain, you may give a manager access to someone else e-mail. 

My first question to you - what's the subnet mask on the 10.1.x.x addresses? I've got to say - that's a somewhat unusual way of structuring your network. Secondly, the default gateway has to be a router on the same subnet because that's what a router does: Moves traffic between networks / subnets. If it's JUST an access point (I.e., not a router / AP combined) then you'll simply have to put a router in between. DNS can be on another network so you don't need to worry about that. 

They'll be encrypted on the hard drive, but not on Dropbox itself. So, very little, essentially. When the computer is running Dropbox will access the files exactly the same as it did before. 

$URL$ (Server 2003) $URL$ (Server 2008 / Windows Vista Onwards) So, that's a good reason for it not to be 0. Additionally, according to those articles: 

I think you can use Process Explorer (From SysInternals) to try and drill down to which service is hammering the CPU. 

That error is extremely clear, and I question how much time you have spent thinking about it. The core message reads: 

Not only is this not a theoretical 'gaping security hole' - it's entirely possible and part of how certificates work. Organisations include their own trusted root certification providers all the time. Fiddler uses a similar method to what you describe to allow decryption and analysis. Devs do it manually, too. Security over the OS is critical - if your OS is compromised it's game over regardless. 

And all that happens is that the very last policy to execute will have the final 'say' on what the final setting with. With the exception of 'Not Configured' where no changes are made. 'Not configured' is the default for all options within Group Policy when you create a new GPO. So, if your current policy has a setting that is "Enabled", you need to create a GPO with the same setting "Disabled". 

Fundemantlly, your AppPool is wrong a different .NET level than your development environment. You could try changing this, asking your provider to change this or you could try removing that line, changing to or perhaps simply Googling the problem.