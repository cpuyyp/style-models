Up to this point, the domain hierarchy and the name servers are usually mapped 1:1, so one part of the domain relates to one name server. Starting from the domain, it can then have an arbitrary structure and is due to the organizations needs. So one server could be responsible for or there can be 3 servers responsible for this. 

I am currently diving into topics like PTP (IEEE 1588) and precise timestamping for capturing network traffic. Many resources on the Internet name hardstamps as a feature of network cards, allowing them to add a timestamp to a packet before putting it into a (typically non-deterministic) queue towards the application layer. What are these timestamps like? Are they measured relative to a start signal sent by the OS or absolute timestamps? Are the absolute stamps synchronized to the OS clock or to a clock managed by the NIC? 

Basically, DNS is only a name system. So you have FQDN and they translate into something else. This could be for example an IP address (A record), a mailserver (MX record) or another thing. Often times, it is used in a way that subdomains provide hierarchy. So is something belonging to . But if you want, you can do this mapping in any way you want. There is especially no geographic information in domain names. Nevertheless, it makes sense to use the hierarchy and distribute your name servers in a geographically senseful manner. But you are not forced to do so and many organizations don't do so. Take for example content-delivery networks (CDNs), where they are resolving domains based on your location, so that you get the content from a geographically nearby location to reduce latency and load on the network. The actual DNS lookup is also done hierarchically: 

I want to capture packets using tcpdump and get as precise timestamps as possible. The latest version of tcpdump has the command-line option, which can be used for this. I tested the option inside a virtual machine (which definitely has no hardware timestamps ;-)), but there was no error message. Online research did not yield any keyword or phrase that can be used to check whether some card supports it or not. Typical NIC data sheets don't have anything in them which indicates timestamp precision or general support for such a thing. How can I check whether my actual NIC supports hardware timestamps? 

It can be removed, although I would recommend specifying a native vlan and an encapsulation protocol on both sides of the link to keep it proper and error free! 

The buffer can only hold so much before it fills up and dumps the logs to replace them with newer versions. Depending on the RE version and the amount of RM/hard drive/flash drive size you can store different amounts with some tinkering. What are you trying to determine by examining the logs if I might ask? 

Packet tracer and GNS3 for simulation is a great idea to start....9tut along with the Cisco forums can also be a good source of helpful info if you are having issues grasping a concept. If you can afford to do it I highly recommend building a home lab setup using a pre-fab home lab which you can purchase off of Ebay or the like. Usually you get a few 2821 routers and a couple of 3560 switches to go along with them, including all of the necessary add on cards. This will give you ability to run IOS 15 and get some hands on practice. The going rate is usually about 299 but sometimes you can find one on CL.com etc for less if someone is selling theirs on the cheap. The two biggest things, read the cert guides. Those things have some valuable info if you are just starting out. Secondly, practice...practice and more practice. In my opinion hands on practice is one of the best ways to become proficient with the material along with using the concepts in a functioning environment. CCNA was a tough go, but with effort most people of average intelligence can learn and master the material. The Cisco cert courses have been some of the most valuable sources of info around, I definitely feel like without them I would have never made the jump to admin level and ultimately engineer level positions. 

If you just want to detect floods, you can simply define a rate limit and when this is exceeded raise an alarm. A more machine-learning like way would be: Train an anomaly detection algorithm with legitimate traffic. So you have to chose your features (e.g. packets per second, burst lengths, etc.) and then train you system. Finally you can then just measure the features while operating you network and feed it into the anomaly detector. 

Actually, in networking you never know if a packet got lost or not if you are only watching the end-points. This is due to the fact that you cannot distinguish between a lost packet (dropped by router or even corrupted on the link layer) and a extremely delayed transmission (packet is still on the wire or in a queue but is not processed). A TCP duplicate ACK indicates: You received an acknowledgement from the server but it gives the same sequence number that the last ACK had. This means that an intermediate packet is lost (as the receiver ACKed the number twice) or extremely delay. But as you have received another ACK (the duplicate ACK) this means that the network path is not completely congested. Consequently, if you get multiple ACKs in a row, you can assume that the ACKed packet is lost as the other packets come through. Many TCP implementations then do what is called a Fast Retransmit, so that they don't wait for the retransmit timeout but instead resend the first unacked packet. This also has some implications regarding the congestion window. The message "Expert Info (Warn/Sequence): Previous segment not captured (common at capture start)" means the following: On the receiver side you capture an outgoing ACK packet for a sequence number where you haven't seen the respective segment. This is common, as it might be possible that a segment arrived, you started the capture and afterwards your TCP stack replied with an ACK. So there was no way to see the incoming packet. This does not necessarily indicate a loss. 

Link state advertisements form the basis of this type of protocol. without them and their hello and dead timers there would be no way to assure the topology and links were still active. Link state protocols depend on these, whereas EIGRP and other distance vector protocols depend more upon the path of data and path cost determined by bandwidth availability, latency etc. They also do not have regular "updates" updates are sent when necessary such as when a link is found to be inactive. With OSPF and LSAs whole updates of the topology table are sent regularly, they depend on similar items, such as distance and bandwidth but they are calculated differently due to the algorithm used in OSPF. I prefer EIGRP but that is not an option in non Cisco land, its just a more efficient and simpler protocol to configure IMO. I live in an all Juniper world, so eIGRP is a thing of the past, OSPF and the different type of LSA advertisements are a necessity to know. 

Have you considered placing your wlc in a different location instead of off of the router in the router. From most of my experience with environments I've worked in we have always placed are wireless LAN controllers off of switches. Spaced evenly throughout your network environment comma it would make much more sense from a traffic flow standpoint. It seems to me that if you are running a wlc behind a router that is also responsible for your whole networks routing that could cause a bottleneck? I havent used a router in between the wlc and layer 3 switch stack in any environment most wireless lan controllers function fine at layer 2 with a vlan ip. 

Fing, Angry IP, netstat and arp -a are good starters...and depending on whether you have access to the infrastructure you can check the dhcp scope and issuance...along with CDP or LLDP on the networking equipment. Fing though its good! 

If you want to block this appli, you will must to block all VPN which are not yours. Psiphon can mount proxy HTTP/SOCKS via tunnels. All the traffic of this aplli will pass by the port TCP 80 by default.So you must to have a firewall capable to inspect yours packets to see which packets are reals HTTP packets and HTTP proxy packet. You can't block this appli only with the ports numbers. 

If you want to measure the difference between the two traces, you can ping directly 8.8.8.8 and 8.8.4.4 and see the time response to know if there is a big difference in the delay. You can use the options (for Wndows) : 

Finally, Poste1 updates his MAC table with the new values of poste 4. This entry will stay in this table during a period determinated by the Operating System. 

A diagram that explains the arp request: Firstly,in this example, Poste1 want to send a packet to poste4, but it has not the @MAC of poste 4, so it sends a broadcast ARP. In this request, poste 1 will ask "what is the MAC address with 192.168.0.44 IP address ?" 

Is there a specific configuration to have your Pool Nat with a mask of /24 and not /32 if your public address is always the same: 145.89.181.192 Have you tried to modify your PAT Pool by this: 

Concerning the difference in the results of yours traces, maybe yours packets (or the packets of response) doesn't take the sames routes during their transits. This may be due to dynamic routing in your network. 

If you want to ping your modem (192.168.1.1) from your test PC (192.168.10.13), you must to add a route in your modem for the network 192.168.10.0/24 via 192.168.1.69 (your router). By default, your modem doesn't know where is the address of your test PC. Your ICMP Echo arrives on your modem but it can't send the reply because it has no route for this network: 192.168.10.0/24 You ping from your router all IP's addresses beacuse they are all connected to him. The router knows, by default, all the networks it have been directly connected to him. 

I always use a commit-check when im doing any sort of commit operation it will help in these situations. That is just quick advice I am also fairly new to being a Juniper Network engineer most of my previous experience was heavy Cisco/Aruba/checkpoint/palo. If you haven't started reading it already....make sure you put it at the top of your list $URL$ It is the JNCIA manual, free on Juniper's site and contains a wealth of great information you will need to be successful. Best, 

Simple explanation those pings are being sent through multicast which is FF-FF-FF-FF in your first scenario. the router doesn't always know the mac to IP mapping and sends out a gratuitous arp...when it receives a response it isnt going to tell you about every multicast host that received the message and dropped it or didnt reply because it didnt match When you ping a single host you are getting a single MAC to IP binding and it can be filed in an ARP table. 

Java 7 version 45 and 63 worked for me with asdm, lower your java security setting to medium and whitelist the ip/hostname of the ASA. specify object group then add the network object-host followed by the IP desired. These two links cover just about any issue you could have...good luck! $URL$ $URL$ 

In my experience, I generally will use one port as an outflow and another port as the collector in promiscuous mode.... I work in a full juniper environment now and their equipment has some abilities CIsco does not, like being able to PCAP right off of a switch and read the wireshark. Cisco may have something similar but I dont recall knowing of such as thing. We use it all of the time to assist in troubleshooting on out Juniper ex 4300-4600 and SRX3600 devices. 

Ive seen this before on some of the cisco 3750 switches I managed when I worked for one of the major airlines....in one of the IDfs the terminal would indicate a MAC which was a duplicate on multiple interfaces....this could be a few things, bad STP, interface issues, misconfiguration....it goes on. When you see it you get the old flappy flappy....its almost like a loop in a netowrk segment just not as disastrous...It will definitely cause your data traffic to flow incorrectly and give you unnecessary latency.