I've boxed one of my Raspberry with a micro USB hub and a 500GB HD to backup critical directories of my 2TB NAS via rsync. (Just the ones that I cannot afford to lose). Both the Rpi and the hub are powered by a 5V-2A power adapter (7â‚¬). Everything works very well. I'm so satisfied that I've bought a 2 slots USB HD dock like the one here. One of these days I'll buy a couple of large HD and will move everything there. BTW, I also plan to install OwnCloud and make it accessible from Internet so to have my own personal Dropbox-like system. 

I used a different approach for my two Raspberrys (named ygdrasill and dvalinn): I've opted for a fixed IP (192.168.0.140 and 192.168.0.142) so I can also use etc/hosts file on some of my other machines. I could have set up an internal DNS or rely on Wins, but current solution works for me. 

Has anyone managed to install sdcc ($URL$ on a Raspberry? The package repository has and but the main package seems missing! Their site says that sdcc can be compiled for Raspberry but I'd like to check if anyone has done it before. 

Making the script To start, you need to make sure that your Raspberry Pi is connected to the internet. This is needed to track time. Then type in this code: 

Finding the components I do not know how to do this on a display from an Android tablet, but you can use pretty much any TV (yes, old or new) as long as it has an HDMI socket. You will need: 

I am using a raspberry pi model B and I am trying to output sound using my new Logitech Stereo Speakers. I can't hear anything but my headphones do work. Please tell me why this happens and how I can fix it. Thank you. 

I have been making a maze game on the SenseHAT in Python. I am trying to not let the player move through walls, but it just erases them. It should use the get_pixel() function to check if the player is trying to go through a wall (a blue pixel) but it lets the player through. Here is my code: 

which implements the Apple Zeroconf specification (like Bonjour). You can then ssh to your RPi by name: 

That's your IP address. Of course none of this will work if you just boot up your RPi and could not connect to it because you don't know the IP address! If' that's the case your DHCP server will surely be able to tell you which IP address he just gave to the RPi (or you just try them all :) ) That said, you might benefit of referencing you RPi by name and, since you're using a Mac, probably the best solution would be to install avahi-daemon: 

The connection between RPi and the hub is done with a very short (made by me) cable. In the picture below you can see the two USB ends of the Y-Cable from the HDD. 

If your RPi is connected via WiFi the adapter name should be Otherwise you can get it with the command: 

The best way to power an HDD is trhough a powered hub. I've bought a 5V 2A power adapter (~9$) and powered both the hub and the Pi as shown in the diagram below: 

No, this particular camera module can't be used with Raspberry Pi 3. While the camera hardware itself would work, the ribbon cable is of a different size and won't fit. 

Yes, the Lite version of Raspbain 9 "Stretch" uses systemd just like 8 "Jessie". Also I highly recomend using systemd over other options. 

According to eLinux 128 GB SDXC cards have been successfully tested by individuals. But not all cards seemed to be working. Entries with "Card Type" SDXC can only be used with RPi 1 Model A and B. All other models use microSDCX. 

What you really want is a VPN-Server. L2TP would be what you want as the much simpler PPTP is no longer supported by newer devices. I have a RPi running at home for exactly this purpose. I can access any device in my home network remotely from my MacBook Pro, iPhone and Windows 10. There is a fairly easy setup script for that on github. Read everything carefully before you do something. 

Sorry for the long code, I have tried to make it as short as possible while still making and keeping it understandable. In case you didn't know, the function should get the colour of a pixel at an exact position. Bear in mind that the SenseHAT's LED Matrix is 8x8, but the SenseHAT pixel setting functions take it as 0 - 7 each way. 

Replace things like 12:00 and your_output_pin_here with your own values. Every 30 milliseconds, it checks whether it is 12:00. If it is, it turns on the LED. It then waits a number of seconds, then turns it back off. Editing the Crontab If you want this program to be run whenever you start the Raspberry Pi, go into LXTerminal and type this: 

Replace "/path/to/your/python/file.py" with the path to your python file (like /home/pi/timed_led.py). Do CTRL+O and RETURN to save. Then to exit, do CTRL-X. When you start up your Pi, it will take a while to boot up, then it will run the program. If you ever want to stop it doing this, then do sudo crontab -e again and put a hash (SHIFT+3) at the front of the line. I really hope this helps!