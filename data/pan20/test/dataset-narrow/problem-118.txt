As far as I know there is no straight solution for this. In your case you can create a MAC address based ACL and bind it to the VLAN in which those SwitchPort exist. Of the two MAC address block one. Detection of the problem this way will be quick with a little obstruction in network service. You can refer to this configuration from Cisco doc. 

( R ) prepares an Echo request. ( R ) checks its routing table and concludes that the packet needs to be sent out from interface ( 2 ). As the ( R ) has two interface it can choose to put either of their address as in the Source IP Address field, i.e 10.0.0.1 or 20.0.0.1. It chooses the exit interface IP address as the source by default. This is to simplify the routing process. Extended Ping command can be used to change this behaviour. So the IP packet will have the Source IP Address= 20.0.0.1 and Destination IP Address = 20.0.0.2. Interface ( 2 ) of ( R ) will prepare the packet based on the type of WAN link and send it forward to ( I ) (20.0.0.2) ( I ) receives the packet. ( I ) responds to the packet using a Echo Reply. This packet will have the Source IP Address= 20.0.0.2 and Destination IP Address= 20.0.0.1 Eventually ( R ) will receive the packet on its interface ( 2 ). 

Hope this clarifies any confusion. You have your computer connected to internet through a Cisco router. 

(  ) sends out an Echo request. The IP packet will have the Source IP Address= 10.0.0.10 and Destination IP Address = 20.0.0.2 Router ( R ) receives the packet on interface ( 1 ). ( R ) checks the routing table and based on that decides to forward the packet to interface 2. Interface ( 2 ) of ( R ) will prepare the packet based on the type of WAN link and send it forward to ( I ) (20.0.0.2) ( I ) receives the packet. ( I ) responds to the packet using a Echo Reply. This packet will have the Source IP Address= 20.0.0.2 and Destination IP Address= 10.0.0.10 Eventually ( R ) will receive the packet on its interface ( 2 ). ( R ) will check the route in its routing table and forward the packet to its interface ( 1 ). Interface ( 1 ) of ( R ) will prepare the packet based on the type of LAN link and send it forward to (  ) (10.0.0.10). (  ) receives the packet. 

Firewall configuration: Firewall configuration not included, however, all traffic is permitted as follows: 

After that I unplugged and plugged in the cable and did and here is the copy-paste of it. It's weird, nothing is said about any attributed related to VLAN. 

Update Just tried on a model and still doesn't work. So.. I'd guess, switches just don't get the config from the RADIUS server (or did I use incorrect attributes or operators?). How can I troubleshoot that? 

What could be wrong? Doesn't it work with servers that are domain members? Update I was actually able to login by specifying an IP address instead of a DNS name when connecting. Also I had to use notation to login, otherwise it does not work. The DNS is reachable for sure as it works with the other server 

I was not hoping any more to ever get it working and then I reconnected and... it happened, just randomly and I'm so excited now! I got assigned a VLAN dynamically: Debug: 

I need assistance configuring VPN setup between Fortigate and Juniper devices (GRE over IPSec). I have the topology as follows: 

Please, advise if this kind of setup could at all work and what could be wrong here? I played with local/remote identities and could get IPSec to come up, show up in security-association table, however, never could get GRE interface to come up and have pingable remote address. Neither I could ping remote loopback via IPSec tunnel. If any debug/output needed to troubleshoot just post in comments. Thanks! Maybe you have some good resource on setting this up? Was not able to find anything on Fortinet/Juniper websites that would be helpful to setup between these two vendors. You can definitely find ones to setup with Cisco. Note: addresses used are not public, but allocated for use in example code: $URL$ 

I also tried instead, but it doesn't work on FreeRADIUS, just barks at me (I saw this on resources for configuring on Microsoft NPS, one of these) . Also I tried values "802", 802, 6 for tunnel medium type. Also I tried to use actual VLAN name instead of VLAN-ID as Group ID value. Anyway its datatype is string. I configured the HP switch to use this RADIUS server for AAA and set this up for port 10: 

This is correct: the pseudowire switching path does NOT do mac learning, so there's no way to populate that information. One possible workaround is to build a VFI that only has two ports. You will effectively end up with the same behavior (frames will just get bridged from one side to the other) but since you've now enabled the mac learning part, the system will store the MAC addresses learned from each side. One word of caution here: make sure you have enough resources on the system to learn all the MAC addresses. Most pseudowires don't actually have all that many MAC addresses, but some can/do. 

The NCS6k is designed to operate as both a stand-alone chassis, as well as connect to a separate chassis that holds only switch fabric cards. As a standalone system, the switch fabric still interconnects all the linecards, but the fabric cards are on the "back" of the chassis and have only internal-facing interfaces. In a multi-chassis system you have a set of "linecard chassis" that all interconnect through a different set of fabric cards to the "fabric chassis". Essentially, the fabric chassis allows you to build an even larger system than you could with a single chassis of 8 linecards. 

Sorry I don't have a system actually in front of me to get you actual output, but look for "show qos interface ..." and that should have the configured hardware values for all the QoS parameters. The CLI is going to be something like: 

(it might actually be "input" or "output" instead of "ingress" or "egress" but with a little question-mark magic you'll be able to find it. You'll have a whole bunch of output that shows you all the policer rates, actions, and token bucket depths. It's actually a very useful little command. ;-) 

Access points can be configured to broadcast their SSIDs, or they can be configured to only listen for connections from devices that know a given SSID exists. Virtually all wifi client devices (laptops, mobile phones, tablets, etc) will broadcast at least some information on a periodic basis. This is the information that a listening access point (or maybe more generally called an analytics gathering station) will hear and use to build maps and data sets of which devices are in the area. How much or how little (or how often) any given device is broadcasting information or attempting to access the network is highly dependent on the individual device. For a reasonably good introduction to how this stuff works, may I suggest: $URL$ $URL$ $URL$ 

I have a quick question regarding MSTP: Do all the switches in an MSTP domain should agree to which VLANs are mapped to an instance? Being that dumb, I've just caused an outage by just simply creating a VLAN and adding it to an instance on one of the two core switches. Can you explain what happened when I did that, just want to understand that? Did I have to first add it as a tagged VLAN on the trunk between the core switches? What is the correct procedure to add a VLAN to MSTP domain? What I did that caused the trouble: 

Firewall configuration: Firewall configuration not included, however, all traffic is permitted as follows: 

I tried a different server that is not a domain member (linux server) and has anonymous login, I just left credentials blank and it connected just fine to the server. 

Wow, I would have never though of this one. It was just a random solution. So, the problem was with section in my site configuration at , it was kind of default. I don't really know what's up with that (if you, guys, know, comment on that, please), gonna do some research on that; here it is: 

This is what I saw in TCPdump on the RADIUS server. I was capturing outgoing UDP traffic with source port 1812. It's what my switch gets (if it does actually, not sure how to check that...) 

What I need to do is create a route-based IPSec tunnel between the devices to encapsulate another tunnel (GRE tunnel) within. I had similar setup between this Juniper and Cisco 2921 and it worked just fine, however, I am having real trouble setting this one up as I don't have necessary expertise with either. Don't know if it is supposed to work that way, but... 

If you only want outbound traffic to be load-balanced like that (beware inbound traffic from the Internet won't be affected and will be routed according to Internet routing tables) then let's suppose your ASA1 IP address is 192.168.0.1/30 and ASA2 address is 192.168.0.5/30. Two subnets that should go through ISP 2 are: 

I am having trouble connecting to a Windows file server via Fortigate SSL. I enter the host name of my file server in Connection Tool section of my SSL portal and then a window asking for log in credentials pops up. I enter them and click after what I get an error with . This server is a domain member and uses AD DS for authentication so I enter credentials in this form: . But even if I leave them blank and click login, still... the same thing happens. 

You've assigned the network address (where all the bits not masked are zero) which is not allowed. For your subnet, the interface address can be anything OTHER than zero (the last 8 bits are all zero) or 255 (the last 8 bits are all ones). The most common convention is to have the router be the lowest numbered address of the IP block. Try this: 

So I think it's important here to get the terminology correct, even though it's VERY common that people use the wrong terms. Properly, an access point allows wireless clients to connect to the existing network (which is usually, but not exclusively, a wired ethernet network). This is distinct from a router, which forwards packets from one computer network to another, and often includes functionality such as network address and/or port translation. The confusion arises because many very common devices, especially home "wifi routers" put all of this functionality into a single device. The "power" of a router can mean a lot of things, and it's not at all clear what's being asked here. At least one important distinction would be whether we're talking about "how good is this system at sending and receiving wireless signals" but another might be "how good is this device at doing packet forwarding?" - these might well be very different things for a given device. In large deployments, you can have lots of access points that cover a large area (think about a large commercial building) but none of these access points are actually doing the routing or NAT/PAT functionality. So... all that said, it will really help us answer the question if you describe in better detail what you're asking and use the terminology most appropriate. I briefly looked over the relevant wikipedia pages and they seem to be reasonably well written: [1] $URL$ [2] $URL$ [3] $URL$ 

So in the strictest sense, "IP over Ethernet" is exactly what it sounds like, it's the encapsulation of IP packets (datagrams, formally) in standard ethernet frames. For much of the networking universe this is just "normal" IP as so much of the transport has migrated to Ethernet nowadays. Somewhat more specifically speaking, IPoE is often used in comparison to PPPoE when discussing how services such as residential broadband are delivered to the end user. This can be a little confusing as PPPoE would more accurately be described as "IP packets encapsulated in PPP, which is in turn encapsulated in Ethernet"... but it's just broadly known as "PPPoE". The use of either "PPPoE" or "IPoE" in the context of residential broadband also almost always implies other components of the service delivery system, such as address allocation, authentication, accounting, etc. Authentication is normally a RADIUS server or sometimes Diameter. The exact rules on how authentication is performed and what devices can/can't connect are usually set up by the specific service provider. Broadly speaking, "IPoE" is more common in cable access networks, and "PPPoE" is more common in DSL and dialup access networks: although this is by no means cast in stone. I found the document below to be relatively useful: $URL$