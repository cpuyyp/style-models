Then, you will add a cookbook containing just this setup recipe to an Opsworks custom layer. The custom layer doesn't need to do anything else if all you want is to install the package. But since the custom layer lets you do a lot more, you might want to read Amazon's documentation and some other sample cookbooks that it links to, to get a sense of what you can do. 

I suspect that your app knows its own intended URL and is trying to redirect to it, since the URL that it thinks came in is not canonical. Add this in and see if the redirects stop. 

systemd actually has several unit configuration options which you can use to express the dependencies between these services. In particular you will want to look at , , , and , all of which specify different ways in which a unit may be started or stopped in relation to other units. There are several other less commonly used ones, so read through the documentation carefully in case your daemons can use them. (Because you didn't say exactly what the dependencies between your services are, I can't recommend which option you should use.) 

Here we see that it starts at my location in Paris, is passed onward to Amsterdam, and then to Telekom Malaysia, after which we get no further return. The final IP address to respond, when subjected to these same checks, is also a Telekom Malaysia IP address. It looks exceedingly unlikely at this point that this IP address is anywhere other than the Malaysian university previously named. If the user is absolutely certain that this is wrong, they can try running a traceroute from their end (e.g. with an iOS app for that purpose) and you can inspect its results for any possible clues. Finally, it's possible that the user is connected to a VPN provided by the university. In this case he will always be identified as being at the university regardless of his location in the world, and if he wants to be identified as to his actual location he should turn off the VPN and connect directly. 

If your ssh service is open to the Internet, then you need two-factor authentication (8.3). This requirement applies to any account with access to any system on which cardholder data is present (except for accounts which only process transactions and only have access to the data they're processing at that time). You should also have two-factor authentication on your internal network (8.2). The ssh key counts only as one factor, (something you know) even if it has its own passphrase. This requirement will be missed by an external scan since it can't be tested for. But auditors who visit you on-site should look for it. 

Reloading php-fpm interrupts active connections, such as yours in this circumstance. When possible you should avoid doing it, or if you can't, do it asynchronously, after you've completed sending the data to the browser. 

Modern systems are generally installed with a much larger /boot partition than in the past. The number has just been growing over time. Consider: RHEL 5 created a 101 MiB /boot partition. 

Ultimately, though, the problem here is that your yum configuration has some package exclusions which are probably inappropriate. Inspect the and files in to determine where these exclusions are, and then remove them. Oh, and you probably also need to re-enable the repo. 

The directory you intend to deploy to should already exist and have the correct ownership and permissions before you try to run Capistrano to deploy to it. So you need to handle that beforehand, probably in the same chef recipe where you created the user. 

Stick the SSL certificates in a tiny Docker volume that's shared between your letsencrypt container and your nginx container. While you're at it, you may as well let nginx intercept Let's Encrypt challenges as well, which might simplify your architecture a bit. Use haproxy instead of nginx. Unlike nginx, haproxy is capable of passing through SSL connections (and doing a variety of other things that are useful in a containerized setup). Note that this requires SNI support, and so such sites won't be accessible to ancient web clients which can't support SNI. 

On that note, you really should not try to use the same server for multiple purposes. If you want to run a Zabbix server, run only the Zabbix server (and any services it needs to operate, such as Apache). Don't try to make it your Zabbix server, email server, general web site, VPN endpoint, and the kitchen sink. 

MySQL commands are not case sensitive. However, many people capitalize them anyway to make them visually distinct from other parts of the query. 

Your server has an package installed that doesn't match that in any of the repositories you currently have. It is also newer than that in any of the repositories you currently have. Interestingly, its source isn't identified there in your output. You might find more information about the package with . To resolve the issue, you can do one of two things: 

After some digging, I was able to determine that accesses from 80.40.134.* originated from TalkTalk Virus Alerts. This ISP is monitoring its users' web traffic and scanning the pages its users visit for viruses/malware. Mediapartners-Google is just Google AdSense. You placed Google ads on your page, so Google is reading the page text in order to provide ads targeted to the content. The final example you gave is self-documenting; try visiting the URL given. 

You installed PHP from the remi repository, but you disabled the repository. So yum can't install additional packages from it. To resolve the problem, re-enable the remi repository. 

Running a mailing list on a postfix server myself, I expect to see 2,000 messages get processed at least once (i.e. they might be deferred) before you can finish making a cup of coffee. Your system appears to be running spam and virus scans on outgoing mail. While it's a good idea to scan incoming mail, it's probably not so good an idea to scan outgoing mail, especially if the source of that mail is already well-controlled. We can see that this is adding several seconds to the delivery of each message, and that it is also driving up your disk I/O dramatically. I would reconfigure Postfix to stop scanning outgoing mail. If you have a need to scan outgoing mail normally, e.g. for the people in your office sending mail from their computers, then set up a dedicated mail server specifically for handling the outbound mailing list traffic. 

I checked the repo and it appears correct. However, your package list doesn't look right. Specifically: 

The first thing you're missing is a 404 error handler. WordPress Multisite pretty much requires this. 

Everything on this list is end of life, or shortly to be end of life. You're on your own for installing any other OS. (And if you want to ask a question about that, you need to specifically ask about it and provide a lot of detail.) My recommendation would be to put this beast back in the dumpster that it came out of. 

Bsaed on the fact that it starts with a single backslash in the error message, it looks like an escaping problem. PowerShell has an annoying habit of treating anything that begins with a backslash as a regular expression. Try escaping that parameter. Three possible ways come to mind: 

KVM provides paravirtualization drivers for several bits of hardware; this particular one is the memory balloon driver. In particular, you should see when using the virtio network drivers, and when using the block device (disk) driver. And in the latter case, your disk would be instead of . In your case, the virtio disk and network drivers are compiled into the kernel, rather than as modules, so you would not see them with . 

You should be using a , not a (which is invalid). The Wikipedia page notes that the is a nonstandard extension used only by nnCron, which you aren't using. In any case, if the day of week is set to and the day of month is specified, then the day of week is ignored. The IEEE 1003.1 spec you reference actually states this, explaining how these fields interact: 

Don't set them up this way unless you have routed the block of IP addresses to a vRack. And, with such a small block, you should not attempt to route it to a vRack or you'll only have one usable IP address. If you route the block directly to your dedicated server, you may use each address individually with a /32 prefix and your existing default gateway. For instance: 

You can easily configure Dovecot to act as a POP3 server. Simply add the protocols to the Dovecot configuration file. For example: 

You're using upstream PHP directly, rather than Red Hat's packages. While Red Hat has backported the security fix to their own PHP packages, PHP themselves have not released a security fix. PHP only patched this issue for 5.4 and 5.5, so you should either use Red Hat's packages, or update to 5.4/5.5. 

You can try tuning TCP keepalive to much shorter values. By default a connection can be idle for two hours before keepalive kicks in. Exactly what values you should use is really dependent on what your application does and what your users expect or how they interact with it. 

Resizing an ext4 filesystem won't affect any open files. Anyway, your error message is about , which isn't used for regular files. It's used to write to sockets, such as network connections or UNIX domain sockets. You should also look at the timestamp... 

If you're running PHP as CGI/FastCGI then you don't get the (also known as ) function. However... As of 5.4.0, PHP includes a version of this function which works in FastCGI. For previous versions of PHP you can roll your own. Though this approach loses case sensitivity for header names (CGI/FastCGI capitalize all header names) it's generally good enough for 99.9% of possible purposes. This is my code for doing so, written long ago and published under LGPLv3: 

Considering that this is an "emergency" situation, you should do the following only for so long as it takes you to get competent staff in place and a more reliable long-term backup strategy. Do not do this forever.