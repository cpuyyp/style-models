This doesn't eliminate the possibility of collisions on one side as a result of a configuration mistake, such as half-duplex on one side and full-duplex on the other. That's fairly common. 

I'm pretty sure you're thinking of 802.1x. You can use that to permit hosts based on MAC addresses. This isn't the most secure way to authenticate hosts since spoofing a MAC address is fairly trivial and can be achieved with a single command, in most cases. 

I manually set my router-ids as the management IP address I use to get into the router. To me, it just makes sense and makes getting into a neighbor seamless. Over at CCIEZone, they have a really thorough way of distinguishing routers on a network. I wish I would have discovered this sooner. 

You should consider policing since your concern is that they don't get more bandwidth than they have been allotted. This will give you a hard limit. Your shaping in this instance is just ensuring that 31457280 goes into the BE forwarding-class, not that they can't get more bandwidth than 31457280. 

The issue is that the link speed of the suspended interface is not the same as the rest of the interfaces in the bundle. Your working interfaces are operating at 

Unfortunately, I have found that this is happening for no apparent reason. The commit performed before this engine-id changed was a simple addition that resulted in the engine-id changing. Juniper covers the option in their TechLibrary, which says the default option is to use the default IP address of the device. After a lot of beating our heads against the desk, we have found that simply defining one with an explicit setting is the best option, as it remains consistent. 

This makes it impossible to login via the root account. If you absolutely needed to get into this account, you would have to perform a Juniper Password Recovery. 

What this final bit means is that you really can’t have your switch performing any DHCP functions, aside from DHCP-snooping. In the comments, you stated ”it is just L2 device”. I would check over your configurations more thoroughly, because you are attempting to implement that absolute basic configurations needed for DHCP snooping to function. You tested it on your test network, and it worked fine. Now your production network, with seemingly identical configurations, isn't working. Below are basic configuration procedures from the 3Com documentation; if these don't work, I would certainly be looking elsewhere. 

The most common problem for interfaces that refuse to come up to auto-1000 are damaged cables. This assumption alone shouldn't disqualify the possibility of a configuration error, though. Verify both sides of the interface are set to autonegotiate the link speed to make sure that isn't why your link hasn't come up to 1Gb. 

I’m trying to understand what you’re asking, and based on how you described the network setup, there isn’t any good reason to use private addressing; even if you need to use separate network for other functions. The link you provided in the comments advertises that it handle multiple subnets. I would start with setting your Draytek Vigor up as a DHCP server that assigns the public address space () you have been allotted. This will take away the NAT and allow inbound requests to your public addresses with relative ease. If you want to keep your private IP address space intact, then you would set up your server () as the DMZ for your WAN address (). 

This issue is happening across a ton of different devices. Models include EX2200-c, EX3300, EX4200 and EX4550 on version 12.3. Why is this happening and how can I make it stop? 

There isn't any good way to do this other than a crude nmap ping sweep of the entire subnet. You'll at least be able to resolve all of the addresses on the subnet to usable hardware addresses. Below is the commonly used verbiage. 

Just understand that if a device is plugged into one of those ports, your switch won't allow it to participate in STP and will likely wreak havoc on your network. Check out the Cisco docs for additional information. 

In order for to function correctly, the snooping device needs to be setup as just a layer 2 device (i.e. not performing DHCP functions at all). There are a few gotcha’s from 3Com's documentation, 3Com® Switch 4500G Family Configuration Guide (p. 405), which should still be applicable to your platform. 

I think BGP is probably your best bet in this situation. The number of tail sites you have quickly exceeds the benefits of most IGPs. BGP would allow you to achieve all of your desired implementation requirements, such as limiting tail site knowledge to the primary/backup DC, standards based protocol, ability to efficiently handle over 5,000 different routes, etc. OSPF is still an option; I just don’t think it’s the best option. You could always setup each leg of your network as a Totally Stubby Area so inter-area routes aren’t propagated down to the each site. Then you could have separate routing instances at each site to handle their networks independently of your head end. Each SPF recalculation is going to cost you a pretty penny on resources. How volatile these connections are will affect that, this could be often depending on how aggressive your timing is. Whatever your decision, BGP was designed to scale. And when anyone says they are looking for a way to scale to 7,000+ networks1, BGP is a no-brainer. 

If you setup EIGRP in conjunction with your static routes. EIGRP neighbor relationships will be built and your routing tables will be populated with routes to the different locations. No outage should really occur, because your routers will have a fully populated routing table with knowledge of how to get to the other subnets. Just remember, once everything is setup and running smoothly with both EIGRP and static routing, your still going to use your static routes until you remove them. Done properly, you shouldn’t even notice a blip in traffic flow. Compare your previous configurations with an example EIGRP configuration for R4. 

Locate the Offending File You should be sending all of your logs to a syslog collector, making option 1 the best solution. If, however, you aren't and would rather not delete all of your log files, you may fare better at finding the offending file yourself. You will need a tad bit more familiarity with Unix systems, but if you know your way around the CLI, you should be alright. First you’ll want to see how much over you are on that specific volume. 

This provides a more reliable SNMP setup that isn't prone to engine-id changes and eliminating access. Juniper does recommend that you use the option as opposed to the . This option is susceptible to issues in a virtual chassis setup. If a backup routing engine takes over, the SNMP engine-id will change to the interface of the new master.