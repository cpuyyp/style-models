It is a Linux distro that has Asterisk 1.8, FreePBX and Asterbilling all set up and ready to be configured. You burn it the same way as any other Pi image. After you have set it up the way you love you can consider one of these amazing devices from linksys/cisco and others. (That wont cost you hundreds and hundreds!) Linksys PAP2 

Looking at that you should be able to fit in 2.5Amps with 2 USB powered Hard Drives and the Pi running at full speed - With some power to spare. *Some USB 3.0 devices may not work on USB 2.0 HUB due to power constraints 

Because vendors try and squeeze everything in to the smallest area this usually means that they will generate a lot of area heat. Solution? There is no solution but try and research another WiFi adapter that runs cool. You can try and run your network in open mode and see if that helps cool it down. This is not a long term solution obviously. Disclaimer Because all Wireless chip vendors keep their designs secret.. there is no actual way to prove or disprove my answer with factual references. Each chip vender have their own design and some USB adapter get hotter than others. 

but to use the SPI you will need to compile or add the project and then reference It is only very new this project so you might find some issues but it seems like it works. You could also look into the source and see how the wrapped everything to call SPI and that could give you some insight for your own library. 

2.5" HDD usually require 500ma during spin up, and sometimes during seek - But during operation about 300ma- This is to conform with USB standards. Although, if inrush currents are supported (or not limited) then it may take up to 800ma on spin up to spin up quickly but will drop down to 500ma within seconds. So if you putting your Pi inside the 3.5" enclosure, then leeching 5v for the Pi will be fine. since the 5v for 3.5" HDD should allow up to 2A. The power supply is most probably 12volts (common jack), since 3.5" also requires 12V. The amps on the power supply don't mean anything in relation to the 5v line. It all depends on the regulator inside the 3.5" enclosure. Unless the power supply is 12v/5v (4 Pin jack)- Then you will have Amps rated for each voltage, with no regulator in the enclosure. That should be 12v/1a 5v/2a Generally speaking, the Pi will run from the 5v line without any problem when using a 3.5" enclosure, given that you are not using extra things like WiFi, Cameras, etc. LAN will be fine, since its always powered anyway. If you are planning on putting a USB HUB inside the enclosure, then you are going to run into trouble with power. --Edit-- If you do find that 5v wont be enough, you may as well use the 12v line and regulate it down to 5v for the Pi. You can use something like an UBEC, its cheap, small and reliable. (and will most probable enable you to use WiFi, Camera's etc with the extra power!) 

If both the pump and Pi use 5volts then simply use those wires to power what you need. Just as Olin said though, make sure the maximum current (Amps) can be handled by the power adapter. SO the Pi uses about 850ma on full load, and the pump can use, what? 2Amps. Then make sure you have at least a 3A 5volt power supply. If the voltages are different then you need a voltage regulator, one voltage for each device. At this point it might be better to use separate power adapters or some kind of custom regulated power supply. I wonder why this got migrated to here.. since its an electronics question... not a Pi related one?? 

A recommended one is AWX which has a remote control, media selecting, that you can control from any browser on any device. 

Its got a heavy python dependency but is very reliable and easy to setup via SSH. You can connect to the networks you need and it will always stay connected to the best one in range. With some more advanced config file editting I am sure you can add custom rules. Another way is to try WPA-SUPPLICANT but I always found that very unstable, and I tried various WiFi and power and all sorts. 

You need to put your script in /etc/rc.local. This script runs once when the OS starts. It runs irrespective of id any user logs into the system or not. Raspberry pi manual describes it in detail here. The .bashrc file is used to setup your bash shell environment when you login into bash shell. .bashrc does not execute if you don't login into bash shell. 

This is an excellent question as a lot of people want to drive loads using their Raspberry Pi. I'm not sure why you received a -1 your question may have need rephrasing. Yes, You can drive a load using a Bipolar transistor or a MOSFET. A MOSFET will be more efficient. 

My recommendation would be to add another layer of opto-isolation when driving the above relay. Here is how opto-isolators work. If possible, double the capacity of the relay (90A) to add scalability and over-current scenarios. There a lots of advantages of using SSR over mechanical relays. Here is an application note from IXYS that delineates the advantages of SSR over mechanical relays. I would not recommend you do it yourself unless you are licensed. Better get a licensed contractor as the voltages are lethal and one mistake would cause electrocution! 

Yes, you can use command line tools to play internet radio streams. I have used omxplayer to play internet radio streams with no NDMI/video head. I created certain shell scripts for station choices like Jazz, pop, etc. I would ssh into the "headless" box and start/stop playing. You can improve by invoking shell scripts via GPIO buttons. 

Master with daisy chained slaves: More scalable (adding slaves will not use additional pins) but will get more complex in operations. 

From Raspberry Pi Documentation: "The flow of boot begins with reading the OTP to decide on the valid boot modes enabled. By default, this is SD card boot followed by USB device boot. Subsequently, the boot ROM checks to see if the GPIO boot mode OTP bits have been programmed â€” one to enable GPIO boot mode and one to select the bank of GPIOs it uses to disable boot modes (low = GPIOs 22-26, high = GPIOs 39-43). This makes it possible to use a hardware switch to choose between different boot modes if there is more than one available." As per above, it doesn't seem that you need to program the OTP (One Time Programmable) bits to boot from USB. 

From your diagram, it doesn't seem that you have connected the LED to a GPIO! Here is a map of the GPIO connector: 

By looking at your question, it seems that you are trying to gather light data from multiple Arduino boards and using Raspberry Pi as collection (and may be reporting) point. SPI specification has no set length limitations but when run a few meters apart, it is susceptible to EMI/RFI, cross-talk, slew rate issues. Assuming your Arduino boards are far apart, you need a differential pair bus like RS485, RS422, etc. To answer your question in simple words yes, you can use SPI to communicate between 3 or more Ardunino boards contingent to proximity between your nodes. Master with three independent slaves: Simple in operation but limited to the GPIO pins required for each SS. Each additional slave will require one additional Slave Select pin. 

For a new system you would have to create a wpa_supplicant.conf file in /boot to configure your wifi. Follow this post for a new setup. 

When the energy in the cap is fully depleted, the power draw becomes higher than what the power supply circuit (excluding output capicator) can store and deliver. Hence the load does not get enough power (P=V.I). This is my understanding of the situation. As I mentioned, a better analysis can be done by measuring current and voltage (output power of the power supply). OP has not provided any specifications about the power supply used. I have personally seen these dropouts happen when using cheap 500 mA power supplies that are labelled as 1A. I would encourage OP to use a 2A power supply with the V, I monitor, and report back if issue still persists. 

Connect your RxD GPIO Pin (GPIO15) to TxD pin of your USB to serial adapter. Connect TxD GPIO Pin (GPIO14) to RxD pin of your USB to serial adapter. Connect your USB to serial adapter ground to Raspberry Pi Ground (Pin 6 of GPIO connecter) Use appropriate serial terminal program (depends on your OS and choice) 

The worst part is plugging in the hard drive. The initial jolt of power needed to spin the internal discs can cause the Pi to reset. But if your is not then that is fine. When it is spinning the power consumption is stable and low, even when accessing the drive it does not go up that much. If you have a Rev2 board and a good 2Amp power supply you should be OK. But be careful of adding any thing else. For example adding Wifi or 3G modem might just go overboard and start to cause issues. 

Windows IoT Core is simple Windows based ARM kernel that allows you to run single Universal Apps with limited background threads. It is not, as stated before a Windows Desktop environment, it is more like a sandbox. (although more and more features are added constantly) 

It is one of those mini dongles and its plugged directly into the Pi's USB port. I have the Pi powered by GPIO 2A and I removed the USB fuses. The USB are powered directly by the 5V rail from the GPIO pins so it can't be power problem. This dongle does work in Winblows very well even at 30% 

But that might not work either so try and use which inherently waits for everything to finish processing before exiting. 

That camera adapter is a multiplexer. What it means, is that you use software to select which camera you want to get video from and then record it. It is unclear if the camera has to initialise after you selected it.. or if it is constantly streaming video and all you are doing is "switching channels" The best application for this is 3D photography. So basically static objects that do not move. What you are trying to do with 360video will not work. After stitching you will get black holes all over the place and probably induce vomiting. You may get better results using USB WebCams that encode h264 on the webcam and store the stream on the Pi, download the data to a Xenon 3.8Ghz and stitch it... Ahhh.. were you thinking you could stream and stitch on the Pi? "No way, JosÃ©" 

Then you configure the SPA3102 to forward calls to uElastix and you can write custom scripts in Asterisk to execute PHP files, Bash Scripts or anything you want! TIPS 

You can use this I2C ADC add on for the Pi. You can then directly solder the Microphone onto this expansion board without the use of breadboard. It is slightly pricey but it looks like a good quality and well thought out design. So its Plug and play. 

And unfortunately the GPIO's on the Raspberry Pi are for educational purposes only. To learn programming and some engineering. Combing the Arduino and Raspberry Pi is a match made in electronics heaven! The cost of an Arduino, or an Arduino shield for the Pi (Like Alamode) and the Pi is still the cheapest option for a extremely powerful prototyping environment that can be used in production sometimes. We are talking about prices under USD80 for a full operating system with network connectivity, GPU processing, USB interfacing AND real time MCU for all the specialist hardware requirements. If you look around and price together all the shields for an Arduino the price will exceed and you won't even have a third of the features. Arduino is very easy to learn and has an abundant library of tutorials and code. 

I run iperf server on my Ubuntu NAS box that is wired directly to the WiFi router and then do a test from the Pi. 

Audio only on Raspbian. I have done this before with and it worked very well with audio streaming. Before we can install shairport we need to get a few dependencies. 

The Raspberry Pi has a built in hardware watchdog timer. For Raspbian To load the watchdog kernel module right now, issue the following command: 

Yes sure, you can isntall the Windows IoT Remote desktop client on your Windows 10 machine from the app store Then you will see on your Windows 10 desktop the exact screen as it would be on HDMI 

You need to connect your Pi to the router. This will give your Pi an IP address from the DHCP service on the router. This is the easiest way as it will get a Gateway set for which the Pi can then access the internet. Then you connect to your Pi via SSH using the IP address that the router gave it. You can find out the IP of the Pi by typing in the terminal if you got a mouse and screen connected to it. If it is headless, no keyboard and screen - Then the best thing is to log in to your router and look at the DHCP table. Most of the time the DNS record will show up as or You can even try and ping / connect to SSH using the DNS By just connecting a LAN cable between the two devices all you are doing is creating a separate, new network. This is also possible and you can configure your Ubuntu machine to work like a gateway and give the Pi internet, via your Ubuntu WiFi. This is called interface bridging It means you bridge your WiFi onto LAN port, then your Pi communicates with the Router via this bridge.