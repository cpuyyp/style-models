I'm using a fairly vanilla Ubuntu 10.04 server installation, and I'm experimenting with BTRFS. How can I create a BTRFS RAID1 mount? I've got two (2) 1Gig drives that I popped in the server and after running the following commands, it appears I've got a 2 Gig partition, not 1 Gig as I would expect. 

I'm looking at some scripts, and a number of them use this what is essentially this command in their "" target: 

I've got VMWare ESXi (the free version) machine that is booting off a 9650SE RAID-1 drive setup (two 1TB mirrored drives). I'd like to replace the 1TBs with 2TBs. Is there a safe way to do this? 

First, let me state, this was an IT goof up. They deleted an account, went "oops" and created a new account with the same credentials. I can't fathom why. Regardless, I've got a Linux (Ubuntu Server 10.04) box authenticating against an active directory server, and users logging in have local home directories and such. I'm stuck with one user name having a new UID (or SID in AD jargon). Over and above ing his home directory, what other interventions should I do? 

I tested fairly extensively with Ubuntu 10.04 Beta 2 Server in a VM, and was able to simply copy (read ) a cross compiled tool chain from an Ubuntu 8.10 VM. I created the tar myself, which is essentially a lot of stuff in . Now that I've got a bare metal installation of Ubuntu 10.04 proper, the copy isn't working. In particularly, I'm getting the error: 

Ping 10.10.100.100 --> 10.10.20.101 failed BUT didn't create any log output. Ping 10.10.100.100 --> 10.10.50.100 succeeded BUT didn't create any log output. 

I tried to ping a PC with IP-address 10.10.20.100 from a PC with IP-address 10.10.100.101, but it didn't succeed. Nor was I able to ping 10.10.50.101 from the 100-subnet. AND there is a weird side-behavior: The VLAN 20 is by accident (I have no idea why) acting like the 100 should. From there I can ping PCs in the VLANs 10 and 100, which should not be possible in the end. I have IPv4 forwarding enabled in the kernel and the external internet works as expected. Here is the complete output of : 

The problem is now at least partly solved (I'm fine with this). I was testing the network with Windows clients in the beginning, and both PCs had got the Windows 10 upgrade lately. The problem itself was really stupid: Windows didn't response to pings since there is some new security enabled by default in Windows 10. When I added one Linux laptop to the network I got to a situation where all others could ping the Linux laptop (default policy was ) but the Linux PC couldn't ping anything else (Windows didn't response to ping). Then I tried remote desktop to the Windows PCs in VLANs 10 and 50, from the Linux PC in VLAN 100 and boom - it worked! So there was no problem at all with the iptables/netfilter rules. Thank you very much for all answers and comments! Here is my final, working and simplified iptables config: 

Data reliability is the most important issue; power comes next, and I could care less about speed. For the data hardware I've chosen a 3WARE 9650SE-4LPML which will be hosting two (2) TLES enabled WD RE4-GP drives running RAID-1. The decision I'm facing now is what file system should I use? My preference is for something Linux based, and a file system that attempts not only file system integrity but data inegrity as well. Please comment on which file systems, OS distributions and for that matter hardware chosen that you think may best fit my requirements. 

I've configured to automagically mount a cifs share when users login; the problem is if a user logs into multiple times simultaneously, the mount command is repeated multiple times. This so far isn't a problem but it's messy when you look at the output of a command. 

The next time I logged and tried to create a user, the default domain was still there. How can I change default doamin in an OTRS installation? 

I was installing Server2003 Std and Server2008 Std on hardware recently. When joining the servers to the domain during the install, I was asked for credentials. I answered with the the DC's Admin user and password. What minimum level of credentials are normally required to join a member server to a domain? 

This is a time/space tradeoff that allows you to reduce the number of computations from 2168 down to 2112 with a space cost of 256 64-bit blocks (512 petabytes). Now, for some bizarre reason, all security tools seem to report 3DES-EDE as 112-bit without actually qualifying why. 3DES-EDE does not have a 112-bit key length, nor does it really even have a 112-bit effective key length unless you specify that your attacker has 512PiB of lightning-fast storage available alongside their massive array of DES-cracking ASICs. The practice of reporting it as 112-bit appears to have started with the "sslscan" tool, and has been copied by various other tools since then, leading to all sorts of confusion and misconceptions (I even saw this incorrectly marked in a security exam!) This isn't to say you shouldn't disable 3DES - it's an old algorithm now and there are problems with it, so it's probably worth moving away from it. It's just worth knowing why. If you want to do so, add and to your list of disabled algorithms. These names are defined in the cryptographic providers documentation, in case you want to disable any others. 

Before you go changing your SSL config, it might be worth understanding exactly what the vulnerability is here. When 3DES was introduced, there was a requirement that it was interoperable with legacy single-DES systems. The idea behind 3DES is that you can multiply the security by performing multiple DES operations with different keys. In order to provide compatibility, they used an EDE construction: 3 DES operations in sequence - Encrypt, Decrypt, Encrypt - or EDE for short. It turns out that a DES decrypt operation is basically interchangeable with an encrypt operation in terms of security, so this works quite well. When you use three independent keys for each operation (known as keying option 1) you essentially have a 168-bit key. If you want to go back to old single-DES mode, you use a different keying option (3) which has all three subkeys set to the same value, i.e. k1 = k2 = k3, so that two of the operations cancel out and only a single DES operation actually matters. There's also another keying option which has two of the keys with the same value but one different, producing a 112-bit key, but this isn't really used in reality and (somewhat confusingly) is completely unrelated to why you're seeing 3DES reported as 112-bit. To make things even more confusing, you'll sometimes hear people talk about 64-bit DES or 192-bit 3DES. These are, from a cryptographic perspective, identical to 56-bit DES or 168-bit 3DES. DES specifies a key padding system whereby 8 padding bits can be added to a 56-bit key to produce a 64-bit padded key. This was for use in some old systems and it's not really important, but the 8 bits can be ignored and only 56 bits are actually key material. In 192-bit 3DES the same thing happens, where each 56-bit subkey is padded with 8 padding bits, but again the real cryptographic key is only 168 bits long. Now, what's the 112-bit thing all about? 3DES suffers from a problem called a meet-in-the-middle attack. The approach is as follows: 

The is actually a script function that checks the status code and calls exit if necessary, nonetheless, How is the above any different than this: 

I need to install an older version of gcc on Ubuntu 10.04 (Beta 2); and I'm told I can install a previous package. At present, I can't compile version gcc-3.3.x, and I'm looking to install a package. How do I instruct to pull stuff from previous Ubuntu archives? 

I'm testing a backup to a bare metal restore. The new hardware doesn't have PS2 Mice/Keyboard and needs USB drivers: I can't log into any of the Safe Modes. I can however, put the original SBS2003 install disks in the machine and jump into Recovery Console. How do I go about installing board Chip Set drivers and USB drivers? Is it a simple copy? If so, what to where? 

I'm using Ubuntu 10.04 and have the directory setup as a BTRFS RAID 1 with two 2TB drives. I'd like to make the directory just a single drive; how do I safely go about doing this? 

I've configured my router to accept a public key SSH session with a passphrase. They key pair was generated using the PuTTY tools on windows. I can open the session from both Windows and Linux using the Putty tools, but I can't do so with on Linux. When prompted by for the keyfile's passphrase, it fails. Ex: