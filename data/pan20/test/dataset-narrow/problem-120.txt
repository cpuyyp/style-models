An ARP entry is marked as incomplete when the device in question (in this case your switch) can't get an ARP response from the host. This generally means that host IP doesn't exist, or you are filtering ARP responses on either the host (generally difficult to do), or on the switch (eg: using a VLAN access-map and blocking the ARP Ethertype). If your switch is L3 (eg: it is routing to each of those subnets), then it may be that devices elsewhere in your network are trying to reach them, and while the switch has the subnet locally attached to it, it cannot resolve ARP and work out the destination MAC. 

This works because the traffic that I’m sending is already pre-marked with DSCP; even though it is being classified by an EXP classifier on an ingress MPLS interface and that’s what we should really be using to determine forwarding-class on the egress interface, but obviously because it’s a non-mpls interface, we don’t see the EXP on egress. It bugs me that the box is clearly capable of scheduling egress traffic from an irb in this manner, but doesn’t support it in the more traditional (and saner) way through the CoS stanza. If you’ve got any better ideas, I’m all ears! 

After that, you'll need to make sure you're propagating routes from your VPC within AWS (so that you receive them via BGP) - the rough process for this is: 

Adding to Łukasz Bromirski's answer - it will also depend on the physical speed of your interface. If your 2Mbps link is (say) an E1 serial link, then your maths holds up, however if you have an Ethernet connection that is rate-limited to 2Mbps, then you will actually be transmitting at the speed of the underlying physical interface (say 10/100/1000Mbps), and some form of statistical shaper/policer will kick-in once you've exceeded your allocated rate for that second. 

The way the IETF models are being created (e.g.: RFC8022 - A YANG Data Model for Routing Management) there are separate trees for both the configuration and the operational state. The operational state containers are then defined as Read-Only through the use of the: 

No, it can't. CoA can change attributes of an existing connection (disconnect a user, apply different policy etc.), but SSID selection is a function of the wireless client (think Layer 1), not the authentication process (Layer 2). If you think about it from a Wired network perspective, that would be like trying to use CoA to patch a user into another port. 

I have often deployed RIP on the edge of MPLS VPNs on PE-CE links to give customers dynamic routing into their own VRF to good effect (though admittedly less and less these days). In this case it is a perfectly valid use - small RIB size (especially with a default out, local-site prefixes in), convergence time often isn't an issue (often only a single link to the site), hop count is fixed (eg: 1). Due to the meager control-plane requirements, this provides a very scalable solution for hundreds or thousands of CEs per PE. As Ron has mentioned - not all CE devices support BGP, and no (sane) carrier wants to run OSPF or ISIS across a network boundary. It seems to have become very hip in the last decade of Networking to hate on RIP or imply that using it is somehow a reflection of poor design/architecture decisions, but I tend to prefer simplicity and The Right Tool for the Job™. 

You can open two sessions to your box, and drop into the shell on one and use vi directly in the shell to edit your script in one window and test in Junos on the other. Run a webserver on your development PC that the box can reach, edit the file locally on your PC and then call it remotely. : 

In this version of code, I was able to get the vlan classifier to work (my VID10 counter was incrementing), but I could not get the policer to kick in, even though I was exceeding the bandwidth limit by a factor of 10. To be honest, I've had nothing but grief with EX4200 firewall filters over the years - what commits and what ultimately gets applied/works are two very different things! 

It sounds like your Aruba AP is not tunneling (all) it's client's traffic, and if so, this would be expected behaviour. This would happen in situations where: 

It is possible to have a uni-directional link - hence the need for protocols such as UDLD (Uni-directional Link Detection) and CFM (Connectivity Fault Management) on Ethernet switches to detect and remedy. $URL$ $URL$ You should be able to simulated this quite easily on some switches with fibre optic connections when you disconnect one of the connectors. I'm not sure that this will be possible on copper links though, as a port won't come up unless auto-negotiation has succeeded, which requires bi-directional communication: $URL$ 

The configuration list in the WebUI should be pulled from the rollback list on the Virtual-Chassis master RE member. Is the time correctly set on the box (eg: are you using NTP?) Is the device you are logged into on the WebUI definitely the VC Master? 

No, /24 is CIDR notation and refers to a 24-bit mask - so that particular prefix means 31.13.68.0-255. You can find more on CIDR notation via Google/Wikipedia. 

I tend to think of a network architecture as spelling out what it is you want to achieve with the network (linking together discrete areas of functionality/locations in a business) - and is written in a way that a non-technical person can understand it. It will talk more about functionality (connect to AWS, fail-over between data centres, security zones etc) than necessarily how this functionality will be achieved. On the other hand, a network design is more the nuts and bolts you will use to make the architecture happen (specific devices you use, routing protocol configuration, firewall rules etc.) and is targeted at a technical audience. I tend to work on the principle that the network design should contain enough detail that a Network Engineer should be able to take the design and build the complete network from just your document. As for the purpose of the architecture, it's to capture the business requirements of the network without going into detail as to exactly how they are going to be achieved. I like the phrase "Architecture is about doing the right things, Design is about doing things right" 

I don't believe this is possible, although Juniper's documentation is very vague. It is my understanding that in order to do FCoE, the EX4550 must be a stand-alone device, not part of a Virtual-Chassis. There is vague reference in the EX4600 doco that says: 

If not, try restarting the FPC (or the entire platform). Be aware of the following limitations on the QFX5100 depending on the model you are using: $URL$ One more little limitation I've hit using 4x10 break-out is that if you use at all, you can't reference any of the break-out interfaces in your statements. Juniper appears to have missed allowing the ":" delimeter in their regex, at least this is still the case up to Junos 17.1R1.8 

This can be found at the following URL: $URL$ You could test on a dummy VLAN on your EX-VC by trying to commit the following and see what happens: 

Wifi clients will continue to perform Active Probing of the entire Wifi channel space even when already associated to an AP - primarily so they are aware of other APs in the same SSID (on different channels) to roam to. You can prove this every time you associate to a network, open your wireless settings and see a real-time list of other networks you could associate with. When you talk about "packets" I assume you mean IP, which in this case is true - while the client probes will be sent out on all channels, IP traffic will only be sent to the AP the client is associated to. 

As Ron mentioned, the MD5 hash must match in order for a VTP domain to synchronise. Apart from the Domain name and the password, you will also need to ensure that the VLAN names match. Example: 

The answer is most likely in your question subject. If you change the route priority at the spoke so that traffic comes in via the VPN/Firewall, then return traffic will still most likely leave via the MPLS network (if nothing else changes). Your VPN firewall is most likely stateful, and will only have half a session in it's flow table eg: it will see the SYN, but no SYN/ACK, then when the client at the spoke sends the final ACK, the firewall will drop it because it is not in sync with the handshake. 

As mxrx mentioned - the length of time it takes to fail over is not a known quantity - it would entirely depend on the health-check mechanism running against the service, and the triggering of the BGP withdrawal. As to serving in different locations - the purpose of anycast in this situation isn't just redundancy, it is also performance. Under normal operating conditions, you would always want your clients to go to the NEAREST PoP, for primary or secondary services. Obviously with something as complex and opaque as Internet routing relationships, "nearest" from a routing perspective doesn't always mean nearest from a latency perspective, but the theory is, clients would always use services from their "nearest" PoPs unless there was an issue. DNS is an interesting one though - assuming the primary and secondary name servers you are provided aren't actually the same box in the back-end, then the delay in detecting failure and withdrawing the anycast prefix that covers both servers would need to be shorter than the delay for clients switching to their secondary NS (on no answer from the primary), otherwise clients are going to get no answer from both. 

CLOS networks simply describe the underlying L1 topology - mainly with regards to interface over-subscription and leaf interconnection. What you run on top of it (VLAN/VXLAN/IP Fabric) is really up to the implementation and the problem you are trying to solve. For the network you are describing (number of switches), it sounds like a simple Fat-Tree topology would suit better 

however, this will only give you an answer in one direction (from your local AS to the remote AS). The return path could be (and often is) completely different. Good network service providers will often offer Looking Glasses that you can use to examine their routing tables and/or run traceroute from for troubleshooting purposes, but unfortunately not all do. The following resources may help: 

Not really. Re-associations by existing devices (e.g.: coming out of hibernation, roaming from other APs etc) would appear identical to a new device joining. Short of writing a display filter that matched associations NOT from existing MACs on your network, this would be very complex to do. You would be better off tackling this from another perspective - e.g.: monitoring new DHCP leases (since most DHCP servers will maintain MAC-to-IP mappings for existing devices). 

Do you mean a customer of ISP B? If so, then no. If they (ISP B) are black-holing a specific /32 then this prefix will be more specific than any of your other prefixes received (from you or ISP A) and will draw traffic towards it from within ISP B. Blackholing a /32 will generally not propagate beyond an AS, so upstreams of ISP B will still receive your aggregate prefixes. Secondly, ISP B will most likely have a higher Local Preference set on your routes (since you are a customer) than anything they receive from other ISPs, so their customers will always use your link to them, regardless of any AS Path pre-pending you configure. This is purely an economic routing policy. 

This will put in an ip-block action against any source addresses that trigger this attack for 1 minute, and if any further attacks from the same source are detected (e.g.: it's a dumb bot), keep restarting the 60-second timer every time you see one. 

There are a number of ways you could do this depending on what you mean by "how much traffic". If you just want to log individual flows from that range, the following will work: 

IPoE is essentially DHCP-triggered subscriber interfaces. It has come about because most modern broadband access networks are able to deliver Ethernet from end-to-end (e.g.: xPON/FTTH). Users are "authenticated" through the use of DHCPv4/v6 Option-82 inserting their Circuit-ID into their initial DHCP Discovery - this identifies the physical location of the user based on the tail that they are connected to (this would be done at an aggregation switch between the xPON network and whatever backhaul gets them to their ISP of choice). After this it's pretty much boring old Q-in-Q to deliver all users from a specific neighbourhood to their various ISPs. The ISP will then service the DHCP request (if the Circuit-ID can be mapped to a valid user via RADIUS), provide an IP (and hopefully prefix-delegation if they're offering IPv6) and then create a logical interface representing that subscriber that you they apply their filtering/rate-shaping to and start grabbing stats from.