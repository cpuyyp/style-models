I'm just trying to update with "SetData" with new vertices and indices but i throws the exception: "The array is not the proper size for the Amount of data requested." 

I edited my fx file , for show you only information and functions about the shadow ;-) UPDATE : i tried with an orthagraphic matrix as we advice me, but still not work. i can no see the light and shadow 

I'm having some problem to draw textures with class "DrawUserIndexPrimitive" on Xna. I can draw my cubes / models without problem. But I want to draw different textures on my cubes. I loop on each "ID" of a different texture applied to my different cube. But it does not work. I apply every time buffer and vertexPosition with IndexBuffer different from my class "GraphicData." the final texture to be applied is the same on all my cubes thank you Here is my code for function "Draw" 

I've been doing a lot of research on this topic in the past several months and have gathered quite a bit of resources that you might find useful. Although I haven't come across an actual book about it, these articles are pretty long (and comes in several parts) so they are pretty close :) Take a look at these to get you started: Virtual Economic Theory: How MMOs Really Work - Simon Ludgate The F-Words of MMORPGs: Fairness - Simon Ludgate The F-Words Of MMOs: Faucets - Simon Ludgate Sell Your Money! - Simon Ludgate Designing For Free Takes More Than 'Just' Game Design - Soren Johnson MMORPG: Luck or Grind? - Simon Ludgate MMOs: Just a Matter of Time? - Simon Ludgate Tips on Developing an MMO Economy, Part I - Radu Privantu Edit: Removed a dead link. 

I already searched on google and found many people with the same problem. And I realized that it was a problem of encoding. With the return lines unrecognized '\ n' . I tried to copy and paste to notepad and save as with ASCII or UTF8 encoding. But the result is always the same. Do you have an idea please ? Thanks a looot :-) Here is my [.fx] file : 

i want to get only the green cube and not the red .. From the black cube in the middle Thank's a lot guy 

I developed a small 3d games xna and uses a "DynamicVertexBuffer" and "DynamicIndexBuffer" to store and draw my vertices. Everything works fine, but my problem is the "Update" function where I update my buffer. Each apel update I have to reset my buffer using the keyword "new DynamicVertexBuffer (...." It goes down the performance and reduce the frames per second of my games. Do I have to initialize my buffer each time in my function "Update ()"? Is it okay to reset every time my buffer to each call / frame I can not find a solution to update correctly my Dynamicbuffer with "setData ()" function without having to initialize whenever my buffer just before. Am I obliged to Reset-"DynamicVertexBuffer" and "DynamicIndexBuffer" before the update? If I call "setData ()" before reset it, I throw an exception: Works well but I have initialized every time "dynamicIndexBuffer" and "dynamicVertexBuffer" before update! (Consumes more resources?) 

The iOS application sandbox only allows a certain amount of RAM to be used and once you reach that threshold, any more texture loaded kicks out other textures out of RAM (cocos2d manages this for you I believe.) However in the worst case the application will crash if it does not have enough memory to run. So load only the textures you immediately need. You're holding a lot of unused textures in memory which is inefficient. iOS WILL clear your game out of RAM if it needs it. So if your game has a lot of textures loaded (using up a lot of RAM) and the player multi-tasks out to another memory intensive app and iOS needs more memory for that app? Your app will be killed and your memory cleared. The next time the player switches back to your app, they will start from the beginning. You can avoid this situation by not using more RAM than you really need to. Cocos2d also will clear out unused textures when it receives a memory warning. You may end up faced with a situation where the textures you thought you loaded, are no longer in memory and your application will crash when trying to create a CCSprite using the texture. 

I just want to load a simple *.fx file into my project to make a (pixel shader) effect. But whenever I try to compile my project, I get the following error in visual studio Error List: 

UPDATE: See photos below the description I try desperately to implement shadows on my XNA games. My game is a style of games like Voxel (minecraft). The problem is that I do not find support / help or example explaining how to add shadows on cubes (vertices and indices) with (BasicEffect). I just find examples to add shadows with a (HLSL Effect) or a "Model". Is it possible to create shadows with the class "BasicEffect" on vertices cube ? I already try with "Matrix.CreateShadow(...)" but no success . I really hope so. The logic of my function "DrawWorld": 

I think that the answer to this question is quite dependent on the structure of your game (level based? infinite runner?) However in general in my experience you don't want to load ALL of your textures at startup. There are a few reasons for this: 

No, if you are referring to writing Objective-C using the Cocos2D framework to do animations, your animator will not be able to do so without xCode. He could write the code in a text file and pass that to you, but will not be able to compile them to check that they do work (which really defeats the purpose I suppose.) However, if you only need sprite animations then the person can create the sprite animation using flash or some such software (then export the PNG of each frame for you.) Then you can use those animation frames in your app. 

As you can see , my nearPlane and FarPlane are set to 20f and 100f . So i don't know why the light stop after 2 cubes. it's should be bigger Here is set the value to my custom effect HLSL in the shader file 

Simply export your annimation from 3DS Max to a file type by supproter "XNA" (fx, fbx, etc. ..) And import your annimation in your project xna with "importer". (see the sample in the use of Microsoft Skinned model annim sample). Many existing tutorial to convert a model from 3ds Max to annim√© xna .. Here is one: Tuto 3ds Max to Xna model anim 

Assuming that all your bubbles are the same shape and size where the only difference is just their color, you can instead use a white bubble and change the Sprite's color like this: target.color = ccc3(0, 0, 0); Where the 0 values should be replaced by RGB values respectively. Then you can just generate a different color bubble each time, so you can just keep calling addTarget: until you have enough bubbles. 

I would recommend lazily loading textures as and when you need them. This also means you have to do a few things: 

The answer to this question may be "NO" but it's quite important so I think I might as well ask. This should be a problem for all client-server location-aware games where player locations in the world are central to the gameplay. Is there any way we can make sure that the location data that's coming from the client is real (i.e. the player is actually there)? Working on client-server games, we all know that we should never trust any information coming from the client and therefore all important game logic should be done server-side. However with location information, we MUST receive this from the client. Is there a way to double check this to prevent cheating? 

I developed a small and simple 3D games minecraft style. I would add a "MiniMap". Until here everything is fine. I had the idea to load the entire map in the background, and then I added the edge of the minimap over. So I can move the map when the player moves. My problem is that I do not know how to make hidden anything above the minimap. Have you any idea? I'm stuck in my development Here is a schematic of what I would do with my minimap. And hide all that is striped in red, outside the minimap. Thank a looooot ;-) 

I have not come across a way to define the type of axis that you're talking about, however I can offer a method that I've used to overcome this issue. The best method, and most easily explained to the artists on the project, is to make all the sprite frames for all animations for a particular character the exact same sizes. For example, if your character walks and punches, of course the walking sprites will usually be narrower than your punching animation. If you crop your sprites without leaving any empty spaces, your character will appear to pop around since the anchor point for a sprite is usually it's center, and the center of a walking animation and a punching animation are different. If you keep the sprite frames of all animations for the same character the same sizes and position the head in the same spot within the sprite frame each time (don't worry about the empty spaces within the PNG, since TexturePacker will strip those out for you) when the sprite is animated, the sprite will not shake around, of course, the bounding box for the character will be affected since your sprite's size will always be as large as your largest animation frame. This may or may not impact your collision detection code, so adjust accordingly.