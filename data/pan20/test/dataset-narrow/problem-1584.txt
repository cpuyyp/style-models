You should set a static address on your Pi or connect it to a network with DHCP server so it obtains a regular address. Once you have that fixed, you can proceed with debugging SSH connection (if the problem persist, but it's likely it will go away). 

The answer to the question if something is legal or not, depends on the interpretation of laws in a particular jurisdiction. This answer should not be treated as a legal advice. It is based on published information by the relevant party. Raspberry Pi Foundation made a clear statement that answers your question in the Starting a business with a Raspberry Pi article: 

It's for non-login shells, you are expecting it to be loaded for the login shell. And it's the same for any bash instance, regardless of the "Linux distro". 

This will copy the file on the Pi to the current directory on your local system. Then you can open with your local application. 

As of today, only the installation from source is available. The instructions you referenced are correct for version 3.6. To repeat: 

If you are able to put your Raspberry Pi between the device in question and the internet router, there is basically nothing special required. You can start with : 

Please provide your partition table ? If your root partition is boxed in by other partitions you need to move them first. This is what I normmally use to expand the root file system; 

I would call power cycling the rpi the second least data-integraty-safe thing you could do to it (high load beeing the worst). nice-ed rsync/ssh would be the safest for data-integraty and transmission-privacy. Both OS X and raspbian support disk encription, and backup software if you want them 

If you have a key from some other install cached in ~/.ssh/known_hosts for that IP, ssh will warn you. Just remove the old key to remove the warning. Putty uses the Windows Registry instead of a text file as it's the windows way. 

If you have installed any applications that use Java (libre office, web browser, eclipse etc) you will have the setting tools for Java (which is what you are seeing). To list installed things relating to Java: 

is what it sounds like; a place for applications to receive input events (like a mouse click). As @rob noted the USB interface on the raspberrypi is somewhat unstable so not using it (or using a power isolated powered hub) are good first steps to otherwise inexplicable behavior. 

There is no need for the dual-boot in the scenario you described. Kali Linux is a Debian-based distribution (just like Raspbian) which installs a certain set of packages by default. For most use cases it doesn't have any features (code) on its own, and does not require these packages to be running specifically under Kali Linux. You can install your required packages with APT, configure, and run them on Raspbian. An additional advantage would be that you would learn the tools dependencies and configuration. 

Seemingly it's a non-critical message listing the release notes for the packages being upgraded. It's displayed in a page viewer program, so: 

If your Android tablet is rooted, you can (try to) install BusyBox (for example using this app), unmount the file system connected to the USB port, and copy the image using command like on a regular Linux machine. If your tablet is not rooted: no. 

You need to transfer the file to your local PC. You can do it with command which accepts the same login credentials as . For example, if you connect to the Pi with and saved the image to user home directory, execute 

In Raspbian Stretch the script has been changed to a one checking existence of file (on the other hand, created/deleted at boot time). It doesn't check the on each login, but on the other hand if someone used an automated tool to change the password, they need also to explicitly remove the file, or reboot the machine: 

As It can conflict. (they use the same port) You can also just disable it's invocation if you want to keep using it. This is what it looks like on my raspbmc where ntp seems to be working 

Because booting worked, failed, then worked, sdcard corruption is unlikely, but maybe a file system check was forced slowing down the boot. 

Wood is an OK thermal insulator so you should cut/drill 2 holes to allow air to flow straight in the bottom, across the CPU/RAM/LAN and out the top. The raspberrypi is fairly resistant to EMF (EMC certs(CE,FCC,CTick,CRTC), is still working for me after sitting on a PSU for 3 years) so the PSU should not be an issue but you can wrap it in a faraday cage (aluminum foil) if you want. Test with a cardboard box and see what the CPU reports the temperature to be for the shape you want after an hour of intensive use. It should not be more than 10 to 20 above its surroundings, and not above 85. 

On recent official OS images this is disabled by default but likely you were using something else. If you want to check for sd card corruption just copy a 10 GB file to your card and then md5 the original and the one on the card. Plugging in a monitor to see what it's doing during boot is a good thing to try if this happens again. 

Each directory contains a text file containing description of the repository and its contents. For example the top of for looks like: 

No. Google never distributed Chrome for Raspbian and they ceased their support for 32-bit Linux versions in December 2015. 

JuiceSSH is an SSH client which in its free version offers only shell (text) access. JuiceSSH Pro - a paid version of this app - allows X11 forwarding and integrates with an X Server app. Refer to the How to tunnel X over SSH using Port Forwarding guide. On Raspberry Pi side you need to ensure option is set in . And then you need to add an environment variable before running your program. 

The next message in the trace should be , so it is the Raspberry Pi who ends the connection. At this time Pi should also send its server keys for the client to authenticate. Your log is consistent with the situation in which someone removed all the server keys from the Raspberry Pi. You can check this with: 

This time APT will fetch version 5.5.53 instead of the 5.5.52 removed from the repository. As a general rule, you should always use before installing packages. 

Your Raspberry Pi does not need to know the router's IP address, it's your Dynamic DNS provider who needs to know it. No-IP client sends a web request containing your device ID (credentials) to the DDNS service provider. The request is relayed using your router and as NAT (Network Address Translation) takes place, the Pi's local IP address in the packet is replaced with the router's public one. The Dynamic DNS provider sees the request as coming from your router's public IP address and updates the record for the device to this address. 

The Fedora ARM version will only run on the rpi2 (ARMv7). No one has bothered to make an ARMv6 build of 21 or 22 yet. Keep an eye on this; $URL$ 

No; The pi B and B+ get a lot of THD around 10kHz (ref). The Hifiberry claims 192kHz (ref) but fails to show a frequency response curve. Some Linux is not supporting anything over 192kHz (ref). The HiFi Shield for C2/C1+ will do 50kHz (ref). No Pi has a dedicated DAC (ref) so sound is PWMed to about 11 bit 10kHz. So, if someone made an amplitude fall off curve for an external DAC, and you found a suitable amplifier and speakers, it might be worth a try. 

Yes the repository must be specific to the CPU architecture you are using. Raspberry Pi Is not a x86. 

Start here: $URL$ vhosts is likely what you want because Patricks answer (running 2 services) requires more RAM which is limited on the raspberrypi. 

You would have to find, repourpus, or make your own measurement hardware, like this person did; $URL$ 

This script can be used on the rpi it is resizing. It assumes the root partition is the last one and it's name is hard coded. backup before use. Read the man pages for extended details. 

The error "No libjansson found" means the library called Jansson () is not installed on your system. You need to install it (and you already figured out a correct way to do it yourself): 

Repositories for officially released versions contain latest stable release. Repositories with the suffix contain Debian 7 and 8 backports introduced into staging, but not yet officially released. Repositories for not yet official Stretch contain latest releases according to their release cycle. 

This is a trace of a default script (introduced in the November 2016 Raspbian release) which checks if you changed the password for the user . The script is stored in and displays a warning if the SSH deamon was turned on, but the password for the user had not been changed from the default one (). It is called on each login. The script in its original form: 

No. Captive portal must somehow intercept and redirect the client's traffic. It would be a disaster if plugging a device into a properly configured network would allow for interception and manipulation of other devices' communication. Redirection in captive portals is performed usually either using DNS or ICMP. In the first method the DNS settings must be altered. In a typical scenario, which you described, these settings are provided by the router or access point to the client machines. Just plugging Raspberry Pi into the network will not alter router's (or AP's) settings. In the second, Pi would have to route packets for the client - again, connecting the device to the network will not alter client's communication path. 

When Chrome uses more memory than the rpi has it can be killed, solution: use more swap, run nothing else when using chrome, use only one tab, use the official browser instead, use uadblock, use a pi2 or something with up to 16GB ram for bloated sites or tab heavy browsing. 

You are using 2 different s, the one from apple thinks you want , and the one from Debian thinks you want . if you want the former use instead, and if you want the latter just don't use as it is redundant because it's part of which is part of so there is no need for you to use it because you are using . If you want a more compatable rsync you can get one from macports/homebrew/etc. Regarding "paths are relative", they are not. It's just that rsync is not expanding to so you can use absolute , relative , or pre evaluated variables . To permit deleting files, run the script as root or prefixed with sudo, or without the (equivalent to ) (use instead) 

The auto white balance on the camera can be a bit slow and it is sensative to timing and other options. Use for a list of options: 

where is the IP address of the network device you want to monitor. This will show you incoming and outgoing traffic for the specified IP address. You can also try Wireshark. For both tools there are countless tutorials on the internet, but your filtering requirement seem to be really basic. 

But to modify you need root permissions, so you are effectively locked out. Your only option is to remove the SD card, mount it to another system, and modify the files accordingly (either to regain access directly or to confirm the above). 

And the file will be transferred to your current directory. Assuming your Raspberry Pi is accessible through its default hostname in the local network. Also assuming the user has read access to the file. 

Notice the sign in the line you entered on Mac. This results in an error, because you try to assign value to the method of the object. SSH connection plays no role here. Everything you enter is executed and interpreted on the Pi. 

Use different IP network on the Ethernet and WiFi interfaces. It might be as easy as changing the network mask to split the 192.168.137.0 into two networks, or not. It depends on your whole network configuration. 

All known instances of other cameras working with the rpi should be listed on the wiki. Start with a USB version with linux support (first google hit). You will likely get better results with the pi camera as most other cameras use slower ports. 

Sleep is a good tool for pin monitoring (no cpu usage). Python is a bit memory hungry so you want to keep the process count down but 1GB is a lot to play with so you likely won't have to worry. Use cron for the sensors to reduce memory overhead and coding. 

That will permit ssh(22) in from anywhere and http(80) in from only your local network (assuming your gateway is 192.168.1.1). The rules are obviously changeable via ssh, or you could just use a vpn and never expose anything on that NATed computer directly to the web. 

@Kieran mentioned "space" bar and "B+", neither of which I think will help with your sound problem. Please provide evidence the CPU speed is the cause of your sound problem or edit your question to say it's only your assumption. if CPU speed is the issue underclocking should make it worse and upgrading to a rpi2b may help if the emulator is multi-threaded. But I seem to recall there is a setting for sound fixes. Try editing /etc/retroarch.cfg $URL$