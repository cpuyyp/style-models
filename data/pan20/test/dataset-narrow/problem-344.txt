A PostgreSQL instance will keep a client connection up and running until the connection either reaches a specified client timeout or the client (application) closes the connection. A change of password has no effects on existing connections and will only affect new connections. There is no mechanism that constantly checks if the connection is still "password valid". A client connection is a one time authentication and if it was valid at the time of authentication will keep on being valid until closed. 

It's not highly recommended and is best tested in a non-productive environment first. Currently there are no documented cases of the collation being changed during the setup of a service pack on SQL Server. If you don't find any information in the setup logs, then I would try and contact Microsoft and open a case/ticket. 

Great, the TLog can now continue logging modifications at the beginning again. Optimal Virtual Log File Sizing (advanced topic) Having an adequate VLF size (not too big, not too small) can help keep TLogs at bay. Additional reading: 

Make the INITIAL extent size smaller Empty the recycle bin Add a datafile the tablespace to provide a larger contiguous chunk size. Reorganize the tables in the tablespace 

If the part is left in the it breaks the Simpana backup, which is why we omitted it. The above configuration should result in the WAL files being copied from the directory to the directory, when ... 

You might want to have a look at the following article: Configure and Manage Stopwords and Stoplists for Full-Text Search (Microsoft Docs) 

You have a misconception in your thoughts. A Windows login which is used to create a SQL Server login does not require a password. Solution When you create a SQL Login using a Windows account you have to use a different syntax. 

Bypass Startup Options Alternatively try opening the Access database while bypassing any startup options: 

Estimate size of decompressed data With the following script you can create an output which you can then use to query all the objects that have compression turned on: 

Instead of just running the code and modifying the delay period, open up a Query window and execute the first portion of the SQL statement up until the part. Then execute whatever you have to do. After the query has executed run the second part of Paul's script to output the differences found. (The part after the ) 

E.g. if your database is YOUR_DB, the SQL Login (SQL Server level) is YOUR_SQL_LOGIN and the database user you are relinking is YOUR_DB_USR, then the command would be: 

You might then find out that a database is linked to on of your Windows/AD accounts. There is a slight difference between a SQL Login (native or Windows account) having the role db_owner and an account being the database owner. If you do find a database with an account linked to the Windows/AD account you want to get rid of, then execute the following command while connected to that database: 

Description The above mentioned solution is a PHP page which allows you to enter your connection details and then just queries your database for the string. The PHP program iterates through the tables () stores this information in an array and then iterates through the of each table to retrieve the columns to search. It then performs a simple . The standard version searches only in fields, but this can be altered in the source code. 

... the user using the sa account is unable to enter the correct password after n attempts, which results in a lock out. ... the hacker is unable to gain access again, which results in a lockout. ... somebody is just having fun locking out the sa account. 

The advantage is that your data is still in the old column definition up until you drop the column after testing the application and/or data. This can be achieved as follows: 

Synchronous Replication If you want to retrieve up-to-date data, then you might want to consider using a normal view or a synchronous replication. 

In the above example you are connecting to (as the source) and (as the target) and are then copying the permissions from to . So you could use: 

This issue has been posted as a Microsoft Connect item. 2012 SSMS System.Windows.Media.Fonts Exception On New Query A possible workaround was posted by the author as follows: 

You can't. SQL Server Profiler is a bit restricted in the way it displays and filters data. Solution You would be better off storing the traced data into a separate table on the same server and then querying the data at given intervals. The big benefit being you have the data in the table and can perform any complex statement you wish. Ensure you don't capture too much data by specifying one or two filter criteria. You could also consider running the SQL Server Profiler from the command prompt which will reduce the overhead of displaying the data constantly in an interface. The parameters are: 

SSMS is only a tool that connects to a SQL Server instance. SQL Server listens on a specific IP address for connections. It doesn't really care which tool is connecting. SQL Server is not like PostgreSQL that has a where you can restrict connections, nor is it MySQL where you assign permissions to a combination when creating the user login. Answer It's not currently possible by using simple means (PostgreSQL, MySQL), but if you are willing to start creating Logon Triggers (Microsoft Docs), then you might be able to build a restriction that meets your requirements. The SQL Syntax for triggers can be found in the article CREATE TRIGGER (Transact-SQL) (Microsoft Docs). The article lists an example for a Logon Trigger. Because your requirements are pretty dire, I am unable to provide a solid solution. Please edit your question and provide as much details as possible. 

So according to A PENDING OFFLINE undo tablespace cannot be used by another instance, nor can it be dropped. you would have to wait until Oracle has fully switched the current UNDO tablespace completely. Try querying the status of the tablespace with : 

So for each SQL Server instance running on the same virtual server the network team has to provide an IP address for the virtual NIC and create a CNAME/Alias for the instance's IP address. Each virtual NIC has to be configured for the correct IP address and the SQL Server Configuration has to be correctly configured for each instance's IP address (listen on this IP address, active for this IP address, ....). The SQL Server will not respond to the typical SERVER\INSTANCE notation, which means the servers are only reachable via the Alias/CNAME (e.g. SQL_SERVER_01_I00) The (virtual) hardware Before I forget, I think it might be a good idea to give you an idea of the typical virtual hardware configured for such a bunch of SQL Server instances. Disks The virtual disks are pre-configured in VMware and attached to the SQL Server. Some hardware vendor in the background. Could be IBM, could be Hitachi, .... A disk for the MDF files and a disk for the LDF files. Processors Yes, multiple processers. In this example four logical processors @2.9 GHz Memory A mere 32GB for this server. Each SQL Server instance is configured to consume between 1GB and 4GB of memory. This server has for example 6 instances, each containing between 1 ... 10 databases varying in size from a few 100 MBs to a couple of GBs. Nothing massive. SQL Server Instance Configuration Each SQL Server instance will be configured as follows. max degree of parallelism Default (0) Memory Min Memory will be set to 256 MB and Max Memory to between 1GB and 4GB. Affinity Mask Not configured. cost for max degree of parallelism Default (5) My thoughts From my experience, I learnt that having single instances is the best regarding configuration settings and when analysing issues. But this doesn't seem to be an option here. So no need to start discussing in that direction. I know. I figure that having only 4 logical processors and MAX_DOP set to 0 for all seven instances and the multiple databases in the background is a bad idea. If one system lags, then they are all going to lag seriously. The question(s) Seeing as you got to know my environment, I guess somebody out there will have a similar configuration and will be able to provide me with some script to analyse everything or be able to point me in the right direction towards recommendations. Here goes: